{"version":3,"sources":["api/SnackOverflow.js","context/AuthContext.js","components/PrivateRoute.js","context/CartContext.js","styles.js","components/Navbar.js","components/SnackSearch/SnackCard.js","components/SnackSearch/Snacks.js","hooks/useSnack.js","components/CarouselItem.js","components/SnackPage/Snack.js","components/Footer.js","components/Account/LoginSignup.js","components/Account/OrderCard.js","components/Account/Account.js","hooks/useOrders.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Checkout/CardSection.js","components/Checkout/CheckoutForm.js","components/Checkout/CheckoutItem.js","components/Checkout/Checkout.js","components/Checkout/CheckoutSuccess.js","components/Checkout/CheckoutRoute.js","components/Contact/Contact.js","components/Account/OrderItem.js","components/Account/Order.js","components/AdminRoute.js","components/Admin/TopProductCard.js","components/Admin/Dashboard.js","components/Admin/OrderCardAdmin.js","components/Admin/Orders.js","components/Admin/ProductCard.js","components/Admin/ProductsAdmin.js","components/Admin/MemberCard.js","components/Admin/Members.js","components/Admin/OrderAdmin.js","components/Admin/EditProduct.js","components/Admin/ProductPurchasedCard.js","components/Admin/ProductInfo.js","hooks/useProduct.js","components/Admin/CreateProduct.js","components/Admin/Admin.js","components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","AuthContext","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","useEffect","accessToken","setRefreshTimer","refresh","token","msToExpire","jwt_decode","exp","Date","now","oneMinuteToExpireMS","setTimeout","login","username","password","a","loginRequest","SnackOverflow","post","response","status","data","authenticationToken","get","auth","logout","Provider","value","useAuth","useContext","PrivateRoute","rest","render","location","to","pathname","state","from","SNACK_OVERFLOW_CART","ACTIONS","CartContext","findCartItemIndexByProductId","cart","productId","i","length","cartReducer","action","type","cartItemMatchedIndex","quantity","newItem","productName","push","Array","splice","localCartData","localStorage","getItem","JSON","parse","err","CartProvider","useReducer","dispatch","loadCart","setItem","stringify","cartContextValue","addItem","removeItem","updateItemQuantity","clearItems","getItemCount","cartItemCount","useCart","useStyles","makeStyles","theme","container","padding","content","appbar","backgroundColor","palette","secondary","main","toolbarContainer","paddingLeft","paddingRight","toolbar","flex","display","alignItems","toolbarMenu","breakpoints","down","up","mobileIconButton","menuButton","color","toolbarMenuMobile","socialsMenu","logo","height","paddingTop","paddingBottom","logoContainer","shoppingCartButton","bottomToolbar","primary","toolbar2","toolbar2Menu","toolbar2MenuItem","textTransform","fontWeight","toolbar2MenuMobile","toolbar2SearchContainer","marginLeft","marginRight","width","search","spacing","footer","loginSignUp","flexDirection","flexLineBetween","marginTop","marginBottom","borderTop","borderTopStyle","borderTopColor","borderLeft","borderLeftStyle","borderLeftColor","signUp","snacksPaginationContainer","justifyContent","snackCardContainer","snackCard","snackCardImage","snackCardContent","overflow","snackCardActions","snackCardQuantity","snackPageContainer","cartHeader","cartHeaderTitle","cartItemCard","cartItemCardActionArea","cartItemCardImage","margin","cartItemName","cartItemPrice","cartItemQuantity","textAlign","cartItemCardActions","checkoutHeader","checkoutHeaderTitle","checkoutForm","checkoutItem","checkoutItemName","checkoutItemPrice","checkoutItemQuantity","checkoutTotal","checkoutOrderInfo","addressCard","orderListTitle","orderListTitleMobile","orderCard","orderCardMobile","orderCardActionArea","orderCardActionAreaMobile","orderCardActionAreaItem","orderCardActionAreaItem2","orderItem","orderItemImageContainer","orderItemImage","orderItemName","orderItemPrice","orderItemQuantity","orderDetailsBillingAndShipping","orderBillingAndShippingCard","dashboard","dashboardMenu","dashboardMenuMobile","dashboardMenuItem","dashboardContent","imageSection","editImageContainer","editImageContainerImageContainer","editImageInputImage","minHeight","maxWidth","editImageInputTextInput","deleteImageContainer","productCardHorizontal","productCardHorizontalTitle","productCardHorizontalMain","productCardHorizontalImage","productCardHorizontalName","productCardHorizontalID","minWidth","productCardHorizontalDate","productCardHorizontalPrice","productCardHorizontalUnitsSold","productCardHorizontalFiller","verticalCard","productCardVerticalImage","selector","success","error","carouselImageContainer","alignContent","carouselImage","orderTitleFiller","adminSelector","adminSelectorMobileContainer","adminSelectorMobile","adminSearchContainer","adminSearchBar","memberCard","memberCardMobile","dashboardTile","dashboardTileItem","homeCarousel","snackCarouselItem","snackCarouselItemContent","snackItemCarouselImage","snackItemCarouselDescription","Navbar","classes","history","useHistory","setSearch","isAdmin","decoded","authorities","map","authority","includes","accountButtonText","anchorEl","setAnchorEl","handleMenuClose","handleClick","url","AppBar","position","className","Container","Toolbar","Box","IconButton","href","target","onClick","src","process","Button","size","Typography","variant","aria-label","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","Paper","InputBase","autocomplete","placeholder","inputProps","onChange","iconButton","SnackCard","snack","setQuantity","Grid","item","xs","sm","md","Card","CardActionArea","snackClick","CardMedia","image","images","title","name","CardContent","gutterBottom","component","price","toFixed","description","CardActions","TextField","label","min","val","parseInt","isNaN","addToCartClick","Snacks","useLocation","snacks","setSnacks","pageNumber","setPageNumber","pageNumberUI","setPageNumberUI","totalPages","setTotalPages","sortBy","setSortBy","direction","setDirection","urlParams","URLSearchParams","currentPage","getSnacks","params","pageSize","itemsSold","sortDirection","FormControl","InputLabel","Select","labelId","pagination","Pagination","count","page","handlePageChange","setSnack","getSnack","CarouselItem","Snack","useParams","useSnack","navButtonsAlwaysVisible","next","prev","deleted","Copyright","align","Link","getFullYear","Footer","Login","setUsername","setPassword","callback","replace","startsWith","usernameError","setUsernameError","passwordError","setPasswordError","paper","form","onSubmit","preventDefault","isValid","validator","isEmpty","isValidated","noValidate","required","fullWidth","autoFocus","helperText","autoComplete","submit","SignUp","signupSuccess","setSignupSuccess","signupError","setSignupError","fullName","setFullName","email","setEmail","passwordRepeat","setPasswordRepeat","fullNameError","setFullNameError","emailError","setEmailError","passwordRepeatError","setPasswordRepeatError","signup","signupRequest","message","request","isEmail","ignore_whitespace","isAlphanumeric","contains","isLength","max","isStrongPassword","minLength","minLowercase","minUppercase","minNumbers","minSymbols","LoginSignup","OrderCard","order","itemClick","createdDate","toLocaleDateString","toLocaleTimeString","total","Account","orders","setOrders","setToken","getOrders","headers","Authorization","useOrders","CartItem","cartItem","product","style","Transition","React","forwardRef","props","ref","Slide","Cart","isTotalTooLow","setIsTotalTooLow","items","cartInfo","setCartInfo","loadCartInfo","cartInfoRequest","Dialog","TransitionComponent","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","CARD_ELEMENT_OPTIONS","base","fontFamily","fontSmoothing","fontSize","invalid","iconColor","CardSection","options","CheckoutForm","clientSecret","stripe","useStripe","elements","useElements","paymentErrorMessage","setPaymentErrorMessage","billingName","setBillingName","billingEmail","setBillingEmail","billingPhone","setBillingPhone","billingAddressLine1","setBillingAddressLine1","billingAddressLine2","setBillingAddressLine2","billingCity","setBillingCity","billingState","setBillingState","billingPostalCode","setBillingPostalCode","billingCountry","setBillingCountry","isShippingSameAsBilling","setIsShippingSameAsBilling","shippingName","setShippingName","shippingPhone","setShippingPhone","shippingAddressLine1","setShippingAddressLine1","shippingAddressLine2","setShippingAddressLine2","shippingCity","setShippingCity","shippingState","setShippingState","shippingPostalCode","setShippingPostalCode","shippingCountry","setShippingCountry","submitting","setSubmitting","confirmPayment","shipping","address","line1","line2","city","postal_code","country","phone","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","result","paymentIntent","handleSubmit","formControl","checked","e","disabled","CheckoutItem","stripePromise","loadStripe","Checkout","setClientSecret","startCheckoutAndCreatePaymentIntent","client_secret","InjectedCheckoutForm","CheckoutSuccess","CheckoutRoute","Contact","OrderItem","orderItemClick","Order","setOrder","getOrder","orderDetailsCard","billingDetails","addressLineOne","addressLineTwo","postalCode","shippingDetails","AdminRoute","TopProductCard","productClick","unitsSold","Dashboard","orderStats","setOrderStats","newUsers","setNewUsers","topProducts","setTopProducts","range","setRange","getOrderStats","getUserStats","getTopSellingProducts","orderStatsClick","root","successfulOrders","unsuccessfulOrders","totalIncome","unsuccessfulPayments","UpdateOrder","buttonSize","setStatus","setOpen","useTheme","fullScreen","useMediaQuery","submitOrderUpdate","updateOrderRequest","put","handleClose","startIcon","OrderCardAdmin","user","Orders","ProductCard","editProductClick","ProductsAdmin","products","setProducts","includeOrders","setIncludeOrders","handleIncludeOrdersChange","handleSortByChange","handleDirectionChange","getProducts","MemberCard","member","role","orderCardActionAreaItem1","joinDate","Members","members","setMembers","getMembers","OrderAdmin","Images","setImages","index","arrayUpdate","updateImage","deleteClick","EditProduct","setName","setDescription","setPrice","successMessage","setSuccessMessage","errorMessage","setErrorMessage","updateProductRequest","errors","defaultMessage","setConfirmId","confirmId","confirmIdError","setConfirmIdError","deleteProduct","delete","multiline","rows","InputProps","startAdornment","InputAdornment","ProductPurchasedCard","orderedItem","orderId","orderCreatedDate","orderStatus","ProductInfo","setProduct","getProduct","useProduct","orderedItems","setOrderedItems","CreateProduct","categories","Admin","path","Home","newestSnacks","setNewestSnacks","getPopularSnacks","getNewestSnacks","App","createTheme","contrastText","app","backgroundImage","background","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49d2abd2.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"/api/v1\", // spring boot backend\r\n});\r\n","import React, { useContext, useState, createContext, useEffect } from \"react\";\r\nimport SnackOverflow from \"../api/SnackOverflow\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n// Create context\r\nconst AuthContext = createContext();\r\n\r\n// Custom context provider\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  // Token Check on mount\r\n  // - Call refresh in a useEffect with empty array arg IF currentUser is null OR currentUser.token is expired\r\n  // - This will be called if the user refreshes the page or re-/enters the website\r\n  // - This + the timed refresh guarantees that the JWT is always either null or non-expired???\r\n  // - If refresh fails, setCurrentUser(null) in AuthContext\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      if (currentUser.accessToken) {\r\n        setRefreshTimer(currentUser.accessToken);\r\n      } else {\r\n        refresh(); // should never really happen\r\n      }\r\n    } else {\r\n      refresh();\r\n    }\r\n  }, []);\r\n\r\n  // Timed Background Refresh\r\n  // - When getting an authentication response back from either /login or /refresh, set up a function timer to call /refresh 1 min before the current token's expiration\r\n  const setRefreshTimer = (token) => {\r\n    let decoded = jwt_decode(token);\r\n    const expirationEpochMS = decoded.exp * 1000;\r\n    const nowEpochMS = Date.now();\r\n\r\n    const msToExpire = expirationEpochMS - nowEpochMS;\r\n\r\n    if (msToExpire < 60000) {\r\n      // If jwt is already within 1 minute of expiring, just call refresh. Includes less than zero or expired\r\n      refresh();\r\n    } else {\r\n      // otherwise, set timer to one minute of expiring\r\n      const oneMinuteToExpireMS = msToExpire - 60000;\r\n      const oneMinuteToExpire = oneMinuteToExpireMS / 1000;\r\n      setTimeout(() => {\r\n        refresh();\r\n      }, oneMinuteToExpireMS);\r\n    }\r\n  };\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      let loginRequest = { username: username, password: password };\r\n      const response = await SnackOverflow.post(\"/auth/login\", loginRequest);\r\n      if (response.status === 200) {\r\n        // Set CurrentUser\r\n        setCurrentUser(response.data);\r\n        // Set refresh timer function\r\n        setRefreshTimer(response.data.authenticationToken);\r\n      }\r\n    } catch (error) {}\r\n  };\r\n  const refresh = async () => {\r\n    try {\r\n      //browser has the refresh token cookie\r\n      const response = await SnackOverflow.get(\"/auth/refresh\");\r\n      if (response.status === 200) {\r\n        // Set CurrentUser\r\n        setCurrentUser(response.data);\r\n        // Set refresh timer function\r\n        setRefreshTimer(response.data.authenticationToken);\r\n      }\r\n    } catch (error) {\r\n      setCurrentUser(null);\r\n    }\r\n  };\r\n  const logout = async () => {\r\n    setCurrentUser(null);\r\n    try {\r\n      //browser has the refresh token cookie\r\n      const response = await SnackOverflow.get(\"/auth/logout\");\r\n      if (response.status === 200) {\r\n        setCurrentUser(null);\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n  // Context Value that we're passing down to child components of the provider\r\n  // TODO: optimize by memoization\r\n  const auth = {\r\n    currentUser,\r\n    login,\r\n    logout,\r\n  };\r\n\r\n  return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\r\n}\r\n\r\n// expose context\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n","import React from \"react\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n// https://reactrouter.com/web/example/auth-workflow\r\n\r\n// A wrapper for <Route> that redirects to the login\r\n// screen if you're not yet authenticated.\r\nfunction PrivateRoute({ children, ...rest }) {\r\n  let { currentUser } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        currentUser ? ( // check if authenticated\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React, { useContext, createContext, useEffect, useReducer } from \"react\";\r\n\r\nconst SNACK_OVERFLOW_CART = \"snackoverflow-cart\";\r\n\r\nconst ACTIONS = {\r\n  ADD_ITEM: \"add item\",\r\n  REMOVE_ITEM: \"remove item\",\r\n  UPDATE_ITEM_QUANTITY: \"update item quantity\",\r\n  CLEAR: \"clear\",\r\n  LOAD_CART: \"load cart\",\r\n};\r\n\r\n// Create context\r\nconst CartContext = createContext();\r\n\r\nconst findCartItemIndexByProductId = (cart, productId) => {\r\n  let i;\r\n  for (i = 0; i < cart.length; i++) {\r\n    if (cart[i].productId === productId) {\r\n      return i;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ACTIONS.ADD_ITEM: {\r\n      let cartItemMatchedIndex = findCartItemIndexByProductId(\r\n        state,\r\n        action.productId\r\n      );\r\n      if (cartItemMatchedIndex !== null) {\r\n        state[cartItemMatchedIndex].quantity += action.quantity;\r\n      } else {\r\n        let newItem = {\r\n          productName: action.productName,\r\n          productId: action.productId,\r\n          quantity: action.quantity,\r\n        };\r\n        state.push(newItem);\r\n      }\r\n      return Array.from(state);\r\n    }\r\n    case ACTIONS.REMOVE_ITEM: {\r\n      let cartItemMatchedIndex = findCartItemIndexByProductId(\r\n        state,\r\n        action.productId\r\n      );\r\n      if (cartItemMatchedIndex !== null) {\r\n        state.splice(cartItemMatchedIndex, 1);\r\n      }\r\n      return Array.from(state);\r\n    }\r\n    case ACTIONS.UPDATE_ITEM_QUANTITY: {\r\n      let cartItemMatchedIndex = findCartItemIndexByProductId(\r\n        state,\r\n        action.productId\r\n      );\r\n      if (cartItemMatchedIndex !== null) {\r\n        state[cartItemMatchedIndex].quantity = action.quantity;\r\n      } else {\r\n      }\r\n      return Array.from(state);\r\n    }\r\n    case ACTIONS.CLEAR: {\r\n      state = [];\r\n      return Array.from(state);\r\n    }\r\n    case ACTIONS.LOAD_CART: {\r\n      try {\r\n        let localCartData = localStorage.getItem(SNACK_OVERFLOW_CART);\r\n        if (localCartData !== null) state = JSON.parse(localCartData);\r\n        else state = [];\r\n      } catch (err) {\r\n        state = [];\r\n      }\r\n      return state;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Custom context provider\r\nexport function CartProvider({ children }) {\r\n  const [cart, dispatch] = useReducer(cartReducer, []);\r\n\r\n  // Load Cart Data from Local Storage on mount\r\n  useEffect(() => {\r\n    loadCart();\r\n  }, []);\r\n\r\n  // Save Cart to Local Storage whenever Cart is Updated\r\n  useEffect(() => {\r\n    localStorage.setItem(SNACK_OVERFLOW_CART, JSON.stringify(cart));\r\n  }, [cart]);\r\n\r\n  const addItem = ({ quantity, productId, productName }) => {\r\n    let action = { type: ACTIONS.ADD_ITEM, quantity, productId, productName };\r\n    dispatch(action);\r\n  };\r\n\r\n  const removeItem = ({ productId }) => {\r\n    let action = { type: ACTIONS.REMOVE_ITEM, productId };\r\n    dispatch(action);\r\n  };\r\n\r\n  const updateItemQuantity = ({ productId, quantity }) => {\r\n    let action = { type: ACTIONS.UPDATE_ITEM_QUANTITY, productId, quantity };\r\n    dispatch(action);\r\n  };\r\n\r\n  const clearItems = () => {\r\n    let action = { type: ACTIONS.CLEAR };\r\n    dispatch(action);\r\n  };\r\n\r\n  const loadCart = () => {\r\n    let action = { type: ACTIONS.LOAD_CART };\r\n    dispatch(action);\r\n  };\r\n  const getItemCount = () => {\r\n    let i;\r\n    let cartItemCount = 0;\r\n    for (i = 0; i < cart.length; i++) {\r\n      let item = cart[i];\r\n      cartItemCount += item.quantity;\r\n    }\r\n    return cartItemCount;\r\n  };\r\n\r\n  const cartContextValue = {\r\n    cart,\r\n    addItem,\r\n    removeItem,\r\n    updateItemQuantity,\r\n    clearItems,\r\n    getItemCount,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContextValue}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\n// expose context\r\nexport function useCart() {\r\n  return useContext(CartContext);\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// Theme colors\r\n// theme.palette.primary.main - Blue: #00B1C6 or rgb(0,177,198)\r\n// theme.palette.secondary.main - Yellow: #F8EB37 or rgb(248,235,55)\r\n// Orange: #F3AB1C or rgb(243,171,28)\r\n\r\n// style hook\r\n// uses the theme provider https://material-ui.com/customization/theming/\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: 0,\r\n  },\r\n  content: {\r\n    padding: 20,\r\n  },\r\n  appbar: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  toolbarContainer: {\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n  },\r\n  toolbar: {\r\n    // [theme.breakpoints.up(\"sm\")]: {\r\n    //   paddingLeft: 0,\r\n    // },\r\n    paddingRight: 0,\r\n    flex: 1,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  toolbarMenu: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"flex\",\r\n    },\r\n    flex: 1,\r\n    justifyContent: \"flex-end\",\r\n    padding: \"2px 4px\",\r\n    alignItems: \"center\",\r\n  },\r\n  mobileIconButton: {\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n  },\r\n  menuButton: {\r\n    color: \"white\",\r\n  },\r\n  toolbarMenuMobile: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"flex\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n    flex: 1,\r\n    justifyContent: \"flex-end\",\r\n    padding: \"2px 4px\",\r\n    alignItems: \"center\",\r\n  },\r\n  socialsMenu: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n    flex: 1,\r\n    padding: \"2px 4px\",\r\n    alignItems: \"center\",\r\n  },\r\n  logo: {\r\n    height: \"110px\",\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n  },\r\n  logoContainer: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n  },\r\n  shoppingCartButton: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      paddingRight: 0,\r\n    },\r\n  },\r\n  bottomToolbar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  toolbar2: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingLeft: 0,\r\n      paddingRight: 0,\r\n    },\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    flex: 1,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  toolbar2Menu: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n    flex: 1,\r\n    //justifyContent: \"flex-start\",\r\n    justifyContent: \"space-between\",\r\n    padding: \"2px 4px\",\r\n    alignItems: \"center\",\r\n  },\r\n  toolbar2MenuItem: {\r\n    textTransform: \"capitalize\",\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n  },\r\n  toolbar2MenuMobile: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n    justifyContent: \"flex-end\",\r\n    padding: \"2px 4px\",\r\n    alignItems: \"center\",\r\n  },\r\n  toolbar2SearchContainer: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: 0,\r\n      flex: 1,\r\n      marginRight: 36,\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginLeft: \"10%\",\r\n      width: 450,\r\n      marginRight: 24,\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      marginLeft: \"10%\",\r\n      width: 650,\r\n      marginRight: 0,\r\n    },\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  search: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    height: 50,\r\n  },\r\n  loginSignUp: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      flexDirection: \"row\",\r\n    },\r\n  },\r\n  login: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n  },\r\n  flexLineBetween: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: 16,\r\n      marginBottom: 16,\r\n      borderTop: \"1px\",\r\n      borderTopStyle: \"solid\",\r\n      borderTopColor: theme.palette.primary.main,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      borderLeft: \"1px\",\r\n      borderLeftStyle: \"solid\",\r\n      borderLeftColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  signUp: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n  },\r\n  snacksPaginationContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    paddingTop: 8,\r\n  },\r\n  snackCardContainer: {\r\n    display: \"flex\",\r\n  },\r\n  snackCard: {\r\n    flex: 1,\r\n  },\r\n  snackCardImage: {\r\n    height: 140,\r\n  },\r\n  snackCardContent: {\r\n    height: 200,\r\n    overflow: \"hidden\",\r\n  },\r\n  snackCardActions: {\r\n    marginTop: 4,\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  snackCardQuantity: {\r\n    width: 80,\r\n  },\r\n  snackPageContainer: { display: \"flex\" },\r\n\r\n  // Cart\r\n  cartHeader: {\r\n    display: \"flex\",\r\n  },\r\n  cartHeaderTitle: {\r\n    flex: 1,\r\n  },\r\n  cartItemCard: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      flexDirection: \"row\",\r\n    },\r\n    alignItems: \"center\",\r\n  },\r\n  cartItemCardActionArea: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n  },\r\n  cartItemCardImage: {\r\n    height: 100,\r\n    width: 100,\r\n    margin: 16,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      height: 80,\r\n      width: 80,\r\n    },\r\n  },\r\n  cartItemName: {\r\n    flex: 1,\r\n  },\r\n  cartItemPrice: { paddingLeft: 8, paddingRight: 8 },\r\n  cartItemQuantity: {\r\n    width: 100,\r\n    textAlign: \"center\",\r\n  },\r\n  cartItemCardActions: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n\r\n  // Checkout\r\n  checkoutHeader: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n  },\r\n  checkoutHeaderTitle: {\r\n    flex: 1,\r\n  },\r\n  checkoutForm: {\r\n    flex: 1,\r\n  },\r\n  checkoutItem: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  checkoutItemName: {\r\n    flex: 1,\r\n  },\r\n  checkoutItemPrice: { paddingLeft: 8, paddingRight: 8 },\r\n  checkoutItemQuantity: {\r\n    width: 80,\r\n    textAlign: \"center\",\r\n  },\r\n  checkoutTotal: {\r\n    textAlign: \"right\",\r\n    paddingTop: 8,\r\n    borderTop: \"1px\",\r\n    borderTopStyle: \"solid\",\r\n    borderTopColor: theme.palette.primary.main,\r\n    fontWeight: \"bold\",\r\n  },\r\n  checkoutOrderInfo: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  addressCard: {\r\n    padding: 16,\r\n  },\r\n\r\n  // Orders\r\n  orderListTitle: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  orderListTitleMobile: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  orderCard: {\r\n    padding: 16,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  orderCardMobile: {\r\n    padding: 16,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  orderCardActionArea: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  orderCardActionAreaMobile: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  orderCardActionAreaItem: {\r\n    flex: 1,\r\n  },\r\n  orderCardActionAreaItem2: {\r\n    flex: 2,\r\n  },\r\n  orderItem: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: 16,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      flexDirection: \"row\",\r\n    },\r\n  },\r\n  orderItemImageContainer: {\r\n    width: 100,\r\n  },\r\n  orderItemImage: { height: 100 },\r\n  orderItemName: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  orderItemPrice: {\r\n    padding: 16,\r\n  },\r\n  orderItemQuantity: {\r\n    padding: 16,\r\n  },\r\n  orderDetailsBillingAndShipping: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      flexDirection: \"row\",\r\n    },\r\n  },\r\n  orderBillingAndShippingCard: {\r\n    flex: 1,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      margin: 8,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginRight: 8,\r\n    },\r\n  },\r\n  dashboard: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    padding: 0,\r\n  },\r\n  dashboardMenu: {\r\n    backgroundColor: \"#242526\",\r\n    width: 160,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"flex\",\r\n    },\r\n    flexDirection: \"column\",\r\n    boxShadow: \"1px 0 10px #242526\",\r\n    WebkitBoxShadow: \"1px 0 10px #242526\",\r\n    MozBoxShadow: \"1px 0 10px #242526\",\r\n  },\r\n  dashboardMenuMobile: {\r\n    backgroundColor: \"#242526\",\r\n    width: 40,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"flex\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n    flexDirection: \"column\",\r\n  },\r\n  dashboardMenuItem: {\r\n    color: theme.palette.secondary.main,\r\n    justifyContent: \"left\",\r\n  },\r\n  dashboardContent: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  imageSection: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  editImageContainer: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    padding: 10,\r\n  },\r\n  editImageContainerImageContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  editImageInputImage: {\r\n    flex: 1,\r\n    backgroundColor: \"#bebebe\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      minHeight: 150,\r\n      maxWidth: 320,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      minHeight: 250,\r\n      maxWidth: 320,\r\n    },\r\n  },\r\n  editImageInputTextInput: {\r\n    display: \"flex\",\r\n  },\r\n  deleteImageContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  productCardHorizontal: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n      flex: 1,\r\n      padding: 10,\r\n    },\r\n  },\r\n  productCardHorizontalTitle: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n      flex: 1,\r\n      paddingLeft: 14,\r\n      paddingRight: 14,\r\n    },\r\n  },\r\n  productCardHorizontalMain: {\r\n    flex: 6,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    alignItems: \"center\",\r\n  },\r\n  productCardHorizontalImage: {\r\n    height: 100,\r\n    width: 100,\r\n    margin: 16,\r\n  },\r\n  productCardHorizontalName: {\r\n    flex: 1,\r\n    margin: 16,\r\n  },\r\n  productCardHorizontalID: {\r\n    minWidth: 100,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n  productCardHorizontalDate: {\r\n    minWidth: 100,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n  productCardHorizontalPrice: {\r\n    minWidth: 100,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n  productCardHorizontalUnitsSold: {\r\n    width: 120,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n  productCardHorizontalFiller: {\r\n    width: 80,\r\n  },\r\n  verticalCard: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"flex\",\r\n      flex: 1,\r\n      flexDirection: \"column\",\r\n      marginBottom: 10,\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  productCardVerticalImage: {\r\n    height: 200,\r\n    margin: 16,\r\n  },\r\n  selector: {\r\n    minWidth: 120,\r\n    marginLeft: 10,\r\n  },\r\n  success: {\r\n    color: \"#388e3c\",\r\n  },\r\n  error: {\r\n    color: \"#d32f2f\",\r\n  },\r\n  carouselImageContainer: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  carouselImage: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      height: 200,\r\n      width: 200,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      height: 300,\r\n      width: 300,\r\n    },\r\n  },\r\n  orderTitleFiller: {\r\n    minWidth: 80,\r\n  },\r\n  adminSelector: {\r\n    minWidth: 110,\r\n    marginLeft: 10,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  adminSelectorMobileContainer: {\r\n    display: \"flex\",\r\n    paddingTop: 10,\r\n    paddingBottom: 20,\r\n    paddingRight: 10,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  adminSelectorMobile: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"flex\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  adminSearchContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  adminSearchBar: {\r\n    flex: 1,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: 0,\r\n      marginRight: 10,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: 30,\r\n      marginRight: 40,\r\n    },\r\n\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  memberCard: {\r\n    padding: 16,\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  memberCardMobile: {\r\n    padding: 16,\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  dashboardTile: {\r\n    display: \"flex\",\r\n    minHeight: 100,\r\n  },\r\n  dashboardTileItem: {\r\n    flex: 1,\r\n    padding: 5,\r\n  },\r\n  homeCarousel: {\r\n    width: \"100%\",\r\n  },\r\n  snackCarouselItem: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingRight: 10,\r\n    paddingLeft: 10,\r\n  },\r\n  snackCarouselItemContent: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n      flex: 1,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 600,\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 800,\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: 1000,\r\n    },\r\n  },\r\n  snackItemCarouselImage: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      height: 200,\r\n      marginLeft: 10,\r\n      marginRight: 10,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      flex: 1,\r\n      minHeight: 300,\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      flex: 1,\r\n      minHeight: 300,\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      flex: 1,\r\n      minHeight: 400,\r\n    },\r\n  },\r\n  snackItemCarouselDescription: {\r\n    overflow: \"hidden\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      height: 200,\r\n      padding: 20,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      flex: 2,\r\n      height: 300,\r\n      padding: 40,\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      flex: 2,\r\n      height: 300,\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      flex: 2,\r\n      minHeight: 400,\r\n      padding: 40,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Box,\r\n  Container,\r\n  Button,\r\n  InputBase,\r\n  Paper,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport useStyles from \"../styles\";\r\n\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { useCart } from \"../context/CartContext\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { currentUser } = useAuth();\r\n  const { getItemCount } = useCart();\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const isAdmin = () => {\r\n    if (currentUser === null) return false;\r\n\r\n    var decoded = jwt_decode(currentUser.authenticationToken);\r\n    let auth = [];\r\n    decoded.authorities.map((authority) => {\r\n      auth.push(authority.authority);\r\n    });\r\n    if (auth.includes(\"ROLE_ADMIN\")) return true;\r\n    else return false;\r\n  };\r\n\r\n  const accountButtonText = currentUser ? currentUser.username : \"Account\";\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleMenuClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClick = (url) => {\r\n    history.push(url);\r\n  };\r\n\r\n  // const handleSearchSubmit = () => {\r\n  //   history.push({\r\n  //     pathname: \"/snacks\",\r\n  //     search: `?search=${search}`,\r\n  //   });\r\n  // };\r\n\r\n  const handleSearchSubmit = () => {\r\n    history.push({\r\n      pathname: `/snacks`,\r\n      search: `?search=${search}&sortBy=${\"unitsSold\"}&direction=${\"DESC\"}&&page=${1}`,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appbar}>\r\n      <Container maxWidth=\"lg\" className={classes.toolbarContainer}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <Box className={classes.socialsMenu}>\r\n            <IconButton href={\"https://www.facebook.com\"} target=\"_blank\">\r\n              <FacebookIcon />\r\n            </IconButton>\r\n            <IconButton href={\"https://www.instagram.com\"} target=\"_blank\">\r\n              <InstagramIcon />\r\n            </IconButton>\r\n            <IconButton href={\"https://twitter.com\"} target=\"_blank\">\r\n              <TwitterIcon />\r\n            </IconButton>\r\n            <IconButton href={\"https://www.youtube.com\"} target=\"_blank\">\r\n              <YouTubeIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              href={\"https://www.linkedin.com/in/bernard-guiang\"}\r\n              target=\"_blank\"\r\n            >\r\n              <LinkedInIcon />\r\n            </IconButton>\r\n          </Box>\r\n          <Box className={classes.logoContainer}>\r\n            <img\r\n              onClick={() => handleClick(\"/\")}\r\n              className={classes.logo}\r\n              src={`${process.env.PUBLIC_URL}/assets/images/logo2.png`}\r\n            />\r\n          </Box>\r\n          <Box className={classes.toolbarMenu}>\r\n            <Button size=\"large\" onClick={() => handleClick(\"/cart\")}>\r\n              <ShoppingCartIcon />\r\n              Cart ({getItemCount()})\r\n            </Button>\r\n            <Button onClick={() => handleClick(\"/account\")} size=\"large\">\r\n              <AccountCircleIcon />\r\n              {accountButtonText}\r\n            </Button>\r\n            {isAdmin() ? (\r\n              <Button onClick={() => handleClick(\"/admin\")} size=\"large\">\r\n                <DashboardIcon />\r\n                Dashboard\r\n              </Button>\r\n            ) : null}\r\n          </Box>\r\n          <Box className={classes.toolbarMenuMobile}>\r\n            <Button\r\n              size=\"large\"\r\n              className={classes.mobileIconButton}\r\n              onClick={() => handleClick(\"/cart\")}\r\n            >\r\n              <ShoppingCartIcon />({getItemCount()})\r\n            </Button>\r\n            <Button\r\n              onClick={() => handleClick(\"/account\")}\r\n              size=\"large\"\r\n              className={classes.mobileIconButton}\r\n            >\r\n              <AccountCircleIcon />\r\n            </Button>\r\n            {isAdmin() ? (\r\n              <Button\r\n                onClick={() => handleClick(\"/admin\")}\r\n                size=\"large\"\r\n                className={classes.mobileIconButton}\r\n              >\r\n                <DashboardIcon />\r\n              </Button>\r\n            ) : null}\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n      <div className={classes.bottomToolbar}>\r\n        <Container className={classes.toolbarContainer}>\r\n          <Toolbar className={classes.toolbar2}>\r\n            <Box className={classes.toolbar2Menu}>\r\n              <Button onClick={() => handleClick(\"/\")} size=\"large\">\r\n                <Typography className={classes.toolbar2MenuItem} variant=\"h6\">\r\n                  Home\r\n                </Typography>\r\n              </Button>\r\n              <Button onClick={() => handleClick(\"/snacks\")} size=\"large\">\r\n                <Typography className={classes.toolbar2MenuItem} variant=\"h6\">\r\n                  Snacks\r\n                </Typography>\r\n              </Button>\r\n              {/* <Button\r\n                onClick={() => handleClick(\"/subscriptions\")}\r\n                size=\"large\"\r\n              >\r\n                <Typography className={classes.toolbar2MenuItem} variant=\"h6\">\r\n                  Subscriptions\r\n                </Typography>\r\n              </Button> */}\r\n              <Button onClick={() => handleClick(\"/contact\")} size=\"large\">\r\n                <Typography className={classes.toolbar2MenuItem} variant=\"h6\">\r\n                  Contact Us\r\n                </Typography>\r\n              </Button>\r\n            </Box>\r\n            <Box className={classes.toolbar2MenuMobile}>\r\n              <IconButton\r\n                className={classes.menuButton}\r\n                aria-label=\"mobile-menu\"\r\n                onClick={handleMenuClick}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"mobile-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleMenuClose}\r\n              >\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    handleMenuClose();\r\n                    handleClick(\"/\");\r\n                  }}\r\n                >\r\n                  Home\r\n                </MenuItem>\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    handleMenuClose();\r\n                    handleClick(\"/snacks\");\r\n                  }}\r\n                >\r\n                  Snacks\r\n                </MenuItem>\r\n                {/* <MenuItem\r\n                  onClick={() => {\r\n                    handleMenuClose();\r\n                    handleClick(\"/subscriptions\");\r\n                  }}\r\n                >\r\n                  Subscriptions\r\n                </MenuItem> */}\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    handleMenuClose();\r\n                    handleClick(\"/contact\");\r\n                  }}\r\n                >\r\n                  Contact\r\n                </MenuItem>\r\n              </Menu>\r\n            </Box>\r\n            <Paper className={classes.toolbar2SearchContainer}>\r\n              <InputBase\r\n                className={classes.search}\r\n                autocomplete=\"off\"\r\n                placeholder=\"Search Snacks\"\r\n                inputProps={{ \"aria-label\": \"search snacks\" }}\r\n                onChange={(event) => {\r\n                  setSearch(event.target.value);\r\n                }}\r\n              />\r\n              <IconButton\r\n                type=\"submit\"\r\n                className={classes.iconButton}\r\n                aria-label=\"search\"\r\n                onClick={() => handleSearchSubmit()}\r\n              >\r\n                <SearchIcon />\r\n              </IconButton>\r\n            </Paper>\r\n          </Toolbar>\r\n        </Container>\r\n      </div>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useCart } from \"../../context/CartContext\";\r\n\r\nconst SnackCard = ({ snack }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { addItem } = useCart();\r\n  const [quantity, setQuantity] = useState(1);\r\n\r\n  const snackClick = (snack) => {\r\n    history.push(`/snacks/${snack.id}`);\r\n  };\r\n\r\n  const addToCartClick = (snack) => {\r\n    if (!isNaN(quantity) && quantity > 0)\r\n      addItem({ quantity, productId: snack.id, productName: snack.name });\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      className={classes.snackCardContainer}\r\n      xs={12}\r\n      sm={6}\r\n      md={4}\r\n      key={snack.id}\r\n    >\r\n      <Card className={classes.snackCard}>\r\n        <CardActionArea onClick={() => snackClick(snack)}>\r\n          <CardMedia\r\n            className={classes.snackCardImage}\r\n            image={snack.images[0] ? snack.images[0] : null}\r\n            title={snack.name}\r\n          />\r\n          <CardContent className={classes.snackCardContent}>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h5\">\r\n              {snack.name}\r\n            </Typography>\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              ${snack.price.toFixed(2)}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {snack.description}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions className={classes.snackCardActions}>\r\n          <TextField\r\n            className={classes.snackCardQuantity}\r\n            label=\"Quantity\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"number\"\r\n            min={1}\r\n            value={quantity}\r\n            onChange={(event) => {\r\n              let val = parseInt(event.target.value);\r\n              if (isNaN(val)) val = 1;\r\n              if (val < 1) val = 1;\r\n              setQuantity(val);\r\n            }}\r\n          />\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={() => addToCartClick(snack)}\r\n          >\r\n            Add To Cart\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SnackCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\n\r\nimport SnackCard from \"./SnackCard\";\r\nimport useStyles from \"../../styles\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Snacks = () => {\r\n  const classes = useStyles();\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const [snacks, setSnacks] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const [pageNumberUI, setPageNumberUI] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [sortBy, setSortBy] = useState(\"unitsSold\");\r\n  const [direction, setDirection] = useState(\"DESC\");\r\n\r\n  useEffect(() => {\r\n    let urlParams = new URLSearchParams(location.search);\r\n\r\n    if (urlParams.get(\"search\") !== null) {\r\n      setSearch(urlParams.get(\"search\"));\r\n    }\r\n\r\n    if (urlParams.get(\"page\")) {\r\n      let currentPage = parseInt(urlParams.get(\"page\"));\r\n      setPageNumber(currentPage - 1);\r\n      setPageNumberUI(currentPage);\r\n    }\r\n    if (urlParams.get(\"sortBy\")) {\r\n      setSortBy(urlParams.get(\"sortBy\"));\r\n    }\r\n    if (urlParams.get(\"direction\")) {\r\n      setDirection(urlParams.get(\"direction\"));\r\n    }\r\n  }, [location]);\r\n\r\n  const handleSearchSubmit = () => {\r\n    history.push({\r\n      pathname: `/snacks`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${direction}&&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    history.push({\r\n      pathname: `/snacks`,\r\n      search: `?search=${\r\n        event.target.value\r\n      }&sortBy=${sortBy}&direction=${direction}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleSortByChange = (event) => {\r\n    history.push({\r\n      pathname: `/snacks`,\r\n      search: `?search=${search}&sortBy=${\r\n        event.target.value\r\n      }&direction=${direction}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleDirectionChange = (event) => {\r\n    history.push({\r\n      pathname: `/snacks`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${\r\n        event.target.value\r\n      }&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handlePageChange = (value) => {\r\n    history.push({\r\n      pathname: `/snacks`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${direction}&page=${value}`,\r\n    });\r\n  };\r\n\r\n  const getSnacks = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(\"/products\", {\r\n        params: {\r\n          search: search,\r\n          pageSize: 9,\r\n          pageNumber: pageNumber,\r\n          itemsSold: \"month\",\r\n          sortBy: sortBy,\r\n          sortDirection: direction,\r\n        },\r\n      });\r\n      setSnacks(response.data.content);\r\n      setTotalPages(response.data.totalPages);\r\n    } catch (error) {}\r\n  };\r\n  // Call Get Snacks Once\r\n  useEffect(() => {\r\n    getSnacks();\r\n  }, [search, pageNumber, sortBy, direction]);\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Grid\r\n        container\r\n        spacing={5}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item xs={12} key=\"pageTitle\" className={classes.cartHeader}>\r\n          <h2 className={classes.cartHeaderTitle}>Snacks</h2>\r\n          <FormControl className={classes.adminSelector}>\r\n            <InputLabel id=\"sortBy\">Sort By</InputLabel>\r\n            <Select\r\n              labelId=\"sortBy\"\r\n              id=\"sortBySelect\"\r\n              value={sortBy}\r\n              onChange={handleSortByChange}\r\n            >\r\n              <MenuItem value={\"createdDate\"}>Newest</MenuItem>\r\n              <MenuItem value={\"name\"}>Name</MenuItem>\r\n              <MenuItem value={\"price\"}>Price</MenuItem>\r\n              <MenuItem value={\"unitsSold\"}>Popularity</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl className={classes.adminSelector}>\r\n            <InputLabel id=\"direction\">Direction</InputLabel>\r\n            <Select\r\n              labelId=\"direction\"\r\n              id=\"direcitonSelect\"\r\n              value={direction}\r\n              onChange={handleDirectionChange}\r\n            >\r\n              <MenuItem value={\"ASC\"}>Ascending</MenuItem>\r\n              <MenuItem value={\"DESC\"}>Descending</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        {snacks.map((snack) => (\r\n          <SnackCard snack={snack} key={snack.id} />\r\n        ))}\r\n      </Grid>\r\n      <Grid item xs={12} key=\"pagination\" className={classes.pagination}>\r\n        <div className={classes.snacksPaginationContainer}>\r\n          <Pagination\r\n            count={totalPages}\r\n            color=\"primary\"\r\n            page={pageNumberUI}\r\n            onChange={(event, value) => {\r\n              handlePageChange(value);\r\n            }}\r\n          />\r\n        </div>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Snacks;\r\n","import { useState, useEffect } from \"react\";\r\nimport SnackOverflow from \"../api/SnackOverflow\";\r\n\r\nexport default (id) => {\r\n  const [snack, setSnack] = useState({});\r\n\r\n  const getSnack = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(`/products/${id}`);\r\n      setSnack(response.data);\r\n    } catch (error) {}\r\n  };\r\n\r\n  // Call Get Snacks Once\r\n  useEffect(() => {\r\n    getSnack();\r\n  }, []);\r\n\r\n  return [snack];\r\n};\r\n","import React from \"react\";\r\n\r\nimport useStyles from \"../styles\";\r\nimport { CardMedia, Paper } from \"@material-ui/core\";\r\n\r\nconst CarouselItem = ({ name, image }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.carouselImageContainer}>\r\n      <CardMedia image={image} className={classes.carouselImage} title={name} />\r\n    </div>\r\n  );\r\n};\r\nexport default CarouselItem;\r\n","import React from \"react\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useSnack from \"../../hooks/useSnack\";\r\nimport useStyles from \"../../styles\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  CardActions,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { useCart } from \"../../context/CartContext\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport CarouselItem from \"../CarouselItem\";\r\n\r\nconst Snack = () => {\r\n  const classes = useStyles();\r\n  let { id } = useParams();\r\n  const [snack] = useSnack(id);\r\n  const { addItem } = useCart();\r\n  const [quantity, setQuantity] = useState(1);\r\n\r\n  const addToCartClick = (snack) => {\r\n    if (!isNaN(quantity) && quantity > 0)\r\n      addItem({ quantity, productId: snack.id, productName: snack.name });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} sm={10}>\r\n          {snack.images ? (\r\n            <Carousel\r\n              navButtonsAlwaysVisible={true}\r\n              next={() => {\r\n                /* Do stuff */\r\n              }}\r\n              prev={() => {\r\n                /* Do other stuff */\r\n              }}\r\n            >\r\n              {snack.images.map((image, i) => (\r\n                <CarouselItem key={i} name={snack.name} image={image} />\r\n              ))}\r\n            </Carousel>\r\n          ) : null}\r\n        </Grid>\r\n        <Grid item xs={12} sm={10}>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h5\">\r\n            {snack.name}\r\n          </Typography>\r\n          <Typography variant=\"h6\" component=\"h6\">\r\n            ${snack.price ? snack.price.toFixed(2) : \"0.00\"}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {snack.description}\r\n          </Typography>\r\n          {snack.deleted ? (\r\n            <h2 className={classes.error}>This snack is no longer available</h2>\r\n          ) : (\r\n            <CardActions className={classes.snackCardActions}>\r\n              <TextField\r\n                className={classes.snackCardQuantity}\r\n                label=\"Quantity\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                type=\"number\"\r\n                min={1}\r\n                value={quantity}\r\n                onChange={(event) => {\r\n                  let val = parseInt(event.target.value);\r\n                  if (isNaN(val)) val = 1;\r\n                  if (val < 1) val = 1;\r\n                  setQuantity(val);\r\n                }}\r\n              />\r\n              <Button\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                onClick={() => addToCartClick(snack)}\r\n              >\r\n                Add To Cart\r\n              </Button>\r\n            </CardActions>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Snack;\r\n","import React from \"react\";\r\nimport { Container, Typography, Link } from \"@material-ui/core\";\r\nimport useStyles from \"../styles\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"h6\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link\r\n        color=\"inherit\"\r\n        href={\"https://www.linkedin.com/in/bernard-guiang\"}\r\n        target=\"_blank\"\r\n      >\r\n        Bernard Guiang\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <footer className={classes.footer}>\r\n      <Container>\r\n        <div>\r\n          <Copyright />\r\n        </div>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport useStyles from \"../../styles\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport validator from \"validator\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst LoginSignup = () => {\r\n  const { currentUser, login } = useAuth();\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.loginSignUp}>\r\n      <Login login={login} classes={classes} currentUser={currentUser} />\r\n      <div className={classes.flexLineBetween}></div>\r\n      <SignUp classes={classes} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Login = ({ login, classes, currentUser }) => {\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n  let { from } = location.state || { from: { pathname: \"/\" } };\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  // Send User to landing page \"/\" or to previous route if it was a private route\r\n  const callback = () => {\r\n    history.replace(from);\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    if (currentUser === null) return false;\r\n\r\n    var decoded = jwt_decode(currentUser.authenticationToken);\r\n    let auth = [];\r\n    decoded.authorities.map((authority) => {\r\n      auth.push(authority.authority);\r\n    });\r\n    if (auth.includes(\"ROLE_ADMIN\")) return true;\r\n    else return false;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser !== null) {\r\n      if (from.pathname.startsWith(\"/admin\")) {\r\n        if (isAdmin()) {\r\n          callback();\r\n        } else {\r\n          history.replace(\"/\");\r\n        }\r\n      } else {\r\n        callback();\r\n      }\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const [usernameError, setUsernameError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n  const isValidated = () => {\r\n    let isValid = true;\r\n\r\n    // Reset Errors\r\n    setUsernameError(\"\");\r\n    setPasswordError(\"\");\r\n\r\n    // Username\r\n    if (validator.isEmpty(username)) {\r\n      setUsernameError(\"Please enter a username\");\r\n      isValid = false;\r\n    }\r\n\r\n    if (validator.isEmpty(password)) {\r\n      setPasswordError(\"Please enter your password\");\r\n      isValid = false;\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (isValidated()) login(username, password);\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <h2 className={classes.cartHeaderTitle}>Login</h2>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username1\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            onChange={(event) => {\r\n              setUsername(event.target.value);\r\n            }}\r\n            autoFocus\r\n            helperText={usernameError}\r\n            error={usernameError ? true : false}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password1\"\r\n            onChange={(event) => {\r\n              setPassword(event.target.value);\r\n            }}\r\n            autoComplete=\"current-password\"\r\n            helperText={passwordError}\r\n            error={passwordError ? true : false}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n          {/* <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst SignUp = ({ classes }) => {\r\n  const [signupSuccess, setSignupSuccess] = useState(false);\r\n  const [signupError, setSignupError] = useState(\"\");\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordRepeat, setPasswordRepeat] = useState(\"\");\r\n\r\n  const [fullNameError, setFullNameError] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [usernameError, setUsernameError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [passwordRepeatError, setPasswordRepeatError] = useState(\"\");\r\n\r\n  const isValidated = () => {\r\n    let isValid = true;\r\n    // Reset Errors\r\n    setEmailError(\"\");\r\n    setFullNameError(\"\");\r\n    setUsernameError(\"\");\r\n    setPasswordError(\"\");\r\n    setPasswordRepeatError(\"\");\r\n\r\n    // Reset Request Error\r\n    setSignupError(\"\");\r\n\r\n    // Email\r\n    if (!validator.isEmail(email)) {\r\n      setEmailError(\"Please use a valid email\");\r\n      isValid = false;\r\n    }\r\n\r\n    // Full Name\r\n    if (validator.isEmpty(fullName, { ignore_whitespace: true })) {\r\n      setFullNameError(\"Please enter your full name\");\r\n      isValid = false;\r\n    }\r\n\r\n    // Username\r\n    if (\r\n      !validator.isAlphanumeric(username) ||\r\n      validator.contains(username, \" \") ||\r\n      !validator.isLength(username, { min: 6, max: 20 })\r\n    ) {\r\n      setUsernameError(\r\n        \"Username must be 6-20 characters long and contain only letters and numbers and no spaces\"\r\n      );\r\n      isValid = false;\r\n    }\r\n\r\n    if (\r\n      !validator.isStrongPassword(password, {\r\n        minLength: 6,\r\n        minLowercase: 1,\r\n        minUppercase: 1,\r\n        minNumbers: 1,\r\n        minSymbols: 1,\r\n      }) ||\r\n      validator.contains(password, \" \") ||\r\n      !validator.isLength(password, { min: 6, max: 20 })\r\n    ) {\r\n      setPasswordError(\r\n        \"Password must be 6-20 characters long including at least one lowercase letter, one uppercase letter, one number, and one symbol. No spaces\"\r\n      );\r\n      isValid = false;\r\n    }\r\n\r\n    // PasswordRepeat\r\n    if (password !== passwordRepeat) {\r\n      setPasswordRepeatError(\"Passwords do not match\");\r\n      isValid = false;\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const signup = async (fullName, email, username, password) => {\r\n    const signupRequest = { fullName, email, username, password };\r\n\r\n    try {\r\n      const response = await SnackOverflow.post(\"/auth/signup\", signupRequest);\r\n      if (response.status === 201) {\r\n        setSignupSuccess(true);\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        // Request made and server responded\r\n        setSignupError(error.response.data.message);\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        setSignupError(\"Something went wrong. Try again later\");\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        setSignupError(\"Something went wrong. Try again later\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setSignupSuccess(false);\r\n    if (isValidated()) {\r\n      signup(fullName, email, username, password);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <h2 className={classes.cartHeaderTitle}>Sign Up</h2>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            onChange={(event) => {\r\n              setEmail(event.target.value);\r\n            }}\r\n            helperText={emailError}\r\n            error={emailError ? true : false}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"full-name\"\r\n            label=\"Full Name\"\r\n            id=\"full-name\"\r\n            onChange={(event) => {\r\n              setFullName(event.target.value);\r\n            }}\r\n            helperText={fullNameError}\r\n            error={fullNameError ? true : false}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            id=\"username\"\r\n            onChange={(event) => {\r\n              setUsername(event.target.value);\r\n            }}\r\n            helperText={usernameError}\r\n            error={usernameError ? true : false}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            onChange={(event) => {\r\n              setPassword(event.target.value);\r\n            }}\r\n            helperText={passwordError}\r\n            error={passwordError ? true : false}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Repeat Password\"\r\n            type=\"password\"\r\n            id=\"repeat-password\"\r\n            onChange={(event) => {\r\n              setPasswordRepeat(event.target.value);\r\n            }}\r\n            helperText={passwordRepeatError}\r\n            error={passwordRepeatError ? true : false}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n          {signupSuccess ? (\r\n            <Typography variant=\"h6\" className={classes.success}>\r\n              {\"Signup success!\"}\r\n            </Typography>\r\n          ) : null}\r\n          {signupError ? (\r\n            <Typography variant=\"subtitle2\" className={classes.error}>\r\n              {signupError}\r\n            </Typography>\r\n          ) : null}\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginSignup;\r\n","import React from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport { Grid, Typography, Card, CardActionArea } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst OrderCard = ({ order }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const itemClick = (id) => {\r\n    history.push(`/account/orders/${id}`);\r\n  };\r\n  return (\r\n    <Grid item xs={12} key={order.id}>\r\n      <Card className={classes.orderCardMobile}>\r\n        <CardActionArea\r\n          onClick={() => itemClick(order.id)}\r\n          className={classes.orderCardActionAreaMobile}\r\n        >\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            Order: #{order.id}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem2}\r\n          >\r\n            Created: {new Date(order.createdDate).toLocaleDateString(\"en-US\")}{\" \"}\r\n            {new Date(order.createdDate).toLocaleTimeString(\"en-US\")}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem2}\r\n          >\r\n            Status: {order.status}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            Total: ${order.total.toFixed(2)}\r\n          </Typography>\r\n        </CardActionArea>\r\n      </Card>\r\n      <Card className={classes.orderCard}>\r\n        <CardActionArea\r\n          onClick={() => itemClick(order.id)}\r\n          className={classes.orderCardActionArea}\r\n        >\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            #{order.id}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem2}\r\n          >\r\n            {new Date(order.createdDate).toLocaleDateString(\"en-US\")}{\" \"}\r\n            {new Date(order.createdDate).toLocaleTimeString(\"en-US\")}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem2}\r\n          >\r\n            {order.status}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            ${order.total.toFixed(2)}\r\n          </Typography>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default OrderCard;\r\n","import React from \"react\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport useStyles from \"../../styles\";\r\nimport useOrders from \"../../hooks/useOrders\";\r\nimport OrderCard from \"./OrderCard\";\r\n\r\nconst Account = () => {\r\n  const { currentUser, logout } = useAuth();\r\n  const [orders] = useOrders();\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.content}>\r\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} key=\"title\" className={classes.cartHeader}>\r\n          <h2 className={classes.cartHeaderTitle}>\r\n            Hello, {currentUser.username}\r\n          </h2>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => logout()}>\r\n            Sign Out\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} key=\"orderInfo\">\r\n          <Typography variant=\"h6\" className={classes.orderListTitleMobile}>\r\n            Orders\r\n          </Typography>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            key={\"orderListTitle\"}\r\n            className={classes.orderListTitle}\r\n          >\r\n            <div className={classes.orderCard}>\r\n              <div className={classes.orderCardActionArea}>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  className={classes.orderCardActionAreaItem}\r\n                >\r\n                  Order\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  className={classes.orderCardActionAreaItem2}\r\n                >\r\n                  Created\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  className={classes.orderCardActionAreaItem2}\r\n                >\r\n                  Status\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  className={classes.orderCardActionAreaItem}\r\n                >\r\n                  Total\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n          {orders.map((order) => (\r\n            <OrderCard order={order} />\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import { useState, useEffect } from \"react\";\r\nimport SnackOverflow from \"../api/SnackOverflow\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\n\r\nexport default () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [token, setToken] = useState(null);\r\n  const { currentUser } = useAuth();\r\n\r\n  const getOrders = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(\"/orders\", {\r\n        headers: { Authorization: token },\r\n      });\r\n      if (response.status === 200) {\r\n        setOrders(response.data);\r\n      }\r\n    } catch (error) {}\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    if (token !== null) {\r\n      getOrders();\r\n    }\r\n  }, [token]);\r\n\r\n  return [orders];\r\n};\r\n","import React, { useState } from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardMedia,\r\n  Button,\r\n  TextField,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { useCart } from \"../../context/CartContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst CartItem = ({ cartItem }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [quantity, setQuantity] = useState(cartItem.quantity);\r\n  const { removeItem, updateItemQuantity } = useCart();\r\n\r\n  const itemClick = (id) => {\r\n    history.push(`/snacks/${id}`);\r\n  };\r\n\r\n  const updateClick = () => {\r\n    updateItemQuantity({ productId: cartItem.product.id, quantity });\r\n  };\r\n\r\n  const deleteClick = () => {\r\n    removeItem({ productId: cartItem.product.id });\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} key={cartItem.product.id}>\r\n      <Card className={classes.cartItemCard}>\r\n        <CardActionArea\r\n          className={classes.cartItemCardActionArea}\r\n          onClick={() => itemClick(cartItem.product.id)}\r\n        >\r\n          <CardMedia\r\n            className={classes.cartItemCardImage}\r\n            image={\r\n              cartItem.product.images[0] ? cartItem.product.images[0] : null\r\n            }\r\n            title={cartItem.product.name}\r\n          />\r\n          <Typography variant=\"h6\" className={classes.cartItemName}>\r\n            {cartItem.product.name}\r\n          </Typography>\r\n          <Typography variant=\"h6\" className={classes.cartItemPrice}>\r\n            ${cartItem.product.price.toFixed(2)}\r\n          </Typography>\r\n        </CardActionArea>\r\n        <CardActions className={classes.cartItemCardActions}>\r\n          <TextField\r\n            inputProps={{ style: { textAlign: \"center\" } }}\r\n            className={classes.cartItemQuantity}\r\n            label=\"Quantity\"\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            type=\"number\"\r\n            min={1}\r\n            value={quantity}\r\n            onChange={(event) => {\r\n              let val = parseInt(event.target.value);\r\n              if (isNaN(val)) val = 1;\r\n              if (val < 1) val = 1;\r\n              setQuantity(val);\r\n            }}\r\n          />\r\n          <Button size=\"small\" color=\"primary\" onClick={() => updateClick()}>\r\n            Update\r\n          </Button>\r\n          <IconButton>\r\n            <DeleteIcon color=\"error\" onClick={() => deleteClick()} />\r\n          </IconButton>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport { useCart } from \"../../context/CartContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CartItem from \"./CartItem\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst Cart = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [isTotalTooLow, setIsTotalTooLow] = useState(false);\r\n  const { cart } = useCart();\r\n  const [cartInfo, setCartInfo] = useState({ items: [], total: 0 });\r\n\r\n  useEffect(() => {\r\n    const loadCartInfo = async () => {\r\n      try {\r\n        const cartInfoRequest = { items: cart };\r\n        const response = await SnackOverflow.post(\r\n          \"/cart/info\",\r\n          cartInfoRequest\r\n        );\r\n        if (200 === response.status) {\r\n          setCartInfo(response.data);\r\n        }\r\n      } catch (error) {\r\n        setCartInfo({ items: [], total: 0 });\r\n      }\r\n    };\r\n\r\n    if (cart.length >= 0) loadCartInfo();\r\n  }, [cart]);\r\n\r\n  const checkoutClick = () => {\r\n    if (cartInfo.total <= 0.5) {\r\n      setIsTotalTooLow(true);\r\n    } else {\r\n      history.push(\"/checkout\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Dialog\r\n        open={isTotalTooLow}\r\n        onClose={() => setIsTotalTooLow(false)}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          {\"Your cart's a little light\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            All purchases must be greater than $0.50\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setIsTotalTooLow(false)} color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} key=\"title\" className={classes.cartHeader}>\r\n          <h2 className={classes.cartHeaderTitle}>Shopping Cart</h2>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => checkoutClick()}\r\n          >\r\n            Checkout\r\n          </Button>\r\n        </Grid>\r\n        {cartInfo.items.map((cartItem) => (\r\n          <CartItem cartItem={cartItem} key={cartItem.product.id} />\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","/**\r\n * Use the CSS tab above to style your Element's container.\r\n */\r\nimport React from \"react\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./CardSectionStyles.css\";\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      color: \"#32325d\",\r\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n      fontSmoothing: \"antialiased\",\r\n      fontSize: \"16px\",\r\n      \"::placeholder\": {\r\n        color: \"#aab7c4\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#fa755a\",\r\n      iconColor: \"#fa755a\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction CardSection() {\r\n  return (\r\n    <label>\r\n      <h3>Payment Information</h3>\r\n      <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default CardSection;\r\n","import React, { useState } from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport { useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useCart } from \"../../context/CartContext\";\r\n\r\nimport CardSection from \"./CardSection\";\r\nimport {\r\n  Card,\r\n  Typography,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nconst CheckoutForm = ({ clientSecret, token }) => {\r\n  const { clearItems } = useCart();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [paymentErrorMessage, setPaymentErrorMessage] = useState(\"\");\r\n  const [billingName, setBillingName] = useState(\"\");\r\n  const [billingEmail, setBillingEmail] = useState(\"\");\r\n  const [billingPhone, setBillingPhone] = useState(\"\");\r\n  const [billingAddressLine1, setBillingAddressLine1] = useState(\"\");\r\n  const [billingAddressLine2, setBillingAddressLine2] = useState(\"\");\r\n  const [billingCity, setBillingCity] = useState(\"\");\r\n  const [billingState, setBillingState] = useState(\"\");\r\n  const [billingPostalCode, setBillingPostalCode] = useState(\"\");\r\n  const [billingCountry, setBillingCountry] = useState(\"US\");\r\n  const [isShippingSameAsBilling, setIsShippingSameAsBilling] = useState(true);\r\n  const [shippingName, setShippingName] = useState(\"\");\r\n  const [shippingPhone, setShippingPhone] = useState(\"\");\r\n  const [shippingAddressLine1, setShippingAddressLine1] = useState(\"\");\r\n  const [shippingAddressLine2, setShippingAddressLine2] = useState(\"\");\r\n  const [shippingCity, setShippingCity] = useState(\"\");\r\n  const [shippingState, setShippingState] = useState(\"\");\r\n  const [shippingPostalCode, setShippingPostalCode] = useState(\"\");\r\n  const [shippingCountry, setShippingCountry] = useState(\"US\");\r\n\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const confirmPayment = async () => {\r\n    let shipping = {};\r\n\r\n    if (isShippingSameAsBilling) {\r\n      shipping = {\r\n        address: {\r\n          line1: billingAddressLine1,\r\n          line2: billingAddressLine2,\r\n          city: billingCity,\r\n          state: billingState,\r\n          postal_code: billingPostalCode,\r\n          country: billingCountry,\r\n        },\r\n        name: billingName,\r\n        phone: billingPhone,\r\n      };\r\n    } else {\r\n      shipping = {\r\n        address: {\r\n          line1: shippingAddressLine1,\r\n          line2: shippingAddressLine2,\r\n          city: shippingCity,\r\n          state: shippingState,\r\n          postal_code: shippingPostalCode,\r\n          country: shippingCountry,\r\n        },\r\n        name: shippingName,\r\n        phone: shippingPhone,\r\n      };\r\n    }\r\n\r\n    const result = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n        billing_details: {\r\n          address: {\r\n            line1: billingAddressLine1,\r\n            line2: billingAddressLine2,\r\n            city: billingCity,\r\n            state: billingState,\r\n            postal_code: billingPostalCode,\r\n            country: billingCountry,\r\n          },\r\n          name: billingName,\r\n          phone: billingPhone,\r\n          email: billingEmail,\r\n        },\r\n      },\r\n      shipping: shipping,\r\n    });\r\n\r\n    if (result.error) {\r\n      // Show error to your customer (e.g., insufficient funds)\r\n      setPaymentErrorMessage(result.error.message);\r\n      setSubmitting(false); // only re-activate button here. No need to do so when success\r\n    } else {\r\n      // The payment has been processed!\r\n      if (result.paymentIntent.status === \"succeeded\") {\r\n        // Show a success message to your customer\r\n        // There's a risk of the customer closing the window before callback\r\n        // execution. Set up a webhook or plugin to listen for the\r\n        // payment_intent.succeeded event that handles any business critical\r\n        // post-payment actions.\r\n        clearItems();\r\n        history.push(\"/checkout/success\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    // We don't want to let default form submission happen here,\r\n    // which would refresh the page.\r\n    event.preventDefault();\r\n\r\n    setSubmitting(true);\r\n\r\n    setPaymentErrorMessage(\"\");\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      setSubmitting(false);\r\n      return;\r\n    }\r\n\r\n    confirmPayment();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={classes.checkoutForm}>\r\n      <div>\r\n        <Card className={classes.addressCard}>\r\n          <Typography variant=\"h6\">Billing Details</Typography>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            margin=\"dense\"\r\n            required\r\n            fullWidth\r\n            label=\"name\"\r\n            onChange={(event) => {\r\n              setBillingName(event.target.value);\r\n            }}\r\n            autoComplete=\"name\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            margin=\"dense\"\r\n            required\r\n            fullWidth\r\n            label=\"email\"\r\n            onChange={(event) => {\r\n              setBillingEmail(event.target.value);\r\n            }}\r\n            autoComplete=\"email\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            margin=\"dense\"\r\n            required\r\n            fullWidth\r\n            label=\"phone\"\r\n            onChange={(event) => {\r\n              setBillingPhone(event.target.value);\r\n            }}\r\n            autoComplete=\"phone\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            margin=\"dense\"\r\n            required\r\n            fullWidth\r\n            label=\"address line 1\"\r\n            onChange={(event) => {\r\n              setBillingAddressLine1(event.target.value);\r\n            }}\r\n            autoComplete=\"address-line1\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            label=\"address line 2\"\r\n            onChange={(event) => {\r\n              setBillingAddressLine2(event.target.value);\r\n            }}\r\n            autoComplete=\"address-line2\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            margin=\"dense\"\r\n            required\r\n            fullWidth\r\n            label=\"city\"\r\n            onChange={(event) => {\r\n              setBillingCity(event.target.value);\r\n            }}\r\n            autoComplete=\"address-level2\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            margin=\"dense\"\r\n            required\r\n            fullWidth\r\n            label=\"state\"\r\n            onChange={(event) => {\r\n              setBillingState(event.target.value);\r\n            }}\r\n            autoComplete=\"address-level1\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            margin=\"dense\"\r\n            required\r\n            fullWidth\r\n            label=\"postal code\"\r\n            onChange={(event) => {\r\n              setBillingPostalCode(event.target.value);\r\n            }}\r\n            autoComplete=\"postal-code\"\r\n          />\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel>Country</InputLabel>\r\n            <Select\r\n              value={billingCountry}\r\n              onChange={(event) => setBillingCountry(event.target.value)}\r\n            >\r\n              <MenuItem value=\"AU\">Australia</MenuItem>\r\n              <MenuItem value=\"AT\">Austria</MenuItem>\r\n              <MenuItem value=\"BE\">Belgium</MenuItem>\r\n              <MenuItem value=\"BR\">Brazil</MenuItem>\r\n              <MenuItem value=\"CA\">Canada</MenuItem>\r\n              <MenuItem value=\"CN\">China</MenuItem>\r\n              <MenuItem value=\"DK\">Denmark</MenuItem>\r\n              <MenuItem value=\"FI\">Finland</MenuItem>\r\n              <MenuItem value=\"FR\">France</MenuItem>\r\n              <MenuItem value=\"DE\">Germany</MenuItem>\r\n              <MenuItem value=\"HK\">Hong Kong</MenuItem>\r\n              <MenuItem value=\"IE\">Ireland</MenuItem>\r\n              <MenuItem value=\"IT\">Italy</MenuItem>\r\n              <MenuItem value=\"JP\">Japan</MenuItem>\r\n              <MenuItem value=\"LU\">Luxembourg</MenuItem>\r\n              <MenuItem value=\"MY\">Malaysia</MenuItem>\r\n              <MenuItem value=\"MX\">Mexico</MenuItem>\r\n              <MenuItem value=\"NL\">Netherlands</MenuItem>\r\n              <MenuItem value=\"NZ\">New Zealand</MenuItem>\r\n              <MenuItem value=\"NO\">Norway</MenuItem>\r\n              <MenuItem value=\"PL\">Poland</MenuItem>\r\n              <MenuItem value=\"PT\">Portugal</MenuItem>\r\n              <MenuItem value=\"SG\">Singapore</MenuItem>\r\n              <MenuItem value=\"ES\">Spain</MenuItem>\r\n              <MenuItem value=\"SE\">Sweden</MenuItem>\r\n              <MenuItem value=\"CH\">Switzerland</MenuItem>\r\n              <MenuItem value=\"GB\">United Kingdom</MenuItem>\r\n              <MenuItem value=\"US\">United States</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Card>\r\n        <Typography variant=\"subtitle1\" className={classes.checkoutItemName}>\r\n          <input\r\n            name=\"isGoing\"\r\n            type=\"checkbox\"\r\n            checked={isShippingSameAsBilling}\r\n            onChange={(e) => setIsShippingSameAsBilling(e.target.checked)}\r\n          />\r\n          Ship to this address\r\n        </Typography>\r\n        {isShippingSameAsBilling ? null : (\r\n          <Card className={classes.addressCard}>\r\n            <Typography variant=\"h6\">Shipping Details</Typography>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              margin=\"dense\"\r\n              required\r\n              fullWidth\r\n              label=\"name\"\r\n              onChange={(event) => {\r\n                setShippingName(event.target.value);\r\n              }}\r\n              autoComplete=\"name\"\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              margin=\"dense\"\r\n              required\r\n              fullWidth\r\n              label=\"phone\"\r\n              onChange={(event) => {\r\n                setShippingPhone(event.target.value);\r\n              }}\r\n              autoComplete=\"phone\"\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              margin=\"dense\"\r\n              required\r\n              fullWidth\r\n              label=\"address line 1\"\r\n              onChange={(event) => {\r\n                setShippingAddressLine1(event.target.value);\r\n              }}\r\n              autoComplete=\"address-line1\"\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              label=\"address line 2\"\r\n              onChange={(event) => {\r\n                setShippingAddressLine2(event.target.value);\r\n              }}\r\n              autoComplete=\"address-line2\"\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              margin=\"dense\"\r\n              required\r\n              fullWidth\r\n              label=\"city\"\r\n              onChange={(event) => {\r\n                setShippingCity(event.target.value);\r\n              }}\r\n              autoComplete=\"address-level2\"\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              margin=\"dense\"\r\n              required\r\n              fullWidth\r\n              label=\"state\"\r\n              onChange={(event) => {\r\n                setShippingState(event.target.value);\r\n              }}\r\n              autoComplete=\"address-level1\"\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              margin=\"dense\"\r\n              required\r\n              fullWidth\r\n              label=\"postal code\"\r\n              onChange={(event) => {\r\n                setShippingPostalCode(event.target.value);\r\n              }}\r\n              autoComplete=\"postal-code\"\r\n            />\r\n            <FormControl flex>\r\n              <InputLabel>Country</InputLabel>\r\n              <Select\r\n                value={shippingCountry}\r\n                onChange={(event) => setShippingCountry(event.target.value)}\r\n              >\r\n                <MenuItem value=\"AU\">Australia</MenuItem>\r\n                <MenuItem value=\"AT\">Austria</MenuItem>\r\n                <MenuItem value=\"BE\">Belgium</MenuItem>\r\n                <MenuItem value=\"BR\">Brazil</MenuItem>\r\n                <MenuItem value=\"CA\">Canada</MenuItem>\r\n                <MenuItem value=\"CN\">China</MenuItem>\r\n                <MenuItem value=\"DK\">Denmark</MenuItem>\r\n                <MenuItem value=\"FI\">Finland</MenuItem>\r\n                <MenuItem value=\"FR\">France</MenuItem>\r\n                <MenuItem value=\"DE\">Germany</MenuItem>\r\n                <MenuItem value=\"HK\">Hong Kong</MenuItem>\r\n                <MenuItem value=\"IE\">Ireland</MenuItem>\r\n                <MenuItem value=\"IT\">Italy</MenuItem>\r\n                <MenuItem value=\"JP\">Japan</MenuItem>\r\n                <MenuItem value=\"LU\">Luxembourg</MenuItem>\r\n                <MenuItem value=\"MY\">Malaysia</MenuItem>\r\n                <MenuItem value=\"MX\">Mexico</MenuItem>\r\n                <MenuItem value=\"NL\">Netherlands</MenuItem>\r\n                <MenuItem value=\"NZ\">New Zealand</MenuItem>\r\n                <MenuItem value=\"NO\">Norway</MenuItem>\r\n                <MenuItem value=\"PL\">Poland</MenuItem>\r\n                <MenuItem value=\"PT\">Portugal</MenuItem>\r\n                <MenuItem value=\"SG\">Singapore</MenuItem>\r\n                <MenuItem value=\"ES\">Spain</MenuItem>\r\n                <MenuItem value=\"SE\">Sweden</MenuItem>\r\n                <MenuItem value=\"CH\">Switzerland</MenuItem>\r\n                <MenuItem value=\"GB\">United Kingdom</MenuItem>\r\n                <MenuItem value=\"US\">United States</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Card>\r\n        )}\r\n      </div>\r\n      <Card>\r\n        <CardSection />\r\n        {paymentErrorMessage ? (\r\n          <Typography color=\"error\">{paymentErrorMessage}</Typography>\r\n        ) : null}\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          disabled={!stripe && !submitting}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n        >\r\n          Confirm Order\r\n        </Button>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;\r\n","import React from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst CheckoutItem = ({ checkoutItem }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.checkoutItem} key={checkoutItem.product.id}>\r\n      <Typography variant=\"subtitle1\" className={classes.checkoutItemName}>\r\n        {checkoutItem.product.name}\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" className={classes.checkoutItemPrice}>\r\n        ${checkoutItem.product.price.toFixed(2)}\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" className={classes.checkoutItemPrice}>\r\n        x{checkoutItem.quantity}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Card } from \"@material-ui/core\";\r\nimport useStyles from \"../../styles\";\r\nimport { useCart } from \"../../context/CartContext\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport { Elements, ElementsConsumer } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport CheckoutForm from \"./CheckoutForm\";\r\nimport CheckoutItem from \"./CheckoutItem\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Make sure to call `loadStripe` outside of a component’s render to avoid\r\n// recreating the `Stripe` object on every render.\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\r\n\r\nconst Checkout = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { cart } = useCart();\r\n  const [cartInfo, setCartInfo] = useState({ items: [], total: 0 });\r\n  const { currentUser } = useAuth();\r\n  const [token, setToken] = useState(null);\r\n  const [clientSecret, setClientSecret] = useState(\"\");\r\n\r\n  const startCheckoutAndCreatePaymentIntent = async () => {\r\n    try {\r\n      const cartInfoRequest = { items: cart };\r\n      const response = await SnackOverflow.post(\r\n        \"/stripe/createPaymentIntent\",\r\n        cartInfoRequest,\r\n        {\r\n          headers: { Authorization: token },\r\n        }\r\n      );\r\n      if (201 === response.status) {\r\n        setClientSecret(response.data.client_secret);\r\n        setCartInfo(response.data.cart);\r\n      } else {\r\n        history.push(\"/\");\r\n      }\r\n    } catch (error) {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  // Load/Update User Token\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    if (token !== null && cart !== null && cart.length > 0)\r\n      startCheckoutAndCreatePaymentIntent();\r\n  }, [token, cart]);\r\n\r\n  const InjectedCheckoutForm = () => (\r\n    <ElementsConsumer>\r\n      {({ stripe, elements }) => (\r\n        <CheckoutForm\r\n          stripe={stripe}\r\n          elements={elements}\r\n          clientSecret={clientSecret}\r\n          token={token}\r\n        />\r\n      )}\r\n    </ElementsConsumer>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} key=\"title\" className={classes.checkoutHeader}>\r\n          <h2 className={classes.checkoutHeaderTitle}>Checkout</h2>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          spacing={1}\r\n          justifyContent=\"center\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Grid item sm={12} md={6} key=\"order-info\">\r\n            <Card className={classes.checkoutOrderInfo}>\r\n              <Typography variant=\"h6\">Order Info</Typography>\r\n              {cartInfo.items.map((checkoutItem) => (\r\n                <CheckoutItem\r\n                  checkoutItem={checkoutItem}\r\n                  key={checkoutItem.product.id}\r\n                />\r\n              ))}\r\n              <Typography variant=\"subtitle1\" className={classes.checkoutTotal}>\r\n                Total ${cartInfo.total.toFixed(2)}\r\n              </Typography>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item sm={12} md={6} key=\"checkout\" flex>\r\n            <Elements stripe={stripePromise}>\r\n              <InjectedCheckoutForm />\r\n            </Elements>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import React from \"react\";\r\nimport { Grid, Typography, Button, Link } from \"@material-ui/core\";\r\nimport useStyles from \"../../styles\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Make sure to call `loadStripe` outside of a component’s render to avoid\r\n// recreating the `Stripe` object on every render.\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\r\n\r\nconst CheckoutSuccess = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} md={10} key=\"title\" className={classes.cartHeader}>\r\n          <h2 className={classes.cartHeaderTitle}>Checkout Success!</h2>\r\n        </Grid>\r\n        <Grid item xs={12} md={10} key=\"body\" className={classes.cartHeader}>\r\n          <Typography>\r\n            It may take a few minutes for your order to show up on your{\" \"}\r\n            <Link onClick={() => history.push(\"/account\")}>account</Link>\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutSuccess;\r\n","import React from \"react\";\r\nimport { useCart } from \"../../context/CartContext\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction CheckoutRoute({ children, ...rest }) {\r\n  let { cart } = useCart();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        cart.length > 0 ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default CheckoutRoute;\r\n","import React from \"react\";\r\nimport { Grid, Typography, Link } from \"@material-ui/core\";\r\nimport useStyles from \"../../styles\";\r\n\r\nconst Contact = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.content}>\r\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} key=\"title\" className={classes.cartHeader}>\r\n          <h2 className={classes.cartHeaderTitle}>Contact Us</h2>\r\n        </Grid>\r\n        <Grid item xs={12} key=\"title2\" className={classes.cartHeader}>\r\n          <Typography>\r\n            Thank you for visiting my demo site. Feel free to contact me through{\" \"}\r\n            <Link\r\n              color=\"primary\"\r\n              href={\"https://www.linkedin.com/in/bernard-guiang\"}\r\n              target=\"_blank\"\r\n            >\r\n              LinkedIn\r\n            </Link>{\" \"}\r\n            - Bernard\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport { Grid, Typography, Card, CardMedia } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst OrderItem = ({ orderItem, orderItemClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      onClick={() => orderItemClick(orderItem.product.id)}\r\n      className={classes.orderItem}\r\n      key={orderItem.id}\r\n    >\r\n      <Card className={classes.orderItemImageContainer}>\r\n        <CardMedia\r\n          className={classes.orderItemImage}\r\n          image={\r\n            orderItem.product.images[0] ? orderItem.product.images[0] : null\r\n          }\r\n          title={orderItem.product.name}\r\n        />\r\n      </Card>\r\n      <Typography variant=\"subtitle1\" className={classes.orderItemName}>\r\n        {orderItem.product.name}\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" className={classes.orderItemPrice}>\r\n        Price: ${orderItem.price.toFixed(2)}\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" className={classes.orderItemQuantity}>\r\n        Quantity: {orderItem.quantity}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport useStyles from \"../../styles\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport OrderItem from \"./OrderItem\";\r\n\r\nconst Order = () => {\r\n  const { currentUser, logout } = useAuth();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [token, setToken] = useState(null);\r\n\r\n  // const [order, setOrder] = useState({\r\n  //   id: null,\r\n  //   items: [],\r\n  //   total: 0,\r\n  //   createdDate: null,\r\n  //   billingDetails: null,\r\n  //   shippingDetails: null,\r\n  //   isShippingSameAsBilling: false,\r\n  //   userId: null,\r\n  //   status: null,\r\n  // });\r\n  const [order, setOrder] = useState(null);\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    const getOrder = async () => {\r\n      try {\r\n        const response = await SnackOverflow.get(`/orders/${id}`, {\r\n          headers: { Authorization: token },\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          setOrder(response.data);\r\n        } else {\r\n          history.push(\"/account\");\r\n        }\r\n      } catch (error) {\r\n        history.push(\"/account\");\r\n      }\r\n    };\r\n\r\n    if (token !== null && id !== null) {\r\n      getOrder();\r\n    }\r\n  }, [id, token]);\r\n\r\n  const orderItemClick = (id) => {\r\n    history.push(`/snacks/${id}`);\r\n  };\r\n\r\n  if (order === null) return <></>;\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} key=\"orderInfo\">\r\n          <Typography variant=\"h6\">Order #{order.id}</Typography>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            key={\"orderListTitle\"}\r\n            className={classes.orderListTitle}\r\n          >\r\n            <Card className={classes.orderDetailsCard}>\r\n              <CardActionArea>\r\n                {order.items.map((item) => (\r\n                  <OrderItem orderItem={item} orderItemClick={orderItemClick} />\r\n                ))}\r\n              </CardActionArea>\r\n              <CardContent>\r\n                <Typography variant=\"subtitle1\" align=\"right\">\r\n                  Created:{\" \"}\r\n                  {new Date(order.createdDate).toLocaleDateString(\"en-US\")}{\" \"}\r\n                  {new Date(order.createdDate).toLocaleTimeString(\"en-US\")}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" align=\"right\">\r\n                  Status: {order.status}\r\n                </Typography>\r\n                <div>\r\n                  <Typography variant=\"subtitle1\" align=\"right\">\r\n                    Total ${order.total.toFixed(2)}\r\n                  </Typography>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n        <div\r\n          item\r\n          key=\"billingAndShipping\"\r\n          className={classes.orderDetailsBillingAndShipping}\r\n        >\r\n          <Card className={classes.orderBillingAndShippingCard}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Billing</Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                {order.billingDetails.name}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                {order.billingDetails.email}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                {order.billingDetails.phone}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                {order.billingDetails.address.addressLineOne}\r\n              </Typography>\r\n              {order.billingDetails.address.addressLineTwo ? (\r\n                <Typography variant=\"subtitle1\">\r\n                  {order.billingDetails.address.addressLineTwo}\r\n                </Typography>\r\n              ) : null}\r\n              <Typography variant=\"subtitle1\">\r\n                {order.billingDetails.address.city}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                {order.billingDetails.address.postalCode}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                {order.billingDetails.address.country}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n          <Card className={classes.orderBillingAndShippingCard}>\r\n            {order.isShippingSameAsBilling ? (\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Shipping</Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  Shipped to the billing address\r\n                </Typography>\r\n              </CardContent>\r\n            ) : (\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Shipping</Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  {order.shippingDetails.name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  {order.shippingDetails.phone}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  {order.shippingDetails.address.addressLineOne}\r\n                </Typography>\r\n                {order.shippingDetails.address.addressLineTwo ? (\r\n                  <Typography variant=\"subtitle1\">\r\n                    {order.shippingDetails.address.addressLineTwo}\r\n                  </Typography>\r\n                ) : null}\r\n                <Typography variant=\"subtitle1\">\r\n                  {order.shippingDetails.address.city}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  {order.shippingDetails.address.postalCode}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  {order.shippingDetails.address.country}\r\n                </Typography>\r\n              </CardContent>\r\n            )}\r\n          </Card>\r\n        </div>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React from \"react\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n// https://reactrouter.com/web/example/auth-workflow\r\n\r\n// A wrapper for <Route> that redirects to the login\r\n// screen if you're not yet authenticated.\r\nfunction AdminRoute({ children, ...rest }) {\r\n  let { currentUser } = useAuth();\r\n\r\n  const isAdmin = () => {\r\n    if (currentUser === null) return false;\r\n\r\n    var decoded = jwt_decode(currentUser.authenticationToken);\r\n    let auth = [];\r\n    decoded.authorities.map((authority) => {\r\n      auth.push(authority.authority);\r\n    });\r\n    if (auth.includes(\"ROLE_ADMIN\")) return true;\r\n    else return false;\r\n  };\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        currentUser && isAdmin() ? ( // check if authenticated and user is an admin\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default AdminRoute;\r\n","import React, { useState } from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nconst TopProductCard = ({ product }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const productClick = (product) => {\r\n    history.push(`/admin/products/${product.id}`);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} key={product.id}>\r\n      <div\r\n        className={classes.verticalCard}\r\n        onClick={() => productClick(product)}\r\n      >\r\n        <div>\r\n          <CardMedia\r\n            className={classes.productCardVerticalImage}\r\n            image={product.images[0] ? product.images[0] : null}\r\n            title={product.name}\r\n          />\r\n          <CardContent className={classes.snackCardContent}>\r\n            <Typography gutterBottom variant=\"subtitle1\">\r\n              ID: #{product.id}\r\n            </Typography>\r\n            <Typography gutterBottom variant=\"subtitle1\">\r\n              Name: {product.name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              Price: ${product.price.toFixed(2)}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              Units Sold This Month: {product.unitsSold}\r\n            </Typography>\r\n          </CardContent>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={classes.productCardHorizontal}\r\n        onClick={() => productClick(product)}\r\n      >\r\n        <div className={classes.cartItemCardActionArea}>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            className={classes.productCardHorizontalID}\r\n          >\r\n            #{product.id}\r\n          </Typography>\r\n          <div className={classes.productCardHorizontalMain}>\r\n            <CardMedia\r\n              className={classes.productCardHorizontalImage}\r\n              image={product.images[0] ? product.images[0] : null}\r\n              title={product.name}\r\n            />\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              className={classes.productCardHorizontalName}\r\n            >\r\n              {product.name}\r\n            </Typography>\r\n          </div>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            className={classes.productCardHorizontalPrice}\r\n          >\r\n            ${product.price.toFixed(2)}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            className={classes.productCardHorizontalUnitsSold}\r\n          >\r\n            {product.unitsSold}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopProductCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { useHistory } from \"react-router\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport TopProductCard from \"./TopProductCard\";\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n  const handleClick = () => {};\r\n\r\n  const { currentUser } = useAuth();\r\n  const [token, setToken] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const [orderStats, setOrderStats] = useState({});\r\n  const [newUsers, setNewUsers] = useState(0);\r\n  const [topProducts, setTopProducts] = useState([]);\r\n  const [range, setRange] = useState(\"month\");\r\n\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  const getOrderStats = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(\"/admin/orders/stats\", {\r\n        params: {\r\n          range,\r\n        },\r\n        headers: { Authorization: token },\r\n      });\r\n      setOrderStats(response.data);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const getUserStats = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(\"/admin/users/stats\", {\r\n        params: {\r\n          range,\r\n        },\r\n        headers: { Authorization: token },\r\n      });\r\n      setNewUsers(response.data.newUsers);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const getTopSellingProducts = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(\"/admin/products\", {\r\n        params: {\r\n          search: \"\",\r\n          pageSize: 5,\r\n          pageNumber: 0,\r\n          itemsSold: range,\r\n          sortBy: \"unitsSold\",\r\n          sortDirection: \"DESC\",\r\n        },\r\n        headers: { Authorization: token },\r\n      });\r\n      setTopProducts(response.data.content);\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token !== null && range) {\r\n      getOrderStats();\r\n      getUserStats();\r\n      getTopSellingProducts();\r\n    }\r\n  }, [token, range]);\r\n\r\n  const orderStatsClick = () => {\r\n    let sortBy = \"createdDate\";\r\n    let direction = \"DESC\";\r\n    let pageNumberUI = 1;\r\n    history.push({\r\n      pathname: `/admin/orders`,\r\n      search: `?sortBy=${sortBy}&direction=${direction}&page=${pageNumberUI}`,\r\n    });\r\n  };\r\n\r\n  const userStatsClick = () => {\r\n    let sortBy = \"joinDate\";\r\n    let direction = \"DESC\";\r\n    let pageNumberUI = 1;\r\n    history.push({\r\n      pathname: `/admin/members`,\r\n      search: `?sortBy=${sortBy}&direction=${direction}&page=${pageNumberUI}`,\r\n    });\r\n  };\r\n\r\n  const topProductsClick = () => {\r\n    let sortBy = \"unitsSold\";\r\n    let direction = \"DESC\";\r\n    let pageNumberUI = 1;\r\n    history.push({\r\n      pathname: `/admin/products`,\r\n      search: `?&sortBy=${sortBy}&direction=${direction}&includeOrders=${range}&page=${pageNumberUI}`,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n      <Grid item xs={12} key=\"pageTitle\" className={classes.cartHeader}>\r\n        <h2 className={classes.cartHeaderTitle}>Dashboard</h2>\r\n        <FormControl className={classes.adminSelector}>\r\n          <InputLabel id=\"range\">Range</InputLabel>\r\n          <Select\r\n            labelId=\"range\"\r\n            id=\"rangeSelect\"\r\n            value={range}\r\n            onChange={(event) => setRange(event.target.value)}\r\n          >\r\n            <MenuItem value={\"all\"}>All</MenuItem>\r\n            <MenuItem value={\"month\"}>Month</MenuItem>\r\n            <MenuItem value={\"year\"}>Year</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12} md={5} key=\"ordersThisMonth\">\r\n        <Card className={classes.root}>\r\n          <CardContent>\r\n            <div className={classes.dashboardTile}>\r\n              <div className={classes.dashboardTileItem}>\r\n                <Typography\r\n                  className={classes.title}\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  Successfull Orders\r\n                </Typography>\r\n                <Typography variant=\"h5\" className={classes.success}>\r\n                  {orderStats.successfulOrders}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.dashboardTileItem}>\r\n                <Typography\r\n                  className={classes.title}\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  Unsuccessful Orders\r\n                </Typography>\r\n                <Typography variant=\"h5\" className={classes.error}>\r\n                  {orderStats.unsuccessfulOrders}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button size=\"small\" onClick={orderStatsClick}>\r\n              See Details\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={5} key=\"totalIncomeThisMonth\">\r\n        <Card className={classes.root}>\r\n          <CardContent>\r\n            <div className={classes.dashboardTile}>\r\n              <div className={classes.dashboardTileItem}>\r\n                <Typography\r\n                  className={classes.title}\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  Total Income This Month\r\n                </Typography>\r\n                {orderStats.totalIncome !== null &&\r\n                typeof orderStats.totalIncome !== \"undefined\" ? (\r\n                  <Typography variant=\"h5\" className={classes.success}>\r\n                    ${orderStats.totalIncome.toFixed(2)}\r\n                  </Typography>\r\n                ) : null}\r\n              </div>\r\n              <div className={classes.dashboardTileItem}>\r\n                <Typography\r\n                  className={classes.title}\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  Unsuccessful Payments\r\n                </Typography>\r\n                {orderStats.unsuccessfulPayments !== null &&\r\n                typeof orderStats.unsuccessfulPayments !== \"undefined\" ? (\r\n                  <Typography variant=\"h5\" className={classes.error}>\r\n                    ${orderStats.unsuccessfulPayments.toFixed(2)}\r\n                  </Typography>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button size=\"small\" onClick={orderStatsClick}>\r\n              See Details\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={2} key=\"newUsersThisMonth\">\r\n        <Card className={classes.root}>\r\n          <CardContent>\r\n            <div className={classes.dashboardTile}>\r\n              <div className={classes.dashboardTileItem}>\r\n                <Typography\r\n                  className={classes.title}\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  New Users\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  {newUsers}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button size=\"small\" onClick={userStatsClick}>\r\n              See Details\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} key=\"topSellingProducts\">\r\n        <Card className={classes.root}>\r\n          <CardContent>\r\n            <Typography\r\n              className={classes.title}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n            >\r\n              Top Selling Products\r\n            </Typography>\r\n            <div className={classes.productCardHorizontalTitle}>\r\n              <div className={classes.cartItemCardActionArea}>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  className={classes.productCardHorizontalID}\r\n                >\r\n                  ID\r\n                </Typography>\r\n                <div className={classes.productCardHorizontalMain}>\r\n                  <Typography\r\n                    variant=\"subtitle1\"\r\n                    className={classes.productCardHorizontalName}\r\n                  >\r\n                    Product\r\n                  </Typography>\r\n                </div>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  className={classes.productCardHorizontalPrice}\r\n                >\r\n                  Price\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  className={classes.productCardHorizontalUnitsSold}\r\n                >\r\n                  Units Sold\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            {topProducts.map((product) => (\r\n              <TopProductCard product={product} key={product.id} />\r\n            ))}\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button size=\"small\" onClick={topProductsClick}>\r\n              See Details\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  useMediaQuery,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\n\r\nconst OrderCardAdmin = ({ order }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const { currentUser } = useAuth();\r\n  const [token, setToken] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  const itemClick = (id) => {\r\n    history.push(`/admin/orders/${id}`);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} key={order.id}>\r\n      <Card className={classes.orderCardMobile}>\r\n        <CardActionArea\r\n          onClick={() => itemClick(order.id)}\r\n          className={classes.orderCardActionAreaMobile}\r\n        >\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            Order: #{order.id}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            User: {order.user.username}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem2}\r\n          >\r\n            Created: {new Date(order.createdDate).toLocaleDateString(\"en-US\")}\r\n          </Typography>\r\n          {order.status === \"CANCELLED\" ||\r\n          order.status === \"FAILED\" ||\r\n          order.status === \"REFUNDED\" ? (\r\n            <div>\r\n              <div className={classes.orderCardActionAreaItem2}>\r\n                <Typography variant=\"subtitle1\" className={classes.error}>\r\n                  Status: {order.status}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.orderCardActionAreaItem}>\r\n                <Typography variant=\"subtitle1\" className={classes.error}>\r\n                  Total: ${order.total.toFixed(2)}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <div className={classes.orderCardActionAreaItem2}>\r\n                <Typography variant=\"subtitle1\" className={classes.success}>\r\n                  Status: {order.status}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.orderCardActionAreaItem}>\r\n                <Typography variant=\"subtitle1\" className={classes.success}>\r\n                  Total: ${order.total.toFixed(2)}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </CardActionArea>\r\n        <CardActions className={classes.snackCardActions}>\r\n          <UpdateOrder order={order} buttonSize=\"large\" token={token} />\r\n        </CardActions>\r\n      </Card>\r\n      <Card className={classes.orderCard}>\r\n        <CardActionArea\r\n          onClick={() => itemClick(order.id)}\r\n          className={classes.orderCardActionArea}\r\n        >\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            #{order.id}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            className={classes.orderCardActionAreaItem2}\r\n          >\r\n            {order.user.username}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            className={classes.orderCardActionAreaItem2}\r\n          >\r\n            {new Date(order.createdDate).toLocaleDateString(\"en-US\")}\r\n          </Typography>\r\n          {order.status === \"CANCELLED\" ||\r\n          order.status === \"FAILED\" ||\r\n          order.status === \"REFUNDED\" ? (\r\n            <div className={classes.orderCardActionAreaItem2}>\r\n              <Typography variant=\"subtitle1\" className={classes.error}>\r\n                {order.status}\r\n              </Typography>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.orderCardActionAreaItem2}>\r\n              <Typography variant=\"subtitle1\" className={classes.success}>\r\n                {order.status}\r\n              </Typography>\r\n            </div>\r\n          )}\r\n          {order.status === \"CANCELLED\" ||\r\n          order.status === \"FAILED\" ||\r\n          order.status === \"REFUNDED\" ? (\r\n            <div className={classes.orderCardActionAreaItem}>\r\n              <Typography variant=\"subtitle1\" className={classes.error}>\r\n                ${order.total.toFixed(2)}\r\n              </Typography>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.orderCardActionAreaItem}>\r\n              <Typography variant=\"subtitle1\" className={classes.success}>\r\n                ${order.total.toFixed(2)}\r\n              </Typography>\r\n            </div>\r\n          )}\r\n        </CardActionArea>\r\n        <CardActions className={classes.snackCardActions}>\r\n          <UpdateOrder order={order} buttonSize=\"small\" token={token} />\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst UpdateOrder = ({ order, buttonSize, token }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [status, setStatus] = useState(order.status);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n\r\n  const submitOrderUpdate = async () => {\r\n    try {\r\n      const updateOrderRequest = {\r\n        id: order.id,\r\n        status,\r\n      };\r\n      const response = await SnackOverflow.put(\r\n        \"/admin/orders\",\r\n        updateOrderRequest,\r\n        {\r\n          headers: { Authorization: token },\r\n        }\r\n      );\r\n\r\n      if (200 === response.status) {\r\n        history.push(`/admin/orders/${response.data.id}`);\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleStatusChange = (event) => {\r\n    setStatus(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        size={buttonSize}\r\n        color=\"primary\"\r\n        onClick={() => handleClickOpen()}\r\n        startIcon={<EditIcon />}\r\n      >\r\n        Edit\r\n      </Button>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">\r\n          {`Update Status for Order #${order.id}`}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <FormControl className={classes.selector}>\r\n            <InputLabel id=\"status\">Status</InputLabel>\r\n            <Select\r\n              labelId=\"status\"\r\n              id=\"statusSelect\"\r\n              value={status}\r\n              onChange={handleStatusChange}\r\n            >\r\n              <MenuItem value={\"PAYMENT_PENDING\"}>Payment Processing</MenuItem>\r\n              <MenuItem value={\"PROCESSING\"}>Processing</MenuItem>\r\n              <MenuItem value={\"COMPLETED\"}>Completed</MenuItem>\r\n              <MenuItem value={\"FAILED\"}>Failed</MenuItem>\r\n              <MenuItem value={\"CANCELLED\"}>Cancelled</MenuItem>\r\n              <MenuItem value={\"REFUNDED\"}>Refunded</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={submitOrderUpdate} color=\"primary\" autoFocus>\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderCardAdmin;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  InputBase,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../../styles\";\r\nimport OrderCardAdmin from \"./OrderCardAdmin\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst Orders = () => {\r\n  const classes = useStyles();\r\n\r\n  const [token, setToken] = useState(null);\r\n  const { currentUser } = useAuth();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const [pageNumberUI, setPageNumberUI] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [sortBy, setSortBy] = useState(\"createdDate\");\r\n  const [direction, setDirection] = useState(\"DESC\");\r\n\r\n  useEffect(() => {\r\n    let urlParams = new URLSearchParams(location.search);\r\n\r\n    if (urlParams.get(\"search\") !== null) {\r\n      setSearch(urlParams.get(\"search\"));\r\n    }\r\n\r\n    if (urlParams.get(\"page\")) {\r\n      let currentPage = parseInt(urlParams.get(\"page\"));\r\n      setPageNumber(currentPage - 1);\r\n      setPageNumberUI(currentPage);\r\n    }\r\n    if (urlParams.get(\"sortBy\")) {\r\n      setSortBy(urlParams.get(\"sortBy\"));\r\n    }\r\n    if (urlParams.get(\"direction\")) {\r\n      setDirection(urlParams.get(\"direction\"));\r\n    }\r\n  }, [location]);\r\n\r\n  const handleSearchSubmit = () => {\r\n    history.push({\r\n      pathname: `/admin/orders`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${direction}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    history.push({\r\n      pathname: `/admin/orders`,\r\n      search: `?search=${\r\n        event.target.value\r\n      }&sortBy=${sortBy}&direction=${direction}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleSortByChange = (event) => {\r\n    history.push({\r\n      pathname: `/admin/orders`,\r\n      search: `?search=${search}&sortBy=${\r\n        event.target.value\r\n      }&direction=${direction}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleDirectionChange = (event) => {\r\n    history.push({\r\n      pathname: `/admin/orders`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${\r\n        event.target.value\r\n      }&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handlePageChange = (value) => {\r\n    history.push({\r\n      pathname: `/admin/orders`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${direction}&page=${value}`,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  const getOrders = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(\"/admin/orders\", {\r\n        params: {\r\n          search: search,\r\n          pageSize: 9,\r\n          pageNumber: pageNumber,\r\n          sortBy: sortBy,\r\n          sortDirection: direction,\r\n        },\r\n        headers: { Authorization: token },\r\n      });\r\n      setOrders(response.data.content);\r\n      setTotalPages(response.data.totalPages);\r\n    } catch (error) {}\r\n  };\r\n  useEffect(() => {\r\n    if (token !== null) {\r\n      getOrders();\r\n    }\r\n  }, [search, pageNumber, token, sortBy, direction]);\r\n\r\n  return (\r\n    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n      <Grid item xs={12} key=\"pageTitle\" className={classes.cartHeader}>\r\n        <h2 className={classes.cartHeaderTitle}>Orders</h2>\r\n        <FormControl className={classes.adminSelector}>\r\n          <InputLabel id=\"sortBy\">Sort By</InputLabel>\r\n          <Select\r\n            labelId=\"sortBy\"\r\n            id=\"sortBySelect\"\r\n            value={sortBy}\r\n            onChange={handleSortByChange}\r\n          >\r\n            <MenuItem value={\"createdDate\"}>Created Date</MenuItem>\r\n            <MenuItem value={\"id\"}>ID</MenuItem>\r\n            <MenuItem value={\"user.username\"}>Username</MenuItem>\r\n            <MenuItem value={\"status\"}>Status</MenuItem>\r\n            <MenuItem value={\"total\"}>Total</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.adminSelector}>\r\n          <InputLabel id=\"direction\">Direction</InputLabel>\r\n          <Select\r\n            labelId=\"direction\"\r\n            id=\"direcitonSelect\"\r\n            value={direction}\r\n            onChange={handleDirectionChange}\r\n          >\r\n            <MenuItem value={\"ASC\"}>Ascending</MenuItem>\r\n            <MenuItem value={\"DESC\"}>Descending</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid container xs={12} spacing={1} key=\"orderInfo\">\r\n        <Grid item xs={12} key={\"listTitle\"} className={classes.orderListTitle}>\r\n          <Paper className={classes.adminSearchBar}>\r\n            <InputBase\r\n              className={classes.search}\r\n              autocomplete=\"off\"\r\n              placeholder=\"Search Orders By Username\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onChange={handleSearchChange}\r\n            />\r\n            <IconButton\r\n              type=\"submit\"\r\n              className={classes.iconButton}\r\n              aria-label=\"search\"\r\n              onClick={() => handleSearchSubmit()}\r\n            >\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </Paper>\r\n          <div className={classes.orderCard}>\r\n            <div className={classes.orderCardActionArea}>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.orderCardActionAreaItem}\r\n              >\r\n                Order\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.orderCardActionAreaItem2}\r\n              >\r\n                Username\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.orderCardActionAreaItem2}\r\n              >\r\n                Created\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.orderCardActionAreaItem2}\r\n              >\r\n                Status\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.orderCardActionAreaItem}\r\n              >\r\n                Total\r\n              </Typography>\r\n              <div className={classes.orderTitleFiller}></div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        {orders.map((order) => (\r\n          <OrderCardAdmin order={order} />\r\n        ))}\r\n      </Grid>\r\n      <Grid item xs={12} key=\"pagination\" className={classes.pagination}>\r\n        <div className={classes.snacksPaginationContainer}>\r\n          <Pagination\r\n            count={totalPages}\r\n            color=\"primary\"\r\n            page={pageNumberUI}\r\n            onChange={(event, value) => {\r\n              handlePageChange(value);\r\n            }}\r\n          />\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import React from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nconst ProductCard = ({ product }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const productClick = (product) => {\r\n    history.push(`/admin/products/${product.id}`);\r\n  };\r\n\r\n  const editProductClick = (product) => {\r\n    history.push(`/admin/products/edit/${product.id}`);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} key={product.id}>\r\n      <Card className={classes.verticalCard}>\r\n        <CardActionArea onClick={() => productClick(product)}>\r\n          <CardMedia\r\n            className={classes.productCardVerticalImage}\r\n            image={product.images[0] ? product.images[0] : null}\r\n            title={product.name}\r\n          />\r\n          <CardContent className={classes.snackCardContent}>\r\n            <Typography gutterBottom variant=\"subtitle1\">\r\n              ID: #{product.id}\r\n            </Typography>\r\n            <Typography gutterBottom variant=\"subtitle1\">\r\n              Name: {product.name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              Created Date:{\" \"}\r\n              {new Date(product.createdDate).toLocaleDateString(\"en-US\")}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              Price: ${product.price.toFixed(2)}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              Units Sold This Month: {product.unitsSold}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions className={classes.snackCardActions}>\r\n          <Button\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            onClick={() => editProductClick(product)}\r\n            startIcon={<EditIcon />}\r\n          >\r\n            Edit\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n\r\n      <Card className={classes.productCardHorizontal}>\r\n        <CardActionArea\r\n          className={classes.cartItemCardActionArea}\r\n          onClick={() => productClick(product)}\r\n        >\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            className={classes.productCardHorizontalID}\r\n          >\r\n            #{product.id}\r\n          </Typography>\r\n          <div className={classes.productCardHorizontalMain}>\r\n            <CardMedia\r\n              className={classes.productCardHorizontalImage}\r\n              image={product.images[0] ? product.images[0] : null}\r\n              title={product.name}\r\n            />\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              className={classes.productCardHorizontalName}\r\n            >\r\n              {product.name}\r\n            </Typography>\r\n          </div>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            className={classes.productCardHorizontalDate}\r\n          >\r\n            {new Date(product.createdDate).toLocaleDateString(\"en-US\")}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            className={classes.productCardHorizontalPrice}\r\n          >\r\n            ${product.price.toFixed(2)}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            className={classes.productCardHorizontalUnitsSold}\r\n          >\r\n            {product.unitsSold}\r\n          </Typography>\r\n        </CardActionArea>\r\n        <CardActions className={classes.cartItemCardActions}>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={() => editProductClick(product)}\r\n            startIcon={<EditIcon />}\r\n          >\r\n            Edit\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  Typography,\r\n  Button,\r\n  InputBase,\r\n  IconButton,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport useStyles from \"../../styles\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useHistory } from \"react-router\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst ProductsAdmin = () => {\r\n  const classes = useStyles();\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const [token, setToken] = useState(null);\r\n  const { currentUser } = useAuth();\r\n\r\n  const [products, setProducts] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const [pageNumberUI, setPageNumberUI] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [includeOrders, setIncludeOrders] = useState(\"all\");\r\n  const [sortBy, setSortBy] = useState(\"unitsSold\");\r\n  const [direction, setDirection] = useState(\"DESC\");\r\n\r\n  useEffect(() => {\r\n    let urlParams = new URLSearchParams(location.search);\r\n\r\n    if (urlParams.get(\"search\") !== null) {\r\n      setSearch(urlParams.get(\"search\"));\r\n    }\r\n\r\n    if (urlParams.get(\"page\")) {\r\n      let currentPage = parseInt(urlParams.get(\"page\"));\r\n      setPageNumber(currentPage - 1);\r\n      setPageNumberUI(currentPage);\r\n    }\r\n    if (urlParams.get(\"sortBy\")) {\r\n      setSortBy(urlParams.get(\"sortBy\"));\r\n    }\r\n    if (urlParams.get(\"direction\")) {\r\n      setDirection(urlParams.get(\"direction\"));\r\n    }\r\n    if (urlParams.get(\"includeOrders\")) {\r\n      setIncludeOrders(urlParams.get(\"includeOrders\"));\r\n    }\r\n  }, [location]);\r\n\r\n  const handleSearchSubmit = () => {\r\n    history.push({\r\n      pathname: `/admin/products`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${direction}&includeOrders=${includeOrders}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    history.push({\r\n      pathname: `/admin/products`,\r\n      search: `?search=${\r\n        event.target.value\r\n      }&sortBy=${sortBy}&direction=${direction}&includeOrders=${includeOrders}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleIncludeOrdersChange = (event) => {\r\n    history.push({\r\n      pathname: `/admin/products`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${direction}&includeOrders=${\r\n        event.target.value\r\n      }&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleSortByChange = (event) => {\r\n    history.push({\r\n      pathname: `/admin/products`,\r\n      search: `?search=${search}&sortBy=${\r\n        event.target.value\r\n      }&direction=${direction}&includeOrders=${includeOrders}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleDirectionChange = (event) => {\r\n    history.push({\r\n      pathname: `/admin/products`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${\r\n        event.target.value\r\n      }&includeOrders=${includeOrders}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handlePageChange = (value) => {\r\n    history.push({\r\n      pathname: `/admin/products`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${direction}&includeOrders=${includeOrders}&page=${value}`,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  const getProducts = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(\"/admin/products\", {\r\n        params: {\r\n          search: search,\r\n          pageSize: 9,\r\n          pageNumber: pageNumber,\r\n          itemsSold: includeOrders,\r\n          sortBy: sortBy,\r\n          sortDirection: direction,\r\n        },\r\n        headers: { Authorization: token },\r\n      });\r\n      setProducts(response.data.content);\r\n      setTotalPages(response.data.totalPages);\r\n    } catch (error) {}\r\n  };\r\n  // Call Get Snacks Once\r\n  useEffect(() => {\r\n    if (token !== null) getProducts();\r\n  }, [search, pageNumber, token, sortBy, includeOrders, direction]);\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item xs={12} key=\"pageTitle\" className={classes.cartHeader}>\r\n          <h2 className={classes.cartHeaderTitle}>Products</h2>\r\n          <FormControl className={classes.adminSelector}>\r\n            <InputLabel id=\"includeOrders\">Include Orders</InputLabel>\r\n            <Select\r\n              labelId=\"includeOrders\"\r\n              id=\"includeOrdersSelect\"\r\n              value={includeOrders}\r\n              onChange={handleIncludeOrdersChange}\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"month\"}>Month</MenuItem>\r\n              <MenuItem value={\"year\"}>Year</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl className={classes.adminSelector}>\r\n            <InputLabel id=\"sortBy\">Sort By</InputLabel>\r\n            <Select\r\n              labelId=\"sortBy\"\r\n              id=\"sortBySelect\"\r\n              value={sortBy}\r\n              onChange={handleSortByChange}\r\n            >\r\n              <MenuItem value={\"createdDate\"}>Created Date</MenuItem>\r\n              <MenuItem value={\"id\"}>ID</MenuItem>\r\n              <MenuItem value={\"name\"}>Name</MenuItem>\r\n              <MenuItem value={\"price\"}>Price</MenuItem>\r\n              <MenuItem value={\"unitsSold\"}>Units Sold</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl className={classes.adminSelector}>\r\n            <InputLabel id=\"direction\">Direction</InputLabel>\r\n            <Select\r\n              labelId=\"direction\"\r\n              id=\"direcitonSelect\"\r\n              value={direction}\r\n              onChange={handleDirectionChange}\r\n            >\r\n              <MenuItem value={\"ASC\"}>Ascending</MenuItem>\r\n              <MenuItem value={\"DESC\"}>Descending</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          key=\"search\"\r\n          className={classes.adminSearchContainer}\r\n        >\r\n          <Paper className={classes.adminSearchBar}>\r\n            <InputBase\r\n              className={classes.search}\r\n              autocomplete=\"off\"\r\n              placeholder=\"Search Products by Name\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onChange={handleSearchChange}\r\n            />\r\n            <IconButton\r\n              type=\"submit\"\r\n              className={classes.iconButton}\r\n              aria-label=\"search\"\r\n              onClick={() => handleSearchSubmit()}\r\n            >\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </Paper>\r\n          <div className={classes.adminSelectorMobileContainer}>\r\n            <FormControl className={classes.adminSelectorMobile}>\r\n              <InputLabel id=\"includeOrders\">Include Orders</InputLabel>\r\n              <Select\r\n                labelId=\"includeOrders\"\r\n                id=\"includeOrdersSelect\"\r\n                value={includeOrders}\r\n                onChange={handleIncludeOrdersChange}\r\n              >\r\n                <MenuItem value={\"all\"}>All</MenuItem>\r\n                <MenuItem value={\"month\"}>Month</MenuItem>\r\n                <MenuItem value={\"year\"}>Year</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.adminSelectorMobile}>\r\n              <InputLabel id=\"sortBy\">Sort By</InputLabel>\r\n              <Select\r\n                labelId=\"sortBy\"\r\n                id=\"sortBySelect\"\r\n                value={sortBy}\r\n                onChange={handleSortByChange}\r\n              >\r\n                <MenuItem value={\"id\"}>ID</MenuItem>\r\n                <MenuItem value={\"name\"}>Name</MenuItem>\r\n                <MenuItem value={\"price\"}>Price</MenuItem>\r\n                <MenuItem value={\"unitsSold\"}>Units Sold</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.adminSelectorMobile}>\r\n              <InputLabel id=\"direction\">Direction</InputLabel>\r\n              <Select\r\n                labelId=\"direction\"\r\n                id=\"direcitonSelect\"\r\n                value={direction}\r\n                onChange={handleDirectionChange}\r\n              >\r\n                <MenuItem value={\"ASC\"}>Ascending</MenuItem>\r\n                <MenuItem value={\"DESC\"}>Descending</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n        </Grid>\r\n        <div className={classes.productCardHorizontalTitle}>\r\n          <div className={classes.cartItemCardActionArea}>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              className={classes.productCardHorizontalID}\r\n            >\r\n              ID\r\n            </Typography>\r\n            <div className={classes.productCardHorizontalMain}>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.productCardHorizontalName}\r\n              >\r\n                Product\r\n              </Typography>\r\n            </div>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              className={classes.productCardHorizontalDate}\r\n            >\r\n              Created\r\n            </Typography>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              className={classes.productCardHorizontalPrice}\r\n            >\r\n              Price\r\n            </Typography>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              className={classes.productCardHorizontalUnitsSold}\r\n            >\r\n              Units Sold\r\n            </Typography>\r\n            <div className={classes.productCardHorizontalFiller}>\r\n              <Button\r\n                size=\"large\"\r\n                color=\"primary\"\r\n                onClick={() => history.push(\"/admin/products/new\")}\r\n                startIcon={<AddIcon />}\r\n              >\r\n                New\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {products.map((product) => (\r\n          <ProductCard product={product} key={product.id} />\r\n        ))}\r\n      </Grid>\r\n      <Grid item xs={12} key=\"pagination\" className={classes.pagination}>\r\n        <div className={classes.snacksPaginationContainer}>\r\n          <Pagination\r\n            count={totalPages}\r\n            color=\"primary\"\r\n            page={pageNumberUI}\r\n            onChange={(event, value) => {\r\n              handlePageChange(value);\r\n            }}\r\n          />\r\n        </div>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductsAdmin;\r\n","import React from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport { Grid, Typography, Card, CardActionArea } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst MemberCard = ({ member }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const itemClick = (id) => {\r\n    //history.push(`/admin/members/${id}`);\r\n  };\r\n  return (\r\n    <Grid item xs={12} key={member.id}>\r\n      <Card className={classes.memberCardMobile}>\r\n        <CardActionArea\r\n          onClick={() => itemClick(member.id)}\r\n          className={classes.orderCardActionAreaMobile}\r\n        >\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            ID: #{member.id}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            Username: {member.username}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            Email: {member.email}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem2}\r\n          >\r\n            Full Name: {member.fullName}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            Role: {member.role}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem1}\r\n          >\r\n            Join Date: {new Date(member.joinDate).toLocaleDateString(\"en-US\")}\r\n          </Typography>\r\n        </CardActionArea>\r\n      </Card>\r\n      <Card className={classes.memberCard}>\r\n        <CardActionArea\r\n          onClick={() => itemClick(member.id)}\r\n          className={classes.orderCardActionArea}\r\n        >\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            #{member.id}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            className={classes.orderCardActionAreaItem2}\r\n          >\r\n            {member.username}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            className={classes.orderCardActionAreaItem2}\r\n          >\r\n            {member.email}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            className={classes.orderCardActionAreaItem2}\r\n          >\r\n            {member.fullName}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            className={classes.orderCardActionAreaItem2}\r\n          >\r\n            {member.role}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            className={classes.orderCardActionAreaItem1}\r\n          >\r\n            {new Date(member.joinDate).toLocaleDateString(\"en-US\")}\r\n          </Typography>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MemberCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  Typography,\r\n  InputBase,\r\n  IconButton,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../../styles\";\r\nimport MemberCard from \"./MemberCard\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst Members = () => {\r\n  const classes = useStyles();\r\n  const [token, setToken] = useState(null);\r\n  const { currentUser } = useAuth();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const [pageNumberUI, setPageNumberUI] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  const [members, setMembers] = useState([]);\r\n  const [sortBy, setSortBy] = useState(\"joinDate\");\r\n  const [direction, setDirection] = useState(\"DESC\");\r\n\r\n  useEffect(() => {\r\n    let urlParams = new URLSearchParams(location.search);\r\n\r\n    if (urlParams.get(\"search\") !== null) {\r\n      setSearch(urlParams.get(\"search\"));\r\n    }\r\n\r\n    if (urlParams.get(\"page\")) {\r\n      let currentPage = parseInt(urlParams.get(\"page\"));\r\n      setPageNumber(currentPage - 1);\r\n      setPageNumberUI(currentPage);\r\n    }\r\n    if (urlParams.get(\"sortBy\")) {\r\n      setSortBy(urlParams.get(\"sortBy\"));\r\n    }\r\n    if (urlParams.get(\"direction\")) {\r\n      setDirection(urlParams.get(\"direction\"));\r\n    }\r\n  }, [location]);\r\n\r\n  const handleSearchSubmit = () => {\r\n    history.push({\r\n      pathname: `/admin/members`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${direction}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    history.push({\r\n      pathname: `/admin/members`,\r\n      search: `?search=${\r\n        event.target.value\r\n      }&sortBy=${sortBy}&direction=${direction}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleSortByChange = (event) => {\r\n    history.push({\r\n      pathname: `/admin/members`,\r\n      search: `?search=${search}&sortBy=${\r\n        event.target.value\r\n      }&direction=${direction}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleDirectionChange = (event) => {\r\n    history.push({\r\n      pathname: `/admin/members`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${\r\n        event.target.value\r\n      }&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handlePageChange = (value) => {\r\n    history.push({\r\n      pathname: `/admin/members`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${direction}&page=${value}`,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  const getMembers = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(\"/admin/users\", {\r\n        params: {\r\n          search: search,\r\n          pageSize: 9,\r\n          pageNumber: pageNumber,\r\n          sortBy: sortBy,\r\n          sortDirection: direction,\r\n        },\r\n        headers: { Authorization: token },\r\n      });\r\n      setMembers(response.data.content);\r\n      setTotalPages(response.data.totalPages);\r\n    } catch (error) {}\r\n  };\r\n  useEffect(() => {\r\n    if (token !== null) {\r\n      getMembers();\r\n    }\r\n  }, [search, pageNumber, token, sortBy, direction]);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"flex-start\"\r\n      alignItems=\"flex-start\"\r\n    >\r\n      <Grid item xs={12} key=\"pageTitle\" className={classes.cartHeader}>\r\n        <h2 className={classes.cartHeaderTitle}>Members</h2>\r\n        <FormControl className={classes.adminSelector}>\r\n          <InputLabel id=\"sortBy\">Sort By</InputLabel>\r\n          <Select\r\n            labelId=\"sortBy\"\r\n            id=\"sortBySelect\"\r\n            value={sortBy}\r\n            onChange={handleSortByChange}\r\n          >\r\n            <MenuItem value={\"email\"}>Email</MenuItem>\r\n            <MenuItem value={\"joinDate\"}>Join Date</MenuItem>\r\n            <MenuItem value={\"id\"}>ID</MenuItem>\r\n            <MenuItem value={\"role\"}>Role</MenuItem>\r\n            <MenuItem value={\"username\"}>Username</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.adminSelector}>\r\n          <InputLabel id=\"direction\">Direction</InputLabel>\r\n          <Select\r\n            labelId=\"direction\"\r\n            id=\"direcitonSelect\"\r\n            value={direction}\r\n            onChange={handleDirectionChange}\r\n          >\r\n            <MenuItem value={\"ASC\"}>Ascending</MenuItem>\r\n            <MenuItem value={\"DESC\"}>Descending</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12} key=\"search\" className={classes.adminSearchContainer}>\r\n        <Paper className={classes.adminSearchBar}>\r\n          <InputBase\r\n            className={classes.search}\r\n            autocomplete=\"off\"\r\n            placeholder=\"Search Members by Username\"\r\n            inputProps={{ \"aria-label\": \"search\" }}\r\n            onChange={handleSearchChange}\r\n            value={search}\r\n          />\r\n          <IconButton\r\n            type=\"submit\"\r\n            className={classes.iconButton}\r\n            aria-label=\"search\"\r\n            onClick={() => handleSearchSubmit()}\r\n          >\r\n            <SearchIcon />\r\n          </IconButton>\r\n        </Paper>\r\n        <div className={classes.adminSelectorMobileContainer}>\r\n          <FormControl className={classes.adminSelectorMobile}>\r\n            <InputLabel id=\"sortBy\">Sort By</InputLabel>\r\n            <Select\r\n              labelId=\"sortBy\"\r\n              id=\"sortBySelect\"\r\n              value={sortBy}\r\n              onChange={handleSortByChange}\r\n            >\r\n              <MenuItem value={\"email\"}>Email</MenuItem>\r\n              <MenuItem value={\"joinDate\"}>Join Date</MenuItem>\r\n              <MenuItem value={\"id\"}>ID</MenuItem>\r\n              <MenuItem value={\"username\"}>Username</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl className={classes.adminSelectorMobile}>\r\n            <InputLabel id=\"direction\">Direction</InputLabel>\r\n            <Select\r\n              labelId=\"direction\"\r\n              id=\"direcitonSelect\"\r\n              value={direction}\r\n              onChange={handleDirectionChange}\r\n            >\r\n              <MenuItem value={\"ASC\"}>Ascending</MenuItem>\r\n              <MenuItem value={\"DESC\"}>Descending</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n      </Grid>\r\n      <Grid container xs={12} spacing={1} key=\"memberInfo\">\r\n        <Grid item xs={12} key={\"listTitle\"}>\r\n          <div className={classes.memberCard}>\r\n            <div className={classes.orderCardActionArea}>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.orderCardActionAreaItem}\r\n              >\r\n                ID\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.orderCardActionAreaItem2}\r\n              >\r\n                Username\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.orderCardActionAreaItem2}\r\n              >\r\n                Email\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.orderCardActionAreaItem2}\r\n              >\r\n                Full Name\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.orderCardActionAreaItem2}\r\n              >\r\n                Role\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.orderCardActionAreaItem1}\r\n              >\r\n                Join Date\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        {members.map((member) => (\r\n          <MemberCard member={member} key={member.id} />\r\n        ))}\r\n      </Grid>\r\n      <Grid item xs={12} key=\"pagination\" className={classes.pagination}>\r\n        <div className={classes.snacksPaginationContainer}>\r\n          <Pagination\r\n            count={totalPages}\r\n            color=\"primary\"\r\n            page={pageNumberUI}\r\n            onChange={(event, value) => {\r\n              handlePageChange(value);\r\n            }}\r\n          />\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Members;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Grid, Link } from \"@material-ui/core\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport useStyles from \"../../styles\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport OrderItem from \"../Account/OrderItem\";\r\n\r\nconst OrderAdmin = () => {\r\n  const { currentUser, logout } = useAuth();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [token, setToken] = useState(null);\r\n\r\n  const [order, setOrder] = useState(null);\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    const getOrder = async () => {\r\n      try {\r\n        const response = await SnackOverflow.get(`/admin/orders/${id}`, {\r\n          headers: { Authorization: token },\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          setOrder(response.data);\r\n        } else {\r\n          history.push(\"/admin/orders\");\r\n        }\r\n      } catch (error) {\r\n        history.push(\"/admin/orders\");\r\n      }\r\n    };\r\n\r\n    if (token !== null && id !== null) {\r\n      getOrder();\r\n    }\r\n  }, [id, token]);\r\n\r\n  const orderItemClick = (id) => {\r\n    history.push(`/admin/products/${id}`);\r\n  };\r\n\r\n  if (order === null) return <></>;\r\n\r\n  return (\r\n    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n      <Grid item xs={12} key=\"orderInfo\">\r\n        <Typography variant=\"h6\">Order #{order.id}</Typography>\r\n        <Typography variant=\"h6\">\r\n          User:{\" \"}\r\n          <Link href={`/admin/members?search=${order.user.username}`}>\r\n            {order.user.username}\r\n          </Link>\r\n        </Typography>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          key={\"orderListTitle\"}\r\n          className={classes.orderListTitle}\r\n        >\r\n          <Card className={classes.orderDetailsCard}>\r\n            <CardActionArea>\r\n              {order.items.map((item) => (\r\n                <OrderItem orderItem={item} orderItemClick={orderItemClick} />\r\n              ))}\r\n            </CardActionArea>\r\n            <CardContent>\r\n              <Typography variant=\"subtitle1\" align=\"right\">\r\n                Created:{\" \"}\r\n                {new Date(order.createdDate).toLocaleDateString(\"en-US\")}{\" \"}\r\n                {new Date(order.createdDate).toLocaleTimeString(\"en-US\")}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" align=\"right\">\r\n                Status: {order.status}\r\n              </Typography>\r\n              <div>\r\n                <Typography variant=\"subtitle1\" align=\"right\">\r\n                  Total ${order.total.toFixed(2)}\r\n                </Typography>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n      <div\r\n        item\r\n        key=\"billingAndShipping\"\r\n        className={classes.orderDetailsBillingAndShipping}\r\n      >\r\n        <Card className={classes.orderBillingAndShippingCard}>\r\n          <CardContent>\r\n            <Typography variant=\"h6\">Billing</Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              {order.billingDetails.name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              {order.billingDetails.email}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              {order.billingDetails.phone}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              {order.billingDetails.address.addressLineOne}\r\n            </Typography>\r\n            {order.billingDetails.address.addressLineTwo ? (\r\n              <Typography variant=\"subtitle1\">\r\n                {order.billingDetails.address.addressLineTwo}\r\n              </Typography>\r\n            ) : null}\r\n            <Typography variant=\"subtitle1\">\r\n              {order.billingDetails.address.city}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              {order.billingDetails.address.postalCode}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              {order.billingDetails.address.country}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n        <Card className={classes.orderBillingAndShippingCard}>\r\n          {order.isShippingSameAsBilling ? (\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Shipping</Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                Shipped to the billing address\r\n              </Typography>\r\n            </CardContent>\r\n          ) : (\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Shipping</Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                {order.shippingDetails.name}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                {order.shippingDetails.phone}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                {order.shippingDetails.address.addressLineOne}\r\n              </Typography>\r\n              {order.shippingDetails.address.addressLineTwo ? (\r\n                <Typography variant=\"subtitle1\">\r\n                  {order.shippingDetails.address.addressLineTwo}\r\n                </Typography>\r\n              ) : null}\r\n              <Typography variant=\"subtitle1\">\r\n                {order.shippingDetails.address.city}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                {order.shippingDetails.address.postalCode}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                {order.shippingDetails.address.country}\r\n              </Typography>\r\n            </CardContent>\r\n          )}\r\n        </Card>\r\n      </div>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default OrderAdmin;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useSnack from \"../../hooks/useSnack\";\r\nimport useStyles from \"../../styles\";\r\nimport {\r\n  TextField,\r\n  CardMedia,\r\n  Button,\r\n  IconButton,\r\n  InputAdornment,\r\n  Card,\r\n  Typography,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst EditProduct = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  let { id } = useParams();\r\n  const [snack] = useSnack(id);\r\n  const { currentUser } = useAuth();\r\n  const [token, setToken] = useState(null);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setSuccessMessage(\"\");\r\n    try {\r\n      const updateProductRequest = {\r\n        ...snack,\r\n        name,\r\n        images,\r\n        description,\r\n        price,\r\n      };\r\n      const response = await SnackOverflow.put(\r\n        \"/admin/products\",\r\n        updateProductRequest,\r\n        {\r\n          headers: { Authorization: token },\r\n        }\r\n      );\r\n\r\n      if (200 === response.status) {\r\n        setSuccessMessage(\"Update Success!\");\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        setErrorMessage(error.response.data.errors[0].defaultMessage);\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n        // http.ClientRequest in node.js\r\n        setErrorMessage(\"Something went wrong. Try again later\");\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        setErrorMessage(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (snack !== null && snack.images) {\r\n      setName(snack.name);\r\n      setImages(snack.images);\r\n      setDescription(snack.description);\r\n      setPrice(snack.price);\r\n    }\r\n  }, [snack]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setConfirmId(\"\");\r\n  };\r\n\r\n  const [confirmId, setConfirmId] = useState(\"\");\r\n  const [confirmIdError, setConfirmIdError] = useState(\"\");\r\n\r\n  const deleteProduct = async () => {\r\n    try {\r\n      const response = await SnackOverflow.delete(`/admin/products/${id}`, {\r\n        headers: { Authorization: token },\r\n      });\r\n\r\n      if (200 === response.status) {\r\n        history.push(\"/admin/products\");\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        setConfirmIdError(error.response.data.errors[0].defaultMessage);\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n        // http.ClientRequest in node.js\r\n        setConfirmIdError(\"Something went wrong. Try again later\");\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        setConfirmIdError(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleConfirmDelete = (event) => {\r\n    event.preventDefault();\r\n    setConfirmIdError(\"\");\r\n    if (confirmId == snack.id) {\r\n      deleteProduct();\r\n    } else {\r\n      setConfirmIdError(\"ID does not match match\");\r\n    }\r\n  };\r\n\r\n  if (snack.deleted) {\r\n    return (\r\n      <div>\r\n        <div className={classes.cartHeader}>\r\n          <h2 className={classes.error}>Product #{id} no longer exists</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={classes.cartHeader}>\r\n        <h2 className={classes.cartHeaderTitle}>Product #{id}</h2>\r\n        <Button\r\n          className={classes.error}\r\n          size=\"small\"\r\n          onClick={handleClickOpen}\r\n          startIcon={<DeleteForeverIcon />}\r\n        >\r\n          Delete\r\n        </Button>\r\n        <Dialog\r\n          fullScreen={fullScreen}\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"responsive-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"responsive-dialog-title\">\r\n            {`Confirm delete by entering the Product ID`}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"confirmId\"\r\n              label={`Enter '${id}' to confirm`}\r\n              name=\"confirmId\"\r\n              autoComplete=\"false\"\r\n              onChange={(event) => {\r\n                setConfirmId(event.target.value);\r\n              }}\r\n              helperText={confirmIdError}\r\n              error={confirmIdError ? true : false}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button autoFocus onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleConfirmDelete} color=\"primary\" autoFocus>\r\n              Confirm\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n\r\n      <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"name\"\r\n          label=\"Name\"\r\n          name=\"name\"\r\n          autoComplete=\"false\"\r\n          value={name}\r\n          onChange={(event) => {\r\n            setName(event.target.value);\r\n          }}\r\n        />\r\n        <Images images={images} setImages={setImages} />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          multiline\r\n          rows={4}\r\n          id=\"description\"\r\n          label=\"Description\"\r\n          name=\"description\"\r\n          autoComplete=\"false\"\r\n          value={description}\r\n          onChange={(event) => {\r\n            setDescription(event.target.value);\r\n          }}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          type=\"number\"\r\n          required\r\n          fullWidth\r\n          id=\"price\"\r\n          label=\"Price\"\r\n          name=\"price\"\r\n          autoComplete=\"false\"\r\n          value={price}\r\n          InputProps={{\r\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n          }}\r\n          onChange={(event) => {\r\n            setPrice(event.target.value);\r\n          }}\r\n        />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Typography variant=\"h6\" className={classes.success}>\r\n          {successMessage}\r\n        </Typography>\r\n        <Typography variant=\"h6\" className={classes.error}>\r\n          {errorMessage}\r\n        </Typography>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Images = ({ images, setImages }) => {\r\n  const classes = useStyles();\r\n\r\n  const addMoreClick = () => {\r\n    setImages((images) => [...images, \"\"]);\r\n  };\r\n\r\n  const deleteClick = (index) => {\r\n    let arrayUpdate = [...images];\r\n    arrayUpdate.splice(index, 1);\r\n    setImages(arrayUpdate);\r\n  };\r\n\r\n  const updateImage = (index, value) => {\r\n    let arrayUpdate = [...images];\r\n    arrayUpdate[index] = value;\r\n    setImages(arrayUpdate);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.imageSection}>\r\n      {images.map((image, index) => (\r\n        <Card title={index} className={classes.editImageContainer}>\r\n          <div className={classes.editImageContainerImageContainer}>\r\n            <CardMedia\r\n              image={images[index]}\r\n              className={classes.editImageInputImage}\r\n              title={\"Image Preview\"}\r\n            />\r\n          </div>\r\n          <div className={classes.editImageInputTextInput}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"imageUrl\"\r\n              label=\"Image Url\"\r\n              name=\"imageUrl\"\r\n              autoComplete=\"false\"\r\n              value={images[index]}\r\n              onChange={(event) => {\r\n                updateImage(index, event.target.value);\r\n              }}\r\n            />\r\n            <IconButton>\r\n              <DeleteIcon color=\"error\" onClick={() => deleteClick(index)} />\r\n            </IconButton>\r\n          </div>\r\n        </Card>\r\n      ))}\r\n      <div className={classes.deleteImageContainer}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          onClick={() => addMoreClick()}\r\n        >\r\n          Add Image\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProduct;\r\n","import React from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport { Grid, Typography, Card, CardActionArea } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ProductPurchasedCard = ({ orderedItem }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const itemClick = (id) => {\r\n    history.push(`/admin/orders/${id}`);\r\n  };\r\n  return (\r\n    <Grid item xs={12} key={orderedItem.id}>\r\n      <Card className={classes.orderCardMobile}>\r\n        <CardActionArea\r\n          onClick={() => itemClick(orderedItem.orderId)}\r\n          className={classes.orderCardActionAreaMobile}\r\n        >\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            Order ID: {orderedItem.orderId}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem2}\r\n          >\r\n            Date:{\" \"}\r\n            {new Date(orderedItem.orderCreatedDate).toLocaleDateString(\"en-US\")}{\" \"}\r\n            {new Date(orderedItem.orderCreatedDate).toLocaleTimeString(\"en-US\")}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            Order Status: {orderedItem.orderStatus}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            Price: ${orderedItem.price.toFixed(2)}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            Quantity: {orderedItem.quantity}\r\n          </Typography>\r\n        </CardActionArea>\r\n      </Card>\r\n      <Card className={classes.orderCard}>\r\n        <CardActionArea\r\n          onClick={() => itemClick(orderedItem.orderId)}\r\n          className={classes.orderCardActionArea}\r\n        >\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            {orderedItem.orderId}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            {new Date(orderedItem.orderCreatedDate).toLocaleDateString(\"en-US\")}\r\n          </Typography>\r\n          {orderedItem.orderStatus === \"CANCELLED\" ||\r\n          orderedItem.orderStatus === \"FAILED\" ||\r\n          orderedItem.orderStatus === \"REFUNDED\" ? (\r\n            <div className={classes.orderCardActionAreaItem}>\r\n              <Typography variant=\"subtitle1\" className={classes.error}>\r\n                {orderedItem.orderStatus}\r\n              </Typography>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.orderCardActionAreaItem}>\r\n              <Typography variant=\"subtitle1\" className={classes.success}>\r\n                {orderedItem.orderStatus}\r\n              </Typography>\r\n            </div>\r\n          )}\r\n\r\n          {orderedItem.orderStatus === \"CANCELLED\" ||\r\n          orderedItem.orderStatus === \"FAILED\" ||\r\n          orderedItem.orderStatus === \"REFUNDED\" ? (\r\n            <div className={classes.orderCardActionAreaItem}>\r\n              <Typography variant=\"subtitle1\" className={classes.error}>\r\n                ${orderedItem.price.toFixed(2)}\r\n              </Typography>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.orderCardActionAreaItem}>\r\n              <Typography variant=\"subtitle1\" className={classes.success}>\r\n                ${orderedItem.price.toFixed(2)}\r\n              </Typography>\r\n            </div>\r\n          )}\r\n\r\n          {orderedItem.orderStatus === \"CANCELLED\" ||\r\n          orderedItem.orderStatus === \"FAILED\" ||\r\n          orderedItem.orderStatus === \"REFUNDED\" ? (\r\n            <div className={classes.orderCardActionAreaItem}>\r\n              <Typography variant=\"subtitle1\" className={classes.error}>\r\n                {orderedItem.quantity}\r\n              </Typography>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.orderCardActionAreaItem}>\r\n              <Typography variant=\"subtitle1\" className={classes.success}>\r\n                {orderedItem.quantity}\r\n              </Typography>\r\n            </div>\r\n          )}\r\n        </CardActionArea>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductPurchasedCard;\r\n","import React from \"react\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport useProduct from \"../../hooks/useProduct\";\r\nimport useStyles from \"../../styles\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\nimport ProductPurchasedCard from \"./ProductPurchasedCard\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport CarouselItem from \"../CarouselItem\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nconst ProductInfo = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  let { id } = useParams();\r\n  const [product] = useProduct(id);\r\n  const [orderedItems, setOrderedItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (product !== null) {\r\n      setOrderedItems(product.orderedItems);\r\n    }\r\n  }, [product]);\r\n\r\n  const editProductClick = (product) => {\r\n    history.push(`/admin/products/edit/${product.id}`);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n        {product.deleted ? (\r\n          <h2 className={classes.error}>This product is no longer available</h2>\r\n        ) : null}\r\n        <Grid item xs={12} key=\"title\" className={classes.cartHeader}>\r\n          <h2 className={classes.cartHeaderTitle}>Product Information</h2>\r\n          {product.deleted ? null : (\r\n            <Button\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              onClick={() => editProductClick(product)}\r\n              startIcon={<EditIcon />}\r\n            >\r\n              Edit\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} title=\"image\">\r\n          {product.images ? (\r\n            <Carousel\r\n              navButtonsAlwaysVisible={true}\r\n              next={() => {\r\n                /* Do stuff */\r\n              }}\r\n              prev={() => {\r\n                /* Do other stuff */\r\n              }}\r\n            >\r\n              {product.images.map((image, i) => (\r\n                <CarouselItem key={i} name={product.name} image={image} />\r\n              ))}\r\n            </Carousel>\r\n          ) : null}\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} title=\"description\">\r\n          <Typography gutterBottom variant=\"h5\" component=\"h5\">\r\n            {product.name}\r\n          </Typography>\r\n          <Typography variant=\"h6\" component=\"h6\">\r\n            ${product.price ? product.price.toFixed(2) : \"0.00\"}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {product.description}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} title=\"orderedItems\">\r\n          <Typography gutterBottom variant=\"h5\" component=\"h5\">\r\n            Sales\r\n          </Typography>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            key={\"orderListTitle\"}\r\n            className={classes.orderListTitle}\r\n          >\r\n            <div className={classes.orderCard}>\r\n              <div className={classes.orderCardActionArea}>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  className={classes.orderCardActionAreaItem}\r\n                >\r\n                  Order ID\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  className={classes.orderCardActionAreaItem}\r\n                >\r\n                  Date\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  className={classes.orderCardActionAreaItem}\r\n                >\r\n                  Status\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  className={classes.orderCardActionAreaItem}\r\n                >\r\n                  Price\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  className={classes.orderCardActionAreaItem}\r\n                >\r\n                  Quantity\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n          {orderedItems\r\n            ? orderedItems.map((orderedItem) => (\r\n                <ProductPurchasedCard orderedItem={orderedItem} />\r\n              ))\r\n            : null}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductInfo;\r\n","import { useState, useEffect } from \"react\";\r\nimport SnackOverflow from \"../api/SnackOverflow\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\n\r\nexport default (id) => {\r\n  const [product, setProduct] = useState({});\r\n  const [token, setToken] = useState(null);\r\n  const { currentUser } = useAuth();\r\n\r\n  const getProduct = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(`/admin/products/${id}`, {\r\n        headers: { Authorization: token },\r\n      });\r\n      setProduct(response.data);\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    if (token !== null) {\r\n      getProduct();\r\n    }\r\n  }, [token]);\r\n\r\n  return [product];\r\n};\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport {\r\n  TextField,\r\n  CardMedia,\r\n  Button,\r\n  IconButton,\r\n  InputAdornment,\r\n  Card,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst CreateProduct = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { currentUser } = useAuth();\r\n  const [token, setToken] = useState(null);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [categories, setCategories] = useState([]);\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setSuccessMessage(\"\");\r\n    setErrorMessage(\"\");\r\n    try {\r\n      const updateProductRequest = {\r\n        name,\r\n        images,\r\n        description,\r\n        price,\r\n        categories,\r\n      };\r\n      const response = await SnackOverflow.post(\r\n        \"/admin/products\",\r\n        updateProductRequest,\r\n        {\r\n          headers: { Authorization: token },\r\n        }\r\n      );\r\n\r\n      if (201 === response.status) {\r\n        setSuccessMessage(\"Update Success!\");\r\n        history.push(`/admin/products/${response.data.id}`);\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        setErrorMessage(error.response.data.errors[0].defaultMessage);\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n        // http.ClientRequest in node.js\r\n        setErrorMessage(\"Something went wrong. Try again later\");\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        setErrorMessage(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className={classes.cartHeaderTitle}>Create New Product</h2>\r\n      <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"name\"\r\n          label=\"Name\"\r\n          name=\"name\"\r\n          autoComplete=\"false\"\r\n          value={name}\r\n          onChange={(event) => {\r\n            setName(event.target.value);\r\n          }}\r\n        />\r\n        <Images images={images} setImages={setImages} />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          multiline\r\n          rows={4}\r\n          id=\"description\"\r\n          label=\"Description\"\r\n          name=\"description\"\r\n          autoComplete=\"false\"\r\n          value={description}\r\n          onChange={(event) => {\r\n            setDescription(event.target.value);\r\n          }}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          type=\"number\"\r\n          required\r\n          fullWidth\r\n          id=\"price\"\r\n          label=\"Price\"\r\n          name=\"price\"\r\n          autoComplete=\"false\"\r\n          value={price}\r\n          InputProps={{\r\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n          }}\r\n          onChange={(event) => {\r\n            setPrice(event.target.value);\r\n          }}\r\n        />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Typography variant=\"h6\" className={classes.success}>\r\n          {successMessage}\r\n        </Typography>\r\n        <Typography variant=\"h6\" className={classes.error}>\r\n          {errorMessage}\r\n        </Typography>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Images = ({ images, setImages }) => {\r\n  const classes = useStyles();\r\n\r\n  const addMoreClick = () => {\r\n    setImages((images) => [...images, \"\"]);\r\n  };\r\n\r\n  const deleteClick = (index) => {\r\n    let arrayUpdate = [...images];\r\n    arrayUpdate.splice(index, 1);\r\n    setImages(arrayUpdate);\r\n  };\r\n\r\n  const updateImage = (index, value) => {\r\n    let arrayUpdate = [...images];\r\n    arrayUpdate[index] = value;\r\n    setImages(arrayUpdate);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.imageSection}>\r\n      {images.map((image, index) => (\r\n        <Card title={index} className={classes.editImageContainer}>\r\n          <div className={classes.editImageContainerImageContainer}>\r\n            <CardMedia\r\n              image={images[index]}\r\n              className={classes.editImageInputImage}\r\n              title={\"Image Preview\"}\r\n            />\r\n          </div>\r\n          <div className={classes.editImageInputTextInput}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"imageUrl\"\r\n              label=\"Image Url\"\r\n              name=\"imageUrl\"\r\n              autoComplete=\"false\"\r\n              value={images[index]}\r\n              onChange={(event) => {\r\n                updateImage(index, event.target.value);\r\n              }}\r\n            />\r\n            <IconButton>\r\n              <DeleteIcon color=\"error\" onClick={() => deleteClick(index)} />\r\n            </IconButton>\r\n          </div>\r\n        </Card>\r\n      ))}\r\n      <div className={classes.deleteImageContainer}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          onClick={() => addMoreClick()}\r\n        >\r\n          Add Image\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateProduct;\r\n","import React from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport { Button, Box } from \"@material-ui/core\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport StorefrontIcon from \"@material-ui/icons/Storefront\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Orders from \"./Orders\";\r\nimport ProductsAdmin from \"./ProductsAdmin\";\r\nimport Members from \"./Members\";\r\nimport OrderAdmin from \"./OrderAdmin\";\r\nimport EditProduct from \"./EditProduct\";\r\nimport ProductInfo from \"./ProductInfo\";\r\nimport CreateProduct from \"./CreateProduct\";\r\n\r\nconst Admin = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const handleClick = (url) => {\r\n    history.push(url);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.dashboard}>\r\n      <div className={classes.dashboardMenu}>\r\n        <Button\r\n          onClick={() => handleClick(\"/admin\")}\r\n          size=\"large\"\r\n          className={classes.dashboardMenuItem}\r\n          startIcon={<DashboardIcon />}\r\n        >\r\n          Dashboard\r\n        </Button>\r\n        <Button\r\n          onClick={() => handleClick(\"/admin/orders\")}\r\n          size=\"large\"\r\n          className={classes.dashboardMenuItem}\r\n          startIcon={<ListAltIcon />}\r\n        >\r\n          Orders\r\n        </Button>\r\n        <Button\r\n          onClick={() => handleClick(\"/admin/products\")}\r\n          size=\"large\"\r\n          className={classes.dashboardMenuItem}\r\n          startIcon={<StorefrontIcon />}\r\n        >\r\n          Products\r\n        </Button>\r\n        <Button\r\n          onClick={() => handleClick(\"/admin/members\")}\r\n          size=\"large\"\r\n          className={classes.dashboardMenuItem}\r\n          startIcon={<PeopleIcon />}\r\n        >\r\n          Members\r\n        </Button>\r\n      </div>\r\n      <div className={classes.dashboardMenuMobile}>\r\n        <Button\r\n          onClick={() => handleClick(\"/admin\")}\r\n          size=\"large\"\r\n          className={classes.dashboardMenuItem}\r\n          startIcon={<DashboardIcon />}\r\n        ></Button>\r\n        <Button\r\n          onClick={() => handleClick(\"/admin/orders\")}\r\n          size=\"large\"\r\n          className={classes.dashboardMenuItem}\r\n          startIcon={<ListAltIcon />}\r\n        ></Button>\r\n        <Button\r\n          onClick={() => handleClick(\"/admin/products\")}\r\n          size=\"large\"\r\n          className={classes.dashboardMenuItem}\r\n          startIcon={<StorefrontIcon />}\r\n        ></Button>\r\n        <Button\r\n          onClick={() => handleClick(\"/admin/members\")}\r\n          size=\"large\"\r\n          className={classes.dashboardMenuItem}\r\n          startIcon={<PeopleIcon />}\r\n        ></Button>\r\n      </div>\r\n      <div className={classes.dashboardContent}>\r\n        <Switch>\r\n          <Route path=\"/admin/orders/:id\">\r\n            <OrderAdmin />\r\n          </Route>\r\n          <Route path=\"/admin/orders\">\r\n            <Orders />\r\n          </Route>\r\n          <Route path=\"/admin/products/new\">\r\n            <CreateProduct />\r\n          </Route>\r\n          <Route path=\"/admin/products/edit/:id\">\r\n            <EditProduct />\r\n          </Route>\r\n          <Route path=\"/admin/products/:id\">\r\n            <ProductInfo />\r\n          </Route>\r\n          <Route path=\"/admin/products\">\r\n            <ProductsAdmin />\r\n          </Route>\r\n          <Route path=\"/admin/members\">\r\n            <Members />\r\n          </Route>\r\n          <Route path=\"/admin\">\r\n            <Dashboard />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { Grid, Typography, CardMedia } from \"@material-ui/core\";\r\n\r\nimport SnackCard from \"../SnackSearch/SnackCard\";\r\nimport useStyles from \"../../styles\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\n\r\nconst Home = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [search, setSearch] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const [snacks, setSnacks] = useState([]);\r\n  const [newestSnacks, setNewestSnacks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setSearch(new URLSearchParams(location.search).get(\"search\"));\r\n  }, [location]);\r\n\r\n  const getPopularSnacks = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(\"/products\", {\r\n        params: {\r\n          search: \"\",\r\n          pageSize: 10,\r\n          pageNumber: 0,\r\n          sortBy: \"unitsSold\",\r\n          sortDirection: \"DESC\",\r\n          itemsSold: \"month\",\r\n        },\r\n      });\r\n      setSnacks(response.data.content);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const getNewestSnacks = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(\"/products\", {\r\n        params: {\r\n          search: \"\",\r\n          pageSize: 9,\r\n          pageNumber: 0,\r\n          sortBy: \"createdDate\",\r\n          sortDirection: \"DESC\",\r\n          itemsSold: \"all\",\r\n        },\r\n      });\r\n      setNewestSnacks(response.data.content);\r\n    } catch (error) {}\r\n  };\r\n\r\n  // Call Get Snacks Once\r\n  useEffect(() => {\r\n    getPopularSnacks();\r\n    getNewestSnacks();\r\n  }, [search]);\r\n\r\n  const snackClick = (snack) => {\r\n    history.push(`/snacks/${snack.id}`);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Grid\r\n        container\r\n        spacing={5}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item xs={12} key=\"title\" className={classes.cartHeader}>\r\n          <h2 className={classes.cartHeaderTitle}>Most Popular This Month</h2>\r\n        </Grid>\r\n        <Carousel\r\n          className={classes.homeCarousel}\r\n          navButtonsAlwaysVisible={true}\r\n          next={() => {\r\n            /* Do stuff */\r\n          }}\r\n          prev={() => {\r\n            /* Do other stuff */\r\n          }}\r\n        >\r\n          {snacks.map((snack, i) => (\r\n            <div\r\n              className={classes.snackCarouselItem}\r\n              key={snack.id}\r\n              onClick={() => snackClick(snack)}\r\n            >\r\n              <div className={classes.snackCarouselItemContent}>\r\n                <CardMedia\r\n                  className={classes.snackItemCarouselImage}\r\n                  image={snack.images[0] ? snack.images[0] : null}\r\n                  title={snack.name}\r\n                />\r\n                <div className={classes.snackItemCarouselDescription}>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h5\">\r\n                    {snack.name}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" component=\"h6\">\r\n                    ${snack.price.toFixed(2)}\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    {snack.description}\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </Carousel>\r\n        <Grid item xs={12} key=\"title\" className={classes.cartHeader}>\r\n          <h2 className={classes.cartHeaderTitle}>New Snacks</h2>\r\n        </Grid>\r\n        {newestSnacks.map((snack) => (\r\n          <SnackCard snack={snack} key={snack.id} />\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import \"./App.css\";\r\nimport \"@fontsource/roboto\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { CssBaseline, Container } from \"@material-ui/core\";\r\nimport {\r\n  ThemeProvider,\r\n  createTheme,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport { AuthProvider } from \"./context/AuthContext\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport { CartProvider } from \"./context/CartContext\";\r\n\r\nimport Navbar from \"./components/Navbar\";\r\nimport Snacks from \"./components/SnackSearch/Snacks\";\r\nimport Snack from \"./components/SnackPage/Snack\";\r\nimport Footer from \"./components/Footer\";\r\nimport LoginSignup from \"./components/Account/LoginSignup\";\r\nimport Account from \"./components/Account/Account\";\r\nimport Cart from \"./components/Cart/Cart\";\r\nimport Checkout from \"./components/Checkout/Checkout\";\r\nimport CheckoutSuccess from \"./components/Checkout/CheckoutSuccess\";\r\nimport CartRoute from \"./components/Checkout/CheckoutRoute\";\r\nimport Contact from \"./components/Contact/Contact\";\r\nimport Order from \"./components/Account/Order\";\r\nimport AdminRoute from \"./components/AdminRoute\";\r\nimport Admin from \"./components/Admin/Admin\";\r\nimport Home from \"./components/Home/Home\";\r\n\r\nfunction App() {\r\n  // Theme colors\r\n  // Blue: #00B1C6 or rgb(0,177,198)\r\n  // Yellow: #F8EB37 or rgb(248,235,55)\r\n  // Orange: #F3AB1C or rgb(243,171,28)\r\n  const theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#00B1C6\",\r\n        contrastText: \"#fff\",\r\n      },\r\n      secondary: {\r\n        main: \"#F8EB37\",\r\n      },\r\n      success: {\r\n        main: \"#4caf50\",\r\n      },\r\n    },\r\n  });\r\n\r\n  // Not using the styles.js because the theme created isn't being applied to the classes in App.js\r\n  // The theme does get applied to useStyles from styles.js when used on child components\r\n  const useStyles = makeStyles((theme) => ({\r\n    app: {\r\n      minHeight: \"100vh\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    main: {\r\n      paddingTop: 186,\r\n      backgroundImage: `url(${process.env.PUBLIC_URL + \"/pattern.png\"})`,\r\n      display: \"flex\",\r\n      flex: 1,\r\n    },\r\n    container: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      // padding: 20,\r\n      padding: 0,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AuthProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <CartProvider>\r\n          <CssBaseline />\r\n          <Router>\r\n            <div className={classes.app}>\r\n              <Navbar />\r\n              <main className={classes.main}>\r\n                <Container className={classes.container} maxWidth=\"lg\">\r\n                  <Switch>\r\n                    <Route path=\"/snacks/:id\">\r\n                      <Snack />\r\n                    </Route>\r\n                    <Route path=\"/snacks\">\r\n                      <Snacks />\r\n                    </Route>\r\n                    <Route path=\"/contact\">\r\n                      <Contact />\r\n                    </Route>\r\n                    <Route path=\"/login\">\r\n                      <LoginSignup />\r\n                    </Route>\r\n                    <Route path=\"/cart\">\r\n                      <Cart />\r\n                    </Route>\r\n                    <AdminRoute path=\"/admin\">\r\n                      <Admin />\r\n                    </AdminRoute>\r\n                    <PrivateRoute path=\"/account/orders/:id\">\r\n                      <Order />\r\n                    </PrivateRoute>\r\n                    <PrivateRoute path=\"/account\">\r\n                      <Account />\r\n                    </PrivateRoute>\r\n                    <PrivateRoute path=\"/checkout/success\">\r\n                      <CheckoutSuccess />\r\n                    </PrivateRoute>\r\n                    <PrivateRoute path=\"/checkout\">\r\n                      <CartRoute path=\"/checkout\">\r\n                        <Checkout />\r\n                      </CartRoute>\r\n                    </PrivateRoute>\r\n                    <Route path=\"/\">\r\n                      <Home />\r\n                    </Route>\r\n                  </Switch>\r\n                </Container>\r\n              </main>\r\n              <Footer />\r\n            </div>\r\n          </Router>\r\n        </CartProvider>\r\n      </ThemeProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}