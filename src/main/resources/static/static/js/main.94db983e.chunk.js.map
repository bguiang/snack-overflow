{"version":3,"sources":["api/SnackOverflow.js","context/AuthContext.js","components/PrivateRoute.js","context/CartContext.js","styles.js","components/Navbar.js","components/SnackSearch/SnackCard.js","components/SnackSearch/Snacks.js","hooks/useSnack.js","components/CarouselItem.js","components/SnackPage/Snack.js","components/Footer.js","components/Account/LoginSignup.js","components/Account/OrderCard.js","components/Account/Account.js","hooks/useOrders.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Checkout/CardSection.js","components/Checkout/CheckoutForm.js","components/Checkout/CheckoutItem.js","components/Checkout/Checkout.js","components/Checkout/CheckoutSuccess.js","components/Checkout/CheckoutRoute.js","components/Contact/Contact.js","components/Account/OrderItem.js","components/Account/Order.js","components/AdminRoute.js","components/Admin/TopProductCard.js","components/Admin/Dashboard.js","components/Admin/OrderCardAdmin.js","components/Admin/Orders.js","components/Admin/ProductCard.js","components/Admin/ProductsAdmin.js","components/Admin/MemberCard.js","components/Admin/Members.js","components/Admin/OrderAdmin.js","components/Admin/EditProduct.js","components/Admin/ProductPurchasedCard.js","components/Admin/ProductInfo.js","hooks/useProduct.js","components/Admin/CreateProduct.js","components/Admin/Admin.js","components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","AuthContext","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","useEffect","accessToken","setRefreshTimer","refresh","token","msToExpire","jwt_decode","exp","Date","now","oneMinuteToExpireMS","setTimeout","login","username","password","a","loginRequest","SnackOverflow","post","response","status","data","authenticationToken","get","auth","logout","Provider","value","useAuth","useContext","PrivateRoute","rest","render","location","to","pathname","state","from","SNACK_OVERFLOW_CART","ACTIONS","CartContext","findCartItemIndexByProductId","cart","productId","i","length","cartReducer","action","type","cartItemMatchedIndex","quantity","newItem","productName","push","Array","splice","localCartData","localStorage","getItem","JSON","parse","err","CartProvider","useReducer","dispatch","loadCart","setItem","stringify","cartContextValue","addItem","removeItem","updateItemQuantity","clearItems","getItemCount","cartItemCount","useCart","useStyles","makeStyles","theme","container","padding","content","appbar","backgroundColor","palette","secondary","main","toolbarContainer","paddingLeft","paddingRight","toolbar","flex","display","alignItems","toolbarMenu","breakpoints","down","up","mobileIconButton","menuButton","color","toolbarMenuMobile","socialsMenu","logo","height","paddingTop","paddingBottom","logoContainer","shoppingCartButton","bottomToolbar","primary","toolbar2","toolbar2Menu","toolbar2MenuItem","textTransform","fontWeight","toolbar2MenuMobile","toolbar2SearchContainer","marginLeft","marginRight","width","search","spacing","footer","justifyContent","footerText","loginSignUp","flexDirection","flexLineBetween","marginTop","marginBottom","borderTop","borderTopStyle","borderTopColor","borderLeft","borderLeftStyle","borderLeftColor","signUp","snacksPaginationContainer","snackCardContainer","snackCard","snackCardImage","snackCardContent","overflow","snackCardActions","snackCardQuantity","snackPageContainer","cartHeader","cartHeaderTitle","cartItemCard","cartItemCardActionArea","cartItemCardImage","margin","cartItemName","cartItemPrice","cartItemQuantity","textAlign","cartItemCardActions","checkoutHeader","checkoutHeaderTitle","checkoutForm","checkoutItem","checkoutItemName","checkoutItemPrice","checkoutItemQuantity","checkoutTotal","checkoutOrderInfo","addressCard","orderListTitle","orderListTitleMobile","orderCard","orderCardMobile","orderCardActionArea","orderCardActionAreaMobile","orderCardActionAreaItem","orderCardActionAreaItem2","orderItem","orderItemImageContainer","orderItemImage","orderItemName","orderItemPrice","orderItemQuantity","orderDetailsBillingAndShipping","orderBillingAndShippingCard","dashboard","dashboardMenu","dashboardMenuMobile","dashboardMenuItem","dashboardContent","imageSection","editImageContainer","editImageContainerImageContainer","editImageInputImage","minHeight","maxWidth","editImageInputTextInput","deleteImageContainer","productCardHorizontal","productCardHorizontalTitle","productCardNewProductButton","productCardHorizontalMain","productCardHorizontalImage","productCardHorizontalName","productCardHorizontalID","minWidth","productCardHorizontalDate","productCardHorizontalPrice","productCardHorizontalUnitsSold","productCardHorizontalFiller","verticalCard","productCardVerticalImage","selector","success","error","carouselImageContainer","alignContent","carouselImage","orderTitleFiller","adminSelector","border","position","verticalAlign","adminSelectorMobileContainer","adminSelectorMobile","adminSearchContainer","adminSearchBar","memberCard","memberCardMobile","dashboardTile","dashboardTileItem","homeCarousel","snackCarouselItem","snackCarouselItemContent","snackItemCarouselImage","snackItemCarouselDescription","Navbar","classes","history","useHistory","setSearch","isAdmin","decoded","authorities","map","authority","includes","accountButtonText","anchorEl","setAnchorEl","handleMenuClose","handleClick","url","AppBar","className","Container","Toolbar","Box","IconButton","href","target","onClick","src","process","Button","size","Typography","variant","aria-label","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","Paper","InputBase","autoComplete","placeholder","inputProps","onChange","iconButton","SnackCard","snack","setQuantity","Grid","item","xs","sm","md","Card","CardActionArea","snackClick","CardMedia","image","images","title","name","CardContent","gutterBottom","component","price","toFixed","description","CardActions","TextField","label","min","val","parseInt","isNaN","addToCartClick","Snacks","useLocation","snacks","setSnacks","setPageNumber","pageNumberUI","setPageNumberUI","totalPages","setTotalPages","sortBy","setSortBy","direction","setDirection","urlParams","URLSearchParams","urlSearch","urlPageNumber","urlPageNumberUI","urlSortBy","urlDirection","getSnacks","pageSize","pageNumber","itemsSold","sortDirection","params","handleSortByChange","handleDirectionChange","InputLabel","Select","labelId","FormControl","pagination","Pagination","count","page","handlePageChange","setSnack","getSnack","CarouselItem","Snack","useParams","useSnack","navButtonsAlwaysVisible","next","prev","deleted","Copyright","align","Link","getFullYear","Footer","Login","setUsername","setPassword","callback","replace","startsWith","usernameError","setUsernameError","passwordError","setPasswordError","paper","form","onSubmit","preventDefault","isValid","validator","isEmpty","isValidated","noValidate","required","fullWidth","autoFocus","helperText","submit","SignUp","signupSuccess","setSignupSuccess","signupError","setSignupError","fullName","setFullName","email","setEmail","passwordRepeat","setPasswordRepeat","fullNameError","setFullNameError","emailError","setEmailError","passwordRepeatError","setPasswordRepeatError","signup","signupRequest","message","request","isEmail","ignore_whitespace","isAlphanumeric","contains","isLength","max","isStrongPassword","minLength","minLowercase","minUppercase","minNumbers","minSymbols","LoginSignup","OrderCard","order","itemClick","createdDate","toLocaleDateString","toLocaleTimeString","total","Account","orders","setOrders","setToken","getOrders","headers","Authorization","useOrders","CartItem","cartItem","product","style","Transition","React","forwardRef","props","ref","Slide","Cart","isTotalTooLow","setIsTotalTooLow","items","cartInfo","setCartInfo","loadCartInfo","cartInfoRequest","Dialog","TransitionComponent","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","CARD_ELEMENT_OPTIONS","base","fontFamily","fontSmoothing","fontSize","invalid","iconColor","CardSection","options","CheckoutForm","clientSecret","stripe","useStripe","elements","useElements","paymentErrorMessage","setPaymentErrorMessage","billingName","setBillingName","billingEmail","setBillingEmail","billingPhone","setBillingPhone","billingAddressLine1","setBillingAddressLine1","billingAddressLine2","setBillingAddressLine2","billingCity","setBillingCity","billingState","setBillingState","billingPostalCode","setBillingPostalCode","billingCountry","setBillingCountry","isShippingSameAsBilling","setIsShippingSameAsBilling","shippingName","setShippingName","shippingPhone","setShippingPhone","shippingAddressLine1","setShippingAddressLine1","shippingAddressLine2","setShippingAddressLine2","shippingCity","setShippingCity","shippingState","setShippingState","shippingPostalCode","setShippingPostalCode","shippingCountry","setShippingCountry","submitting","setSubmitting","confirmPayment","shipping","address","line1","line2","city","postal_code","country","phone","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","result","paymentIntent","handleSubmit","checked","e","disabled","CheckoutItem","stripePromise","loadStripe","Checkout","setClientSecret","startCheckoutAndCreatePaymentIntent","client_secret","InjectedCheckoutForm","CheckoutSuccess","CheckoutRoute","Contact","OrderItem","orderItemClick","Order","setOrder","getOrder","orderDetailsCard","billingDetails","addressLineOne","addressLineTwo","postalCode","shippingDetails","AdminRoute","TopProductCard","productClick","unitsSold","Dashboard","orderStats","setOrderStats","newUsers","setNewUsers","topProducts","setTopProducts","range","setRange","getOrderStats","getUserStats","getTopSellingProducts","orderStatsClick","root","successfulOrders","unsuccessfulOrders","totalIncome","unsuccessfulPayments","UpdateOrder","buttonSize","setStatus","setOpen","useTheme","fullScreen","useMediaQuery","submitOrderUpdate","updateOrderRequest","put","handleClose","startIcon","OrderCardAdmin","user","Orders","currentPage","ProductCard","editProductClick","ProductsAdmin","products","setProducts","includeOrders","setIncludeOrders","handleIncludeOrdersChange","getProducts","MemberCard","member","role","orderCardActionAreaItem1","joinDate","Members","members","setMembers","getMembers","OrderAdmin","Images","setImages","index","arrayUpdate","updateImage","deleteClick","EditProduct","setName","setDescription","setPrice","successMessage","setSuccessMessage","errorMessage","setErrorMessage","updateProductRequest","errors","defaultMessage","setConfirmId","confirmId","confirmIdError","setConfirmIdError","deleteProduct","delete","multiline","rows","InputProps","startAdornment","InputAdornment","ProductPurchasedCard","orderedItem","orderId","orderCreatedDate","orderStatus","ProductInfo","setProduct","getProduct","useProduct","orderedItems","setOrderedItems","CreateProduct","categories","Admin","path","Home","popularSnacks","setPopularSnacks","newestSnacks","setNewestSnacks","getPopularSnacks","getNewestSnacks","App","createTheme","contrastText","app","backgroundImage","background","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94db983e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"/api/v1\", // spring boot backend\r\n});\r\n","import React, { useContext, useState, createContext, useEffect } from \"react\";\r\nimport SnackOverflow from \"../api/SnackOverflow\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n// Create context\r\nconst AuthContext = createContext();\r\n\r\n// Custom context provider\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  // Token Check on mount\r\n  // - Call refresh in a useEffect with empty array arg IF currentUser is null OR currentUser.token is expired\r\n  // - This will be called if the user refreshes the page or re-/enters the website\r\n  // - This + the timed refresh guarantees that the JWT is always either null or non-expired???\r\n  // - If refresh fails, setCurrentUser(null) in AuthContext\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      if (currentUser.accessToken) {\r\n        setRefreshTimer(currentUser.accessToken);\r\n      } else {\r\n        refresh(); // should never really happen\r\n      }\r\n    } else {\r\n      refresh();\r\n    }\r\n  }, []);\r\n\r\n  // Timed Background Refresh\r\n  // - When getting an authentication response back from either /login or /refresh, set up a function timer to call /refresh 1 min before the current token's expiration\r\n  const setRefreshTimer = (token) => {\r\n    let decoded = jwt_decode(token);\r\n    const expirationEpochMS = decoded.exp * 1000;\r\n    const nowEpochMS = Date.now();\r\n\r\n    const msToExpire = expirationEpochMS - nowEpochMS;\r\n\r\n    if (msToExpire < 60000) {\r\n      // If jwt is already within 1 minute of expiring, just call refresh. Includes less than zero or expired\r\n      refresh();\r\n    } else {\r\n      // otherwise, set timer to one minute of expiring\r\n      const oneMinuteToExpireMS = msToExpire - 60000;\r\n      const oneMinuteToExpire = oneMinuteToExpireMS / 1000;\r\n      setTimeout(() => {\r\n        refresh();\r\n      }, oneMinuteToExpireMS);\r\n    }\r\n  };\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      let loginRequest = { username: username, password: password };\r\n      const response = await SnackOverflow.post(\"/auth/login\", loginRequest);\r\n      if (response.status === 200) {\r\n        // Set CurrentUser\r\n        setCurrentUser(response.data);\r\n        // Set refresh timer function\r\n        setRefreshTimer(response.data.authenticationToken);\r\n      }\r\n    } catch (error) {}\r\n  };\r\n  const refresh = async () => {\r\n    try {\r\n      //browser has the refresh token cookie\r\n      const response = await SnackOverflow.get(\"/auth/refresh\");\r\n      if (response.status === 200) {\r\n        // Set CurrentUser\r\n        setCurrentUser(response.data);\r\n        // Set refresh timer function\r\n        setRefreshTimer(response.data.authenticationToken);\r\n      }\r\n    } catch (error) {\r\n      setCurrentUser(null);\r\n    }\r\n  };\r\n  const logout = async () => {\r\n    setCurrentUser(null);\r\n    try {\r\n      //browser has the refresh token cookie\r\n      const response = await SnackOverflow.get(\"/auth/logout\");\r\n      if (response.status === 200) {\r\n        setCurrentUser(null);\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n  // Context Value that we're passing down to child components of the provider\r\n  // TODO: optimize by memoization\r\n  const auth = {\r\n    currentUser,\r\n    login,\r\n    logout,\r\n  };\r\n\r\n  return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\r\n}\r\n\r\n// expose context\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n","import React from \"react\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n// https://reactrouter.com/web/example/auth-workflow\r\n\r\n// A wrapper for <Route> that redirects to the login\r\n// screen if you're not yet authenticated.\r\nfunction PrivateRoute({ children, ...rest }) {\r\n  let { currentUser } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        currentUser ? ( // check if authenticated\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React, { useContext, createContext, useEffect, useReducer } from \"react\";\r\n\r\nconst SNACK_OVERFLOW_CART = \"snackoverflow-cart\";\r\n\r\nconst ACTIONS = {\r\n  ADD_ITEM: \"add item\",\r\n  REMOVE_ITEM: \"remove item\",\r\n  UPDATE_ITEM_QUANTITY: \"update item quantity\",\r\n  CLEAR: \"clear\",\r\n  LOAD_CART: \"load cart\",\r\n};\r\n\r\n// Create context\r\nconst CartContext = createContext();\r\n\r\nconst findCartItemIndexByProductId = (cart, productId) => {\r\n  let i;\r\n  for (i = 0; i < cart.length; i++) {\r\n    if (cart[i].productId === productId) {\r\n      return i;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ACTIONS.ADD_ITEM: {\r\n      let cartItemMatchedIndex = findCartItemIndexByProductId(\r\n        state,\r\n        action.productId\r\n      );\r\n      if (cartItemMatchedIndex !== null) {\r\n        state[cartItemMatchedIndex].quantity += action.quantity;\r\n      } else {\r\n        let newItem = {\r\n          productName: action.productName,\r\n          productId: action.productId,\r\n          quantity: action.quantity,\r\n        };\r\n        state.push(newItem);\r\n      }\r\n      return Array.from(state);\r\n    }\r\n    case ACTIONS.REMOVE_ITEM: {\r\n      let cartItemMatchedIndex = findCartItemIndexByProductId(\r\n        state,\r\n        action.productId\r\n      );\r\n      if (cartItemMatchedIndex !== null) {\r\n        state.splice(cartItemMatchedIndex, 1);\r\n      }\r\n      return Array.from(state);\r\n    }\r\n    case ACTIONS.UPDATE_ITEM_QUANTITY: {\r\n      let cartItemMatchedIndex = findCartItemIndexByProductId(\r\n        state,\r\n        action.productId\r\n      );\r\n      if (cartItemMatchedIndex !== null) {\r\n        state[cartItemMatchedIndex].quantity = action.quantity;\r\n      } else {\r\n      }\r\n      return Array.from(state);\r\n    }\r\n    case ACTIONS.CLEAR: {\r\n      state = [];\r\n      return Array.from(state);\r\n    }\r\n    case ACTIONS.LOAD_CART: {\r\n      try {\r\n        let localCartData = localStorage.getItem(SNACK_OVERFLOW_CART);\r\n        if (localCartData !== null) state = JSON.parse(localCartData);\r\n        else state = [];\r\n      } catch (err) {\r\n        state = [];\r\n      }\r\n      return state;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Custom context provider\r\nexport function CartProvider({ children }) {\r\n  const [cart, dispatch] = useReducer(cartReducer, []);\r\n\r\n  // Load Cart Data from Local Storage on mount\r\n  useEffect(() => {\r\n    loadCart();\r\n  }, []);\r\n\r\n  // Save Cart to Local Storage whenever Cart is Updated\r\n  useEffect(() => {\r\n    localStorage.setItem(SNACK_OVERFLOW_CART, JSON.stringify(cart));\r\n  }, [cart]);\r\n\r\n  const addItem = ({ quantity, productId, productName }) => {\r\n    let action = { type: ACTIONS.ADD_ITEM, quantity, productId, productName };\r\n    dispatch(action);\r\n  };\r\n\r\n  const removeItem = ({ productId }) => {\r\n    let action = { type: ACTIONS.REMOVE_ITEM, productId };\r\n    dispatch(action);\r\n  };\r\n\r\n  const updateItemQuantity = ({ productId, quantity }) => {\r\n    let action = { type: ACTIONS.UPDATE_ITEM_QUANTITY, productId, quantity };\r\n    dispatch(action);\r\n  };\r\n\r\n  const clearItems = () => {\r\n    let action = { type: ACTIONS.CLEAR };\r\n    dispatch(action);\r\n  };\r\n\r\n  const loadCart = () => {\r\n    let action = { type: ACTIONS.LOAD_CART };\r\n    dispatch(action);\r\n  };\r\n  const getItemCount = () => {\r\n    let i;\r\n    let cartItemCount = 0;\r\n    for (i = 0; i < cart.length; i++) {\r\n      let item = cart[i];\r\n      cartItemCount += item.quantity;\r\n    }\r\n    return cartItemCount;\r\n  };\r\n\r\n  const cartContextValue = {\r\n    cart,\r\n    addItem,\r\n    removeItem,\r\n    updateItemQuantity,\r\n    clearItems,\r\n    getItemCount,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContextValue}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\n// expose context\r\nexport function useCart() {\r\n  return useContext(CartContext);\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// Theme colors\r\n// theme.palette.primary.main - Blue: #00B1C6 or rgb(0,177,198)\r\n// theme.palette.secondary.main - Yellow: #F8EB37 or rgb(248,235,55)\r\n// Orange: #F3AB1C or rgb(243,171,28)\r\n\r\n// style hook\r\n// uses the theme provider https://material-ui.com/customization/theming/\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: 0,\r\n  },\r\n  content: {\r\n    padding: 20,\r\n  },\r\n  appbar: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  toolbarContainer: {\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n  },\r\n  toolbar: {\r\n    // [theme.breakpoints.up(\"sm\")]: {\r\n    //   paddingLeft: 0,\r\n    // },\r\n    paddingRight: 0,\r\n    flex: 1,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  toolbarMenu: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"flex\",\r\n    },\r\n    flex: 1,\r\n    justifyContent: \"flex-end\",\r\n    padding: \"2px 4px\",\r\n    alignItems: \"center\",\r\n  },\r\n  mobileIconButton: {\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n  },\r\n  menuButton: {\r\n    color: \"white\",\r\n  },\r\n  toolbarMenuMobile: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"flex\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n    flex: 1,\r\n    justifyContent: \"flex-end\",\r\n    padding: \"2px 4px\",\r\n    alignItems: \"center\",\r\n  },\r\n  socialsMenu: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n    flex: 1,\r\n    padding: \"2px 4px\",\r\n    alignItems: \"center\",\r\n  },\r\n  logo: {\r\n    height: \"110px\",\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n  },\r\n  logoContainer: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n  },\r\n  shoppingCartButton: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      paddingRight: 0,\r\n    },\r\n  },\r\n  bottomToolbar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  toolbar2: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingLeft: 0,\r\n      paddingRight: 0,\r\n    },\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    flex: 1,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  toolbar2Menu: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n    flex: 1,\r\n    //justifyContent: \"flex-start\",\r\n    justifyContent: \"space-between\",\r\n    padding: \"2px 4px\",\r\n    alignItems: \"center\",\r\n  },\r\n  toolbar2MenuItem: {\r\n    textTransform: \"capitalize\",\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n  },\r\n  toolbar2MenuMobile: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n    justifyContent: \"flex-end\",\r\n    padding: \"2px 4px\",\r\n    alignItems: \"center\",\r\n  },\r\n  toolbar2SearchContainer: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: 0,\r\n      flex: 1,\r\n      marginRight: 36,\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginLeft: \"10%\",\r\n      width: 450,\r\n      marginRight: 24,\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      marginLeft: \"10%\",\r\n      width: 650,\r\n      marginRight: 0,\r\n    },\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  search: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    height: 80,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  footerText: {\r\n    color: \"#ffffff\",\r\n  },\r\n  loginSignUp: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      flexDirection: \"row\",\r\n    },\r\n  },\r\n  login: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n  },\r\n  flexLineBetween: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: 16,\r\n      marginBottom: 16,\r\n      borderTop: \"1px\",\r\n      borderTopStyle: \"solid\",\r\n      borderTopColor: theme.palette.primary.main,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      borderLeft: \"1px\",\r\n      borderLeftStyle: \"solid\",\r\n      borderLeftColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  signUp: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n  },\r\n  snacksPaginationContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    paddingTop: 8,\r\n  },\r\n  snackCardContainer: {\r\n    display: \"flex\",\r\n  },\r\n  snackCard: {\r\n    flex: 1,\r\n  },\r\n  snackCardImage: {\r\n    height: 140,\r\n  },\r\n  snackCardContent: {\r\n    height: 200,\r\n    overflow: \"hidden\",\r\n  },\r\n  snackCardActions: {\r\n    marginTop: 4,\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  snackCardQuantity: {\r\n    width: 80,\r\n  },\r\n  snackPageContainer: { display: \"flex\" },\r\n\r\n  // Cart\r\n  cartHeader: {\r\n    display: \"flex\",\r\n  },\r\n  cartHeaderTitle: {\r\n    flex: 1,\r\n  },\r\n  cartItemCard: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      flexDirection: \"row\",\r\n    },\r\n    alignItems: \"center\",\r\n  },\r\n  cartItemCardActionArea: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n  },\r\n  cartItemCardImage: {\r\n    height: 100,\r\n    width: 100,\r\n    margin: 16,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      height: 80,\r\n      width: 80,\r\n    },\r\n  },\r\n  cartItemName: {\r\n    flex: 1,\r\n  },\r\n  cartItemPrice: { paddingLeft: 8, paddingRight: 8 },\r\n  cartItemQuantity: {\r\n    width: 100,\r\n    textAlign: \"center\",\r\n  },\r\n  cartItemCardActions: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n\r\n  // Checkout\r\n  checkoutHeader: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n  },\r\n  checkoutHeaderTitle: {\r\n    flex: 1,\r\n  },\r\n  checkoutForm: {\r\n    flex: 1,\r\n  },\r\n  checkoutItem: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  checkoutItemName: {\r\n    flex: 1,\r\n  },\r\n  checkoutItemPrice: { paddingLeft: 8, paddingRight: 8 },\r\n  checkoutItemQuantity: {\r\n    width: 80,\r\n    textAlign: \"center\",\r\n  },\r\n  checkoutTotal: {\r\n    textAlign: \"right\",\r\n    paddingTop: 8,\r\n    borderTop: \"1px\",\r\n    borderTopStyle: \"solid\",\r\n    borderTopColor: theme.palette.primary.main,\r\n    fontWeight: \"bold\",\r\n  },\r\n  checkoutOrderInfo: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  addressCard: {\r\n    padding: 16,\r\n    marginTop: 10,\r\n  },\r\n\r\n  // Orders\r\n  orderListTitle: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  orderListTitleMobile: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  orderCard: {\r\n    padding: 16,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  orderCardMobile: {\r\n    padding: 16,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  orderCardActionArea: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  orderCardActionAreaMobile: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  orderCardActionAreaItem: {\r\n    flex: 1,\r\n  },\r\n  orderCardActionAreaItem2: {\r\n    flex: 2,\r\n  },\r\n  orderItem: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: 16,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      flexDirection: \"row\",\r\n    },\r\n  },\r\n  orderItemImageContainer: {\r\n    width: 100,\r\n  },\r\n  orderItemImage: { height: 100 },\r\n  orderItemName: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  orderItemPrice: {\r\n    padding: 16,\r\n  },\r\n  orderItemQuantity: {\r\n    padding: 16,\r\n  },\r\n  orderDetailsBillingAndShipping: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      flexDirection: \"row\",\r\n    },\r\n  },\r\n  orderBillingAndShippingCard: {\r\n    flex: 1,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      margin: 8,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginRight: 8,\r\n    },\r\n  },\r\n  dashboard: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    padding: 0,\r\n  },\r\n  dashboardMenu: {\r\n    backgroundColor: \"#242526\",\r\n    width: 160,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"flex\",\r\n    },\r\n    flexDirection: \"column\",\r\n    boxShadow: \"1px 0 10px #242526\",\r\n    WebkitBoxShadow: \"1px 0 10px #242526\",\r\n    MozBoxShadow: \"1px 0 10px #242526\",\r\n  },\r\n  dashboardMenuMobile: {\r\n    backgroundColor: \"#242526\",\r\n    width: 40,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"flex\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n    flexDirection: \"column\",\r\n  },\r\n  dashboardMenuItem: {\r\n    color: theme.palette.secondary.main,\r\n    justifyContent: \"left\",\r\n  },\r\n  dashboardContent: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  imageSection: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  editImageContainer: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    padding: 10,\r\n  },\r\n  editImageContainerImageContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  editImageInputImage: {\r\n    flex: 1,\r\n    backgroundColor: \"#bebebe\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      minHeight: 150,\r\n      maxWidth: 320,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      minHeight: 250,\r\n      maxWidth: 320,\r\n    },\r\n  },\r\n  editImageInputTextInput: {\r\n    display: \"flex\",\r\n  },\r\n  deleteImageContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  productCardHorizontal: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n      flex: 1,\r\n      padding: 10,\r\n    },\r\n  },\r\n  productCardHorizontalTitle: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n      flex: 1,\r\n      paddingLeft: 14,\r\n      paddingRight: 14,\r\n    },\r\n  },\r\n  productCardNewProductButton: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"flex\",\r\n      flex: 1,\r\n      paddingTop: 10,\r\n      paddingBottom: 10,\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  productCardHorizontalMain: {\r\n    flex: 6,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    alignItems: \"center\",\r\n  },\r\n  productCardHorizontalImage: {\r\n    height: 100,\r\n    width: 100,\r\n    margin: 16,\r\n  },\r\n  productCardHorizontalName: {\r\n    flex: 1,\r\n    margin: 16,\r\n  },\r\n  productCardHorizontalID: {\r\n    minWidth: 100,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n  productCardHorizontalDate: {\r\n    minWidth: 100,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n  productCardHorizontalPrice: {\r\n    minWidth: 100,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n  productCardHorizontalUnitsSold: {\r\n    width: 120,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n  productCardHorizontalFiller: {\r\n    width: 80,\r\n  },\r\n  verticalCard: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"flex\",\r\n      flex: 1,\r\n      flexDirection: \"column\",\r\n      marginBottom: 10,\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  productCardVerticalImage: {\r\n    height: 200,\r\n    margin: 16,\r\n  },\r\n  selector: {\r\n    minWidth: 120,\r\n    marginLeft: 10,\r\n  },\r\n  success: {\r\n    color: \"#388e3c\",\r\n  },\r\n  error: {\r\n    color: \"#d32f2f\",\r\n  },\r\n  carouselImageContainer: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  carouselImage: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      height: 200,\r\n      width: 200,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      height: 300,\r\n      width: 300,\r\n    },\r\n  },\r\n  orderTitleFiller: {\r\n    minWidth: 80,\r\n  },\r\n  adminSelector: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"inline-flex\",\r\n      border: 0,\r\n      marginTop: 0,\r\n      marginRight: 0,\r\n      marginBottom: 0,\r\n      marginLeft: 10,\r\n      padding: 0,\r\n      position: \"relative\",\r\n      minWidth: 110,\r\n      flexDirection: \"column\",\r\n      verticalAlign: \"top\",\r\n    },\r\n  },\r\n  adminSelectorMobileContainer: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      paddingTop: 10,\r\n      paddingBottom: 20,\r\n      paddingRight: 10,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  adminSelectorMobile: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"flex\",\r\n      marginBottom: 10,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  adminSearchContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  adminSearchBar: {\r\n    flex: 1,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: 0,\r\n      marginRight: 10,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: 30,\r\n      marginRight: 40,\r\n    },\r\n\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  memberCard: {\r\n    padding: 16,\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  memberCardMobile: {\r\n    padding: 16,\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  dashboardTile: {\r\n    display: \"flex\",\r\n    minHeight: 100,\r\n  },\r\n  dashboardTileItem: {\r\n    flex: 1,\r\n    padding: 5,\r\n  },\r\n  homeCarousel: {\r\n    width: \"100%\",\r\n  },\r\n  snackCarouselItem: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingRight: 10,\r\n    paddingLeft: 10,\r\n  },\r\n  snackCarouselItemContent: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n      flex: 1,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 600,\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 800,\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: 1000,\r\n    },\r\n  },\r\n  snackItemCarouselImage: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      height: 200,\r\n      marginLeft: 10,\r\n      marginRight: 10,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      flex: 1,\r\n      minHeight: 300,\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      flex: 1,\r\n      minHeight: 300,\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      flex: 1,\r\n      minHeight: 400,\r\n    },\r\n  },\r\n  snackItemCarouselDescription: {\r\n    overflow: \"hidden\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      height: 200,\r\n      padding: 20,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      flex: 2,\r\n      height: 300,\r\n      padding: 40,\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      flex: 2,\r\n      height: 300,\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      flex: 2,\r\n      minHeight: 400,\r\n      padding: 40,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Box,\r\n  Container,\r\n  Button,\r\n  InputBase,\r\n  Paper,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport useStyles from \"../styles\";\r\n\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { useCart } from \"../context/CartContext\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { currentUser } = useAuth();\r\n  const { getItemCount } = useCart();\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const isAdmin = () => {\r\n    if (currentUser === null) return false;\r\n\r\n    var decoded = jwt_decode(currentUser.authenticationToken);\r\n    let auth = [];\r\n    decoded.authorities.map((authority) => {\r\n      auth.push(authority.authority);\r\n    });\r\n    if (auth.includes(\"ROLE_ADMIN\")) return true;\r\n    else return false;\r\n  };\r\n\r\n  const accountButtonText = currentUser ? currentUser.username : \"Account\";\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleMenuClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClick = (url) => {\r\n    history.push(url);\r\n  };\r\n\r\n  const handleSearchSubmit = () => {\r\n    history.push({\r\n      pathname: `/snacks`,\r\n      search: `?search=${search}&sortBy=${\"unitsSold\"}&direction=${\"DESC\"}&&page=${1}`,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appbar}>\r\n      <Container maxWidth=\"lg\" className={classes.toolbarContainer}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <Box className={classes.socialsMenu}>\r\n            <IconButton href={\"https://www.facebook.com\"} target=\"_blank\">\r\n              <FacebookIcon />\r\n            </IconButton>\r\n            <IconButton href={\"https://www.instagram.com\"} target=\"_blank\">\r\n              <InstagramIcon />\r\n            </IconButton>\r\n            <IconButton href={\"https://twitter.com\"} target=\"_blank\">\r\n              <TwitterIcon />\r\n            </IconButton>\r\n            <IconButton href={\"https://www.youtube.com\"} target=\"_blank\">\r\n              <YouTubeIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              href={\"https://www.linkedin.com/in/bernard-guiang\"}\r\n              target=\"_blank\"\r\n            >\r\n              <LinkedInIcon />\r\n            </IconButton>\r\n          </Box>\r\n          <Box className={classes.logoContainer}>\r\n            <img\r\n              onClick={() => handleClick(\"/\")}\r\n              className={classes.logo}\r\n              src={`${process.env.PUBLIC_URL}/assets/images/logo2.png`}\r\n            />\r\n          </Box>\r\n          <Box className={classes.toolbarMenu}>\r\n            <Button size=\"large\" onClick={() => handleClick(\"/cart\")}>\r\n              <ShoppingCartIcon />\r\n              Cart ({getItemCount()})\r\n            </Button>\r\n            <Button onClick={() => handleClick(\"/account\")} size=\"large\">\r\n              <AccountCircleIcon />\r\n              {accountButtonText}\r\n            </Button>\r\n            {isAdmin() ? (\r\n              <Button onClick={() => handleClick(\"/admin\")} size=\"large\">\r\n                <DashboardIcon />\r\n                Dashboard\r\n              </Button>\r\n            ) : null}\r\n          </Box>\r\n          <Box className={classes.toolbarMenuMobile}>\r\n            <Button\r\n              size=\"large\"\r\n              className={classes.mobileIconButton}\r\n              onClick={() => handleClick(\"/cart\")}\r\n            >\r\n              <ShoppingCartIcon />({getItemCount()})\r\n            </Button>\r\n            <Button\r\n              onClick={() => handleClick(\"/account\")}\r\n              size=\"large\"\r\n              className={classes.mobileIconButton}\r\n            >\r\n              <AccountCircleIcon />\r\n            </Button>\r\n            {isAdmin() ? (\r\n              <Button\r\n                onClick={() => handleClick(\"/admin\")}\r\n                size=\"large\"\r\n                className={classes.mobileIconButton}\r\n              >\r\n                <DashboardIcon />\r\n              </Button>\r\n            ) : null}\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n      <div className={classes.bottomToolbar}>\r\n        <Container className={classes.toolbarContainer}>\r\n          <Toolbar className={classes.toolbar2}>\r\n            <Box className={classes.toolbar2Menu}>\r\n              <Button onClick={() => handleClick(\"/\")} size=\"large\">\r\n                <Typography className={classes.toolbar2MenuItem} variant=\"h6\">\r\n                  Home\r\n                </Typography>\r\n              </Button>\r\n              <Button onClick={() => handleClick(\"/snacks\")} size=\"large\">\r\n                <Typography className={classes.toolbar2MenuItem} variant=\"h6\">\r\n                  Snacks\r\n                </Typography>\r\n              </Button>\r\n              {/* <Button\r\n                onClick={() => handleClick(\"/subscriptions\")}\r\n                size=\"large\"\r\n              >\r\n                <Typography className={classes.toolbar2MenuItem} variant=\"h6\">\r\n                  Subscriptions\r\n                </Typography>\r\n              </Button> */}\r\n              <Button onClick={() => handleClick(\"/contact\")} size=\"large\">\r\n                <Typography className={classes.toolbar2MenuItem} variant=\"h6\">\r\n                  Contact Us\r\n                </Typography>\r\n              </Button>\r\n            </Box>\r\n            <Box className={classes.toolbar2MenuMobile}>\r\n              <IconButton\r\n                className={classes.menuButton}\r\n                aria-label=\"mobile-menu\"\r\n                onClick={handleMenuClick}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"mobile-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleMenuClose}\r\n              >\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    handleMenuClose();\r\n                    handleClick(\"/\");\r\n                  }}\r\n                >\r\n                  Home\r\n                </MenuItem>\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    handleMenuClose();\r\n                    handleClick(\"/snacks\");\r\n                  }}\r\n                >\r\n                  Snacks\r\n                </MenuItem>\r\n                {/* <MenuItem\r\n                  onClick={() => {\r\n                    handleMenuClose();\r\n                    handleClick(\"/subscriptions\");\r\n                  }}\r\n                >\r\n                  Subscriptions\r\n                </MenuItem> */}\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    handleMenuClose();\r\n                    handleClick(\"/contact\");\r\n                  }}\r\n                >\r\n                  Contact\r\n                </MenuItem>\r\n              </Menu>\r\n            </Box>\r\n            <Paper className={classes.toolbar2SearchContainer}>\r\n              <InputBase\r\n                className={classes.search}\r\n                autoComplete=\"off\"\r\n                placeholder=\"Search Snacks\"\r\n                inputProps={{ \"aria-label\": \"search snacks\" }}\r\n                onChange={(event) => {\r\n                  setSearch(event.target.value);\r\n                }}\r\n              />\r\n              <IconButton\r\n                type=\"submit\"\r\n                className={classes.iconButton}\r\n                aria-label=\"search\"\r\n                onClick={() => handleSearchSubmit()}\r\n              >\r\n                <SearchIcon />\r\n              </IconButton>\r\n            </Paper>\r\n          </Toolbar>\r\n        </Container>\r\n      </div>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useCart } from \"../../context/CartContext\";\r\n\r\nconst SnackCard = ({ snack }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { addItem } = useCart();\r\n  const [quantity, setQuantity] = useState(1);\r\n\r\n  const snackClick = (snack) => {\r\n    history.push(`/snacks/${snack.id}`);\r\n  };\r\n\r\n  const addToCartClick = (snack) => {\r\n    if (!isNaN(quantity) && quantity > 0)\r\n      addItem({ quantity, productId: snack.id, productName: snack.name });\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      className={classes.snackCardContainer}\r\n      xs={12}\r\n      sm={6}\r\n      md={4}\r\n      key={snack.id}\r\n    >\r\n      <Card className={classes.snackCard}>\r\n        <CardActionArea onClick={() => snackClick(snack)}>\r\n          <CardMedia\r\n            className={classes.snackCardImage}\r\n            image={snack.images[0] ? snack.images[0] : null}\r\n            title={snack.name}\r\n          />\r\n          <CardContent className={classes.snackCardContent}>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h5\">\r\n              {snack.name}\r\n            </Typography>\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              ${snack.price.toFixed(2)}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {snack.description}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions className={classes.snackCardActions}>\r\n          <TextField\r\n            className={classes.snackCardQuantity}\r\n            label=\"Quantity\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"number\"\r\n            min={1}\r\n            value={quantity}\r\n            onChange={(event) => {\r\n              let val = parseInt(event.target.value);\r\n              if (isNaN(val)) val = 1;\r\n              if (val < 1) val = 1;\r\n              setQuantity(val);\r\n            }}\r\n          />\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={() => addToCartClick(snack)}\r\n          >\r\n            Add To Cart\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SnackCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\n\r\nimport SnackCard from \"./SnackCard\";\r\nimport useStyles from \"../../styles\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Snacks = () => {\r\n  const classes = useStyles();\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const [snacks, setSnacks] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const [pageNumberUI, setPageNumberUI] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [sortBy, setSortBy] = useState(\"unitsSold\");\r\n  const [direction, setDirection] = useState(\"DESC\");\r\n\r\n  useEffect(() => {\r\n    let urlParams = new URLSearchParams(location.search);\r\n\r\n    let urlSearch = \"\";\r\n    let urlPageNumber = 0;\r\n    let urlPageNumberUI = 1;\r\n    let urlSortBy = \"unitsSold\";\r\n    let urlDirection = \"DESC\";\r\n\r\n    if (urlParams.get(\"search\") !== null) {\r\n      urlSearch = urlParams.get(\"search\");\r\n      setSearch(urlSearch);\r\n    }\r\n\r\n    if (urlParams.get(\"page\")) {\r\n      urlPageNumberUI = parseInt(urlParams.get(\"page\"));\r\n      urlPageNumber = urlPageNumberUI - 1;\r\n      setPageNumber(urlPageNumber);\r\n      setPageNumberUI(urlPageNumberUI);\r\n    }\r\n    if (urlParams.get(\"sortBy\")) {\r\n      urlSortBy = urlParams.get(\"sortBy\");\r\n      setSortBy(urlSortBy);\r\n    }\r\n    if (urlParams.get(\"direction\")) {\r\n      urlDirection = urlParams.get(\"direction\");\r\n      setDirection(urlDirection);\r\n    }\r\n\r\n    const params = {\r\n      search: urlSearch,\r\n      pageSize: 9,\r\n      pageNumber: urlPageNumber,\r\n      itemsSold: \"month\",\r\n      sortBy: urlSortBy,\r\n      sortDirection: urlDirection,\r\n    };\r\n\r\n    getSnacks(params);\r\n  }, [location]);\r\n\r\n  const getSnacks = async (params) => {\r\n    try {\r\n      let response = await SnackOverflow.get(\"/products\", {\r\n        params,\r\n        // params: {\r\n        //   search: search,\r\n        //   pageSize: 9,\r\n        //   pageNumber: pageNumber,\r\n        //   itemsSold: \"month\",\r\n        //   sortBy: sortBy,\r\n        //   sortDirection: direction,\r\n        // },\r\n      });\r\n      setSnacks(response.data.content);\r\n      setTotalPages(response.data.totalPages);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const handleSortByChange = (event) => {\r\n    history.push({\r\n      pathname: `/snacks`,\r\n      search: `?search=${search}&sortBy=${\r\n        event.target.value\r\n      }&direction=${direction}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleDirectionChange = (event) => {\r\n    history.push({\r\n      pathname: `/snacks`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${\r\n        event.target.value\r\n      }&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handlePageChange = (value) => {\r\n    history.push({\r\n      pathname: `/snacks`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${direction}&page=${value}`,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Grid\r\n        container\r\n        spacing={5}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item xs={12} key=\"pageTitle\" className={classes.cartHeader}>\r\n          <h2 className={classes.cartHeaderTitle}>Snacks</h2>\r\n          <div className={classes.adminSelector}>\r\n            <InputLabel id=\"sortBy\">Sort By</InputLabel>\r\n            <Select\r\n              labelId=\"sortBy\"\r\n              id=\"sortBySelect\"\r\n              value={sortBy}\r\n              onChange={handleSortByChange}\r\n            >\r\n              <MenuItem value={\"createdDate\"}>Newest</MenuItem>\r\n              <MenuItem value={\"name\"}>Name</MenuItem>\r\n              <MenuItem value={\"price\"}>Price</MenuItem>\r\n              <MenuItem value={\"unitsSold\"}>Popularity</MenuItem>\r\n            </Select>\r\n          </div>\r\n          <div className={classes.adminSelector}>\r\n            <InputLabel id=\"direction\">Direction</InputLabel>\r\n            <Select\r\n              labelId=\"direction\"\r\n              id=\"direcitonSelect\"\r\n              value={direction}\r\n              onChange={handleDirectionChange}\r\n            >\r\n              <MenuItem value={\"ASC\"}>Ascending</MenuItem>\r\n              <MenuItem value={\"DESC\"}>Descending</MenuItem>\r\n            </Select>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} key=\"search\" className={classes.adminSearchContainer}>\r\n        <div className={classes.adminSelectorMobileContainer}>\r\n          <FormControl className={classes.adminSelectorMobile}>\r\n            <InputLabel id=\"sortBy\">Sort By</InputLabel>\r\n            <Select\r\n              labelId=\"sortBy\"\r\n              id=\"sortBySelect\"\r\n              value={sortBy}\r\n              onChange={handleSortByChange}\r\n            >\r\n              <MenuItem value={\"createdDate\"}>Newest</MenuItem>\r\n              <MenuItem value={\"name\"}>Name</MenuItem>\r\n              <MenuItem value={\"price\"}>Price</MenuItem>\r\n              <MenuItem value={\"unitsSold\"}>Popularity</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl className={classes.adminSelectorMobile}>\r\n            <InputLabel id=\"direction\">Direction</InputLabel>\r\n            <Select\r\n              labelId=\"direction\"\r\n              id=\"direcitonSelect\"\r\n              value={direction}\r\n              onChange={handleDirectionChange}\r\n            >\r\n              <MenuItem value={\"ASC\"}>Ascending</MenuItem>\r\n              <MenuItem value={\"DESC\"}>Descending</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={12} key=\"snacks\">\r\n        <Grid container spacing={5}>\r\n          {snacks.map((snack) => (\r\n            <SnackCard snack={snack} key={snack.id} />\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} key=\"pagination\" className={classes.pagination}>\r\n        <div className={classes.snacksPaginationContainer}>\r\n          <Pagination\r\n            count={totalPages}\r\n            color=\"primary\"\r\n            page={pageNumberUI}\r\n            onChange={(event, value) => {\r\n              handlePageChange(value);\r\n            }}\r\n          />\r\n        </div>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Snacks;\r\n","import { useState, useEffect } from \"react\";\r\nimport SnackOverflow from \"../api/SnackOverflow\";\r\n\r\nexport default (id) => {\r\n  const [snack, setSnack] = useState({});\r\n\r\n  const getSnack = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(`/products/${id}`);\r\n      setSnack(response.data);\r\n    } catch (error) {}\r\n  };\r\n\r\n  // Call Get Snacks Once\r\n  useEffect(() => {\r\n    getSnack();\r\n  }, []);\r\n\r\n  return [snack];\r\n};\r\n","import React from \"react\";\r\n\r\nimport useStyles from \"../styles\";\r\nimport { CardMedia, Paper } from \"@material-ui/core\";\r\n\r\nconst CarouselItem = ({ name, image }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.carouselImageContainer}>\r\n      <CardMedia image={image} className={classes.carouselImage} title={name} />\r\n    </div>\r\n  );\r\n};\r\nexport default CarouselItem;\r\n","import React from \"react\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useSnack from \"../../hooks/useSnack\";\r\nimport useStyles from \"../../styles\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  CardActions,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { useCart } from \"../../context/CartContext\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport CarouselItem from \"../CarouselItem\";\r\n\r\nconst Snack = () => {\r\n  const classes = useStyles();\r\n  let { id } = useParams();\r\n  const [snack] = useSnack(id);\r\n  const { addItem } = useCart();\r\n  const [quantity, setQuantity] = useState(1);\r\n\r\n  const addToCartClick = (snack) => {\r\n    if (!isNaN(quantity) && quantity > 0)\r\n      addItem({ quantity, productId: snack.id, productName: snack.name });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} sm={10}>\r\n          {snack.images ? (\r\n            <Carousel\r\n              navButtonsAlwaysVisible={true}\r\n              next={() => {\r\n                /* Do stuff */\r\n              }}\r\n              prev={() => {\r\n                /* Do other stuff */\r\n              }}\r\n            >\r\n              {snack.images.map((image, i) => (\r\n                <CarouselItem key={i} name={snack.name} image={image} />\r\n              ))}\r\n            </Carousel>\r\n          ) : null}\r\n        </Grid>\r\n        <Grid item xs={12} sm={10}>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h5\">\r\n            {snack.name}\r\n          </Typography>\r\n          <Typography variant=\"h6\" component=\"h6\">\r\n            ${snack.price ? snack.price.toFixed(2) : \"0.00\"}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {snack.description}\r\n          </Typography>\r\n          {snack.deleted ? (\r\n            <h2 className={classes.error}>This snack is no longer available</h2>\r\n          ) : (\r\n            <CardActions className={classes.snackCardActions}>\r\n              <TextField\r\n                className={classes.snackCardQuantity}\r\n                label=\"Quantity\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                type=\"number\"\r\n                min={1}\r\n                value={quantity}\r\n                onChange={(event) => {\r\n                  let val = parseInt(event.target.value);\r\n                  if (isNaN(val)) val = 1;\r\n                  if (val < 1) val = 1;\r\n                  setQuantity(val);\r\n                }}\r\n              />\r\n              <Button\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                onClick={() => addToCartClick(snack)}\r\n              >\r\n                Add To Cart\r\n              </Button>\r\n            </CardActions>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Snack;\r\n","import React from \"react\";\r\nimport { Container, Typography, Link } from \"@material-ui/core\";\r\nimport useStyles from \"../styles\";\r\n\r\nfunction Copyright() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Typography variant=\"h6\" align=\"center\" className={classes.footerText}>\r\n      {\"Copyright © \"}\r\n      <Link\r\n        color=\"inherit\"\r\n        href={\"https://www.linkedin.com/in/bernard-guiang\"}\r\n        target=\"_blank\"\r\n      >\r\n        Bernard Guiang\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <footer className={classes.footer}>\r\n      <Container>\r\n        <div>\r\n          <Copyright />\r\n        </div>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport useStyles from \"../../styles\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport validator from \"validator\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst LoginSignup = () => {\r\n  const { currentUser, login } = useAuth();\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.loginSignUp}>\r\n      <Login login={login} classes={classes} currentUser={currentUser} />\r\n      <div className={classes.flexLineBetween}></div>\r\n      <SignUp classes={classes} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Login = ({ login, classes, currentUser }) => {\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n  let { from } = location.state || { from: { pathname: \"/\" } };\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  // Send User to landing page \"/\" or to previous route if it was a private route\r\n  const callback = () => {\r\n    history.replace(from);\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    if (currentUser === null) return false;\r\n\r\n    var decoded = jwt_decode(currentUser.authenticationToken);\r\n    let auth = [];\r\n    decoded.authorities.map((authority) => {\r\n      auth.push(authority.authority);\r\n    });\r\n    if (auth.includes(\"ROLE_ADMIN\")) return true;\r\n    else return false;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser !== null) {\r\n      if (from.pathname.startsWith(\"/admin\")) {\r\n        if (isAdmin()) {\r\n          callback();\r\n        } else {\r\n          history.replace(\"/\");\r\n        }\r\n      } else {\r\n        callback();\r\n      }\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const [usernameError, setUsernameError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n  const isValidated = () => {\r\n    let isValid = true;\r\n\r\n    // Reset Errors\r\n    setUsernameError(\"\");\r\n    setPasswordError(\"\");\r\n\r\n    // Username\r\n    if (validator.isEmpty(username)) {\r\n      setUsernameError(\"Please enter a username\");\r\n      isValid = false;\r\n    }\r\n\r\n    if (validator.isEmpty(password)) {\r\n      setPasswordError(\"Please enter your password\");\r\n      isValid = false;\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (isValidated()) login(username, password);\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <h2 className={classes.cartHeaderTitle}>Login</h2>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username1\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            onChange={(event) => {\r\n              setUsername(event.target.value);\r\n            }}\r\n            autoFocus\r\n            helperText={usernameError}\r\n            error={usernameError ? true : false}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password1\"\r\n            onChange={(event) => {\r\n              setPassword(event.target.value);\r\n            }}\r\n            autoComplete=\"current-password\"\r\n            helperText={passwordError}\r\n            error={passwordError ? true : false}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n          {/* <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst SignUp = ({ classes }) => {\r\n  const [signupSuccess, setSignupSuccess] = useState(false);\r\n  const [signupError, setSignupError] = useState(\"\");\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordRepeat, setPasswordRepeat] = useState(\"\");\r\n\r\n  const [fullNameError, setFullNameError] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [usernameError, setUsernameError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [passwordRepeatError, setPasswordRepeatError] = useState(\"\");\r\n\r\n  const isValidated = () => {\r\n    let isValid = true;\r\n    // Reset Errors\r\n    setEmailError(\"\");\r\n    setFullNameError(\"\");\r\n    setUsernameError(\"\");\r\n    setPasswordError(\"\");\r\n    setPasswordRepeatError(\"\");\r\n\r\n    // Reset Request Error\r\n    setSignupError(\"\");\r\n\r\n    // Email\r\n    if (!validator.isEmail(email)) {\r\n      setEmailError(\"Please use a valid email\");\r\n      isValid = false;\r\n    }\r\n\r\n    // Full Name\r\n    if (validator.isEmpty(fullName, { ignore_whitespace: true })) {\r\n      setFullNameError(\"Please enter your full name\");\r\n      isValid = false;\r\n    }\r\n\r\n    // Username\r\n    if (\r\n      !validator.isAlphanumeric(username) ||\r\n      validator.contains(username, \" \") ||\r\n      !validator.isLength(username, { min: 6, max: 20 })\r\n    ) {\r\n      setUsernameError(\r\n        \"Username must be 6-20 characters long and contain only letters and numbers and no spaces\"\r\n      );\r\n      isValid = false;\r\n    }\r\n\r\n    if (\r\n      !validator.isStrongPassword(password, {\r\n        minLength: 6,\r\n        minLowercase: 1,\r\n        minUppercase: 1,\r\n        minNumbers: 1,\r\n        minSymbols: 1,\r\n      }) ||\r\n      validator.contains(password, \" \") ||\r\n      !validator.isLength(password, { min: 6, max: 20 })\r\n    ) {\r\n      setPasswordError(\r\n        \"Password must be 6-20 characters long including at least one lowercase letter, one uppercase letter, one number, and one symbol. No spaces\"\r\n      );\r\n      isValid = false;\r\n    }\r\n\r\n    // PasswordRepeat\r\n    if (password !== passwordRepeat) {\r\n      setPasswordRepeatError(\"Passwords do not match\");\r\n      isValid = false;\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const signup = async (fullName, email, username, password) => {\r\n    const signupRequest = { fullName, email, username, password };\r\n\r\n    try {\r\n      const response = await SnackOverflow.post(\"/auth/signup\", signupRequest);\r\n      if (response.status === 201) {\r\n        setSignupSuccess(true);\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        // Request made and server responded\r\n        setSignupError(error.response.data.message);\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        setSignupError(\"Something went wrong. Try again later\");\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        setSignupError(\"Something went wrong. Try again later\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setSignupSuccess(false);\r\n    if (isValidated()) {\r\n      signup(fullName, email, username, password);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <h2 className={classes.cartHeaderTitle}>Sign Up</h2>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            onChange={(event) => {\r\n              setEmail(event.target.value);\r\n            }}\r\n            helperText={emailError}\r\n            error={emailError ? true : false}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"full-name\"\r\n            label=\"Full Name\"\r\n            id=\"full-name\"\r\n            onChange={(event) => {\r\n              setFullName(event.target.value);\r\n            }}\r\n            helperText={fullNameError}\r\n            error={fullNameError ? true : false}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            id=\"username\"\r\n            onChange={(event) => {\r\n              setUsername(event.target.value);\r\n            }}\r\n            helperText={usernameError}\r\n            error={usernameError ? true : false}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            onChange={(event) => {\r\n              setPassword(event.target.value);\r\n            }}\r\n            helperText={passwordError}\r\n            error={passwordError ? true : false}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Repeat Password\"\r\n            type=\"password\"\r\n            id=\"repeat-password\"\r\n            onChange={(event) => {\r\n              setPasswordRepeat(event.target.value);\r\n            }}\r\n            helperText={passwordRepeatError}\r\n            error={passwordRepeatError ? true : false}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n          {signupSuccess ? (\r\n            <Typography variant=\"h6\" className={classes.success}>\r\n              {\"Signup success!\"}\r\n            </Typography>\r\n          ) : null}\r\n          {signupError ? (\r\n            <Typography variant=\"subtitle2\" className={classes.error}>\r\n              {signupError}\r\n            </Typography>\r\n          ) : null}\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginSignup;\r\n","import React from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport { Grid, Typography, Card, CardActionArea } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst OrderCard = ({ order }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const itemClick = (id) => {\r\n    history.push(`/account/orders/${id}`);\r\n  };\r\n  return (\r\n    <Grid item xs={12} key={order.id}>\r\n      <Card className={classes.orderCardMobile}>\r\n        <CardActionArea\r\n          onClick={() => itemClick(order.id)}\r\n          className={classes.orderCardActionAreaMobile}\r\n        >\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            Order: #{order.id}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem2}\r\n          >\r\n            Created: {new Date(order.createdDate).toLocaleDateString(\"en-US\")}{\" \"}\r\n            {new Date(order.createdDate).toLocaleTimeString(\"en-US\")}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem2}\r\n          >\r\n            Status: {order.status}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            Total: ${order.total.toFixed(2)}\r\n          </Typography>\r\n        </CardActionArea>\r\n      </Card>\r\n      <Card className={classes.orderCard}>\r\n        <CardActionArea\r\n          onClick={() => itemClick(order.id)}\r\n          className={classes.orderCardActionArea}\r\n        >\r\n          <div className={classes.orderCardActionArea}>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              className={classes.orderCardActionAreaItem}\r\n            >\r\n              #{order.id}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              className={classes.orderCardActionAreaItem2}\r\n            >\r\n              {new Date(order.createdDate).toLocaleDateString(\"en-US\")}{\" \"}\r\n              {new Date(order.createdDate).toLocaleTimeString(\"en-US\")}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              className={classes.orderCardActionAreaItem2}\r\n            >\r\n              {order.status}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              className={classes.orderCardActionAreaItem}\r\n            >\r\n              ${order.total.toFixed(2)}\r\n            </Typography>\r\n          </div>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default OrderCard;\r\n","import React from \"react\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport useStyles from \"../../styles\";\r\nimport useOrders from \"../../hooks/useOrders\";\r\nimport OrderCard from \"./OrderCard\";\r\n\r\nconst Account = () => {\r\n  const { currentUser, logout } = useAuth();\r\n  const [orders] = useOrders();\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.content}>\r\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} key=\"title\" className={classes.cartHeader}>\r\n          <h2 className={classes.cartHeaderTitle}>\r\n            Hello, {currentUser.username}\r\n          </h2>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => logout()}>\r\n            Sign Out\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} key=\"orderInfo\">\r\n          <Typography variant=\"h6\" className={classes.orderListTitleMobile}>\r\n            Orders\r\n          </Typography>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            key={\"orderListTitle\"}\r\n            className={classes.orderListTitle}\r\n          >\r\n            <div className={classes.orderCard}>\r\n              <div className={classes.orderCardActionArea}>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  className={classes.orderCardActionAreaItem}\r\n                >\r\n                  Order\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  className={classes.orderCardActionAreaItem2}\r\n                >\r\n                  Created\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  className={classes.orderCardActionAreaItem2}\r\n                >\r\n                  Status\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  className={classes.orderCardActionAreaItem}\r\n                >\r\n                  Total\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n          {orders.map((order) => (\r\n            <OrderCard order={order} key={order.id} />\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import { useState, useEffect } from \"react\";\r\nimport SnackOverflow from \"../api/SnackOverflow\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\n\r\nexport default () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [token, setToken] = useState(null);\r\n  const { currentUser } = useAuth();\r\n\r\n  const getOrders = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(\"/orders\", {\r\n        headers: { Authorization: token },\r\n      });\r\n      if (response.status === 200) {\r\n        setOrders(response.data);\r\n      }\r\n    } catch (error) {}\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    if (token !== null) {\r\n      getOrders();\r\n    }\r\n  }, [token]);\r\n\r\n  return [orders];\r\n};\r\n","import React, { useState } from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardMedia,\r\n  Button,\r\n  TextField,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { useCart } from \"../../context/CartContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst CartItem = ({ cartItem }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [quantity, setQuantity] = useState(cartItem.quantity);\r\n  const { removeItem, updateItemQuantity } = useCart();\r\n\r\n  const itemClick = (id) => {\r\n    history.push(`/snacks/${id}`);\r\n  };\r\n\r\n  const updateClick = () => {\r\n    updateItemQuantity({ productId: cartItem.product.id, quantity });\r\n  };\r\n\r\n  const deleteClick = () => {\r\n    removeItem({ productId: cartItem.product.id });\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} key={cartItem.product.id}>\r\n      <Card className={classes.cartItemCard}>\r\n        <CardActionArea\r\n          className={classes.cartItemCardActionArea}\r\n          onClick={() => itemClick(cartItem.product.id)}\r\n        >\r\n          <div className={classes.cartItemCardActionArea}>\r\n            <CardMedia\r\n              className={classes.cartItemCardImage}\r\n              image={\r\n                cartItem.product.images[0] ? cartItem.product.images[0] : null\r\n              }\r\n              title={cartItem.product.name}\r\n            />\r\n            <Typography variant=\"h6\" className={classes.cartItemName}>\r\n              {cartItem.product.name}\r\n            </Typography>\r\n            <Typography variant=\"h6\" className={classes.cartItemPrice}>\r\n              ${cartItem.product.price.toFixed(2)}\r\n            </Typography>\r\n          </div>\r\n        </CardActionArea>\r\n        <CardActions className={classes.cartItemCardActions}>\r\n          <TextField\r\n            inputProps={{ style: { textAlign: \"center\" } }}\r\n            className={classes.cartItemQuantity}\r\n            label=\"Quantity\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            min={1}\r\n            value={quantity}\r\n            onChange={(event) => {\r\n              let val = parseInt(event.target.value);\r\n              if (isNaN(val)) val = 1;\r\n              if (val < 1) val = 1;\r\n              setQuantity(val);\r\n            }}\r\n          />\r\n          <Button size=\"small\" color=\"primary\" onClick={() => updateClick()}>\r\n            Update\r\n          </Button>\r\n          <IconButton onClick={() => deleteClick()}>\r\n            <DeleteIcon color=\"error\" />\r\n          </IconButton>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport { useCart } from \"../../context/CartContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CartItem from \"./CartItem\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst Cart = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [isTotalTooLow, setIsTotalTooLow] = useState(false);\r\n  const { cart } = useCart();\r\n  const [cartInfo, setCartInfo] = useState({ items: [], total: 0 });\r\n\r\n  useEffect(() => {\r\n    const loadCartInfo = async () => {\r\n      try {\r\n        const cartInfoRequest = { items: cart };\r\n        const response = await SnackOverflow.post(\r\n          \"/cart/info\",\r\n          cartInfoRequest\r\n        );\r\n        if (200 === response.status) {\r\n          setCartInfo(response.data);\r\n        }\r\n      } catch (error) {}\r\n    };\r\n\r\n    if (cart && cart.length > 0) {\r\n      loadCartInfo();\r\n    } else {\r\n      setCartInfo({ items: [], total: 0 });\r\n    }\r\n  }, [cart]);\r\n\r\n  const checkoutClick = () => {\r\n    if (cartInfo.total <= 0.5) {\r\n      setIsTotalTooLow(true);\r\n    } else {\r\n      history.push(\"/checkout\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Dialog\r\n        open={isTotalTooLow}\r\n        onClose={() => setIsTotalTooLow(false)}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          {\"Your cart's a little light\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            All purchases must be greater than $0.50\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setIsTotalTooLow(false)} color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} key=\"title\" className={classes.cartHeader}>\r\n          <h2 className={classes.cartHeaderTitle}>Shopping Cart</h2>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => checkoutClick()}\r\n          >\r\n            Checkout\r\n          </Button>\r\n        </Grid>\r\n        {cartInfo.items.map((cartItem) => (\r\n          <CartItem cartItem={cartItem} key={cartItem.product.id} />\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","/**\r\n * Use the CSS tab above to style your Element's container.\r\n */\r\nimport React from \"react\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./CardSectionStyles.css\";\r\nimport { Typography, Link } from \"@material-ui/core\";\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      color: \"#32325d\",\r\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n      fontSmoothing: \"antialiased\",\r\n      fontSize: \"16px\",\r\n      \"::placeholder\": {\r\n        color: \"#aab7c4\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#fa755a\",\r\n      iconColor: \"#fa755a\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction CardSection() {\r\n  return (\r\n    <label>\r\n      <Typography variant=\"h6\">Payment Information</Typography>\r\n      <Typography variant=\"subtitle2\">\r\n        Please use the following Stripe test card number with any valid\r\n        expiration date and CVC. You may also use any other{\" \"}\r\n        <Link href={\"https://stripe.com/docs/testing\"} target=\"_blank\">\r\n          Stripe Test card\r\n        </Link>\r\n      </Typography>\r\n      <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n      <Typography variant=\"subtitle1\">\r\n        Test Card: 4242 4242 4242 4242\r\n      </Typography>\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default CardSection;\r\n","import React, { useState } from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport { useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useCart } from \"../../context/CartContext\";\r\n\r\nimport CardSection from \"./CardSection\";\r\nimport {\r\n  Card,\r\n  Typography,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Link,\r\n} from \"@material-ui/core\";\r\n\r\nconst CheckoutForm = ({ clientSecret, token }) => {\r\n  const { clearItems } = useCart();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [paymentErrorMessage, setPaymentErrorMessage] = useState(\"\");\r\n  const [billingName, setBillingName] = useState(\"\");\r\n  const [billingEmail, setBillingEmail] = useState(\"\");\r\n  const [billingPhone, setBillingPhone] = useState(\"\");\r\n  const [billingAddressLine1, setBillingAddressLine1] = useState(\"\");\r\n  const [billingAddressLine2, setBillingAddressLine2] = useState(\"\");\r\n  const [billingCity, setBillingCity] = useState(\"\");\r\n  const [billingState, setBillingState] = useState(\"\");\r\n  const [billingPostalCode, setBillingPostalCode] = useState(\"\");\r\n  const [billingCountry, setBillingCountry] = useState(\"US\");\r\n  const [isShippingSameAsBilling, setIsShippingSameAsBilling] = useState(true);\r\n  const [shippingName, setShippingName] = useState(\"\");\r\n  const [shippingPhone, setShippingPhone] = useState(\"\");\r\n  const [shippingAddressLine1, setShippingAddressLine1] = useState(\"\");\r\n  const [shippingAddressLine2, setShippingAddressLine2] = useState(\"\");\r\n  const [shippingCity, setShippingCity] = useState(\"\");\r\n  const [shippingState, setShippingState] = useState(\"\");\r\n  const [shippingPostalCode, setShippingPostalCode] = useState(\"\");\r\n  const [shippingCountry, setShippingCountry] = useState(\"US\");\r\n\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const confirmPayment = async () => {\r\n    let shipping = {};\r\n\r\n    if (isShippingSameAsBilling) {\r\n      shipping = {\r\n        address: {\r\n          line1: billingAddressLine1,\r\n          line2: billingAddressLine2,\r\n          city: billingCity,\r\n          state: billingState,\r\n          postal_code: billingPostalCode,\r\n          country: billingCountry,\r\n        },\r\n        name: billingName,\r\n        phone: billingPhone,\r\n      };\r\n    } else {\r\n      shipping = {\r\n        address: {\r\n          line1: shippingAddressLine1,\r\n          line2: shippingAddressLine2,\r\n          city: shippingCity,\r\n          state: shippingState,\r\n          postal_code: shippingPostalCode,\r\n          country: shippingCountry,\r\n        },\r\n        name: shippingName,\r\n        phone: shippingPhone,\r\n      };\r\n    }\r\n\r\n    const result = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n        billing_details: {\r\n          address: {\r\n            line1: billingAddressLine1,\r\n            line2: billingAddressLine2,\r\n            city: billingCity,\r\n            state: billingState,\r\n            postal_code: billingPostalCode,\r\n            country: billingCountry,\r\n          },\r\n          name: billingName,\r\n          phone: billingPhone,\r\n          email: billingEmail,\r\n        },\r\n      },\r\n      shipping: shipping,\r\n    });\r\n\r\n    if (result.error) {\r\n      // Show error to your customer (e.g., insufficient funds)\r\n      setPaymentErrorMessage(result.error.message);\r\n      setSubmitting(false); // only re-activate button here. No need to do so when success\r\n    } else {\r\n      // The payment has been processed!\r\n      if (result.paymentIntent.status === \"succeeded\") {\r\n        // Show a success message to your customer\r\n        // There's a risk of the customer closing the window before callback\r\n        // execution. Set up a webhook or plugin to listen for the\r\n        // payment_intent.succeeded event that handles any business critical\r\n        // post-payment actions.\r\n        clearItems();\r\n        history.push(\"/checkout/success\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    // We don't want to let default form submission happen here,\r\n    // which would refresh the page.\r\n    event.preventDefault();\r\n\r\n    setSubmitting(true);\r\n\r\n    setPaymentErrorMessage(\"\");\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      setSubmitting(false);\r\n      return;\r\n    }\r\n\r\n    confirmPayment();\r\n  };\r\n\r\n  const autoPopulateBilling = () => {\r\n    setBillingName(\"John Doe\");\r\n    setBillingEmail(\"jdoe@snackoverflow.bernardguiang.com\");\r\n    setBillingPhone(\"1234567890\");\r\n    setBillingAddressLine1(\"Line 1\");\r\n    setBillingAddressLine2(\"Line 2\");\r\n    setBillingCity(\"City\");\r\n    setBillingState(\"State\");\r\n    setBillingPostalCode(\"12345\");\r\n    setBillingCountry(\"US\");\r\n  };\r\n\r\n  const autoPopulateShipping = () => {\r\n    setShippingName(\"Jane Doe\");\r\n    setShippingPhone(\"1234567890\");\r\n    setShippingAddressLine1(\"Line 1\");\r\n    setShippingAddressLine2(\"Line 2\");\r\n    setShippingCity(\"City\");\r\n    setShippingState(\"State\");\r\n    setShippingPostalCode(\"12345\");\r\n    setShippingCountry(\"US\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={classes.checkoutForm}>\r\n      <div>\r\n        <Card className={classes.addressCard}>\r\n          <Typography variant=\"h6\">\r\n            Billing Details{\" \"}\r\n            <Link onClick={() => autoPopulateBilling()}>auto-populate</Link>\r\n          </Typography>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            margin=\"dense\"\r\n            required\r\n            fullWidth\r\n            label=\"name\"\r\n            value={billingName}\r\n            onChange={(event) => {\r\n              setBillingName(event.target.value);\r\n            }}\r\n            autoComplete=\"name\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            margin=\"dense\"\r\n            required\r\n            fullWidth\r\n            label=\"email\"\r\n            value={billingEmail}\r\n            onChange={(event) => {\r\n              setBillingEmail(event.target.value);\r\n            }}\r\n            autoComplete=\"email\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            margin=\"dense\"\r\n            required\r\n            fullWidth\r\n            label=\"phone\"\r\n            value={billingPhone}\r\n            onChange={(event) => {\r\n              setBillingPhone(event.target.value);\r\n            }}\r\n            autoComplete=\"phone\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            margin=\"dense\"\r\n            required\r\n            fullWidth\r\n            label=\"address line 1\"\r\n            value={billingAddressLine1}\r\n            onChange={(event) => {\r\n              setBillingAddressLine1(event.target.value);\r\n            }}\r\n            autoComplete=\"address-line1\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            label=\"address line 2\"\r\n            value={billingAddressLine2}\r\n            onChange={(event) => {\r\n              setBillingAddressLine2(event.target.value);\r\n            }}\r\n            autoComplete=\"address-line2\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            margin=\"dense\"\r\n            required\r\n            fullWidth\r\n            label=\"city\"\r\n            value={billingCity}\r\n            onChange={(event) => {\r\n              setBillingCity(event.target.value);\r\n            }}\r\n            autoComplete=\"address-level2\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            margin=\"dense\"\r\n            required\r\n            fullWidth\r\n            label=\"state\"\r\n            value={billingState}\r\n            onChange={(event) => {\r\n              setBillingState(event.target.value);\r\n            }}\r\n            autoComplete=\"address-level1\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            margin=\"dense\"\r\n            required\r\n            fullWidth\r\n            label=\"postal code\"\r\n            value={billingPostalCode}\r\n            onChange={(event) => {\r\n              setBillingPostalCode(event.target.value);\r\n            }}\r\n            autoComplete=\"postal-code\"\r\n          />\r\n          <FormControl fullWidth>\r\n            <InputLabel>Country</InputLabel>\r\n            <Select\r\n              value={billingCountry}\r\n              onChange={(event) => setBillingCountry(event.target.value)}\r\n            >\r\n              <MenuItem value=\"AU\">Australia</MenuItem>\r\n              <MenuItem value=\"AT\">Austria</MenuItem>\r\n              <MenuItem value=\"BE\">Belgium</MenuItem>\r\n              <MenuItem value=\"BR\">Brazil</MenuItem>\r\n              <MenuItem value=\"CA\">Canada</MenuItem>\r\n              <MenuItem value=\"CN\">China</MenuItem>\r\n              <MenuItem value=\"DK\">Denmark</MenuItem>\r\n              <MenuItem value=\"FI\">Finland</MenuItem>\r\n              <MenuItem value=\"FR\">France</MenuItem>\r\n              <MenuItem value=\"DE\">Germany</MenuItem>\r\n              <MenuItem value=\"HK\">Hong Kong</MenuItem>\r\n              <MenuItem value=\"IE\">Ireland</MenuItem>\r\n              <MenuItem value=\"IT\">Italy</MenuItem>\r\n              <MenuItem value=\"JP\">Japan</MenuItem>\r\n              <MenuItem value=\"LU\">Luxembourg</MenuItem>\r\n              <MenuItem value=\"MY\">Malaysia</MenuItem>\r\n              <MenuItem value=\"MX\">Mexico</MenuItem>\r\n              <MenuItem value=\"NL\">Netherlands</MenuItem>\r\n              <MenuItem value=\"NZ\">New Zealand</MenuItem>\r\n              <MenuItem value=\"NO\">Norway</MenuItem>\r\n              <MenuItem value=\"PL\">Poland</MenuItem>\r\n              <MenuItem value=\"PT\">Portugal</MenuItem>\r\n              <MenuItem value=\"SG\">Singapore</MenuItem>\r\n              <MenuItem value=\"ES\">Spain</MenuItem>\r\n              <MenuItem value=\"SE\">Sweden</MenuItem>\r\n              <MenuItem value=\"CH\">Switzerland</MenuItem>\r\n              <MenuItem value=\"GB\">United Kingdom</MenuItem>\r\n              <MenuItem value=\"US\">United States</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Card>\r\n        <Typography variant=\"subtitle1\" className={classes.checkoutItemName}>\r\n          <input\r\n            name=\"isGoing\"\r\n            type=\"checkbox\"\r\n            checked={isShippingSameAsBilling}\r\n            onChange={(e) => setIsShippingSameAsBilling(e.target.checked)}\r\n          />\r\n          Ship to this address\r\n        </Typography>\r\n        {isShippingSameAsBilling ? null : (\r\n          <Card className={classes.addressCard}>\r\n            <Typography variant=\"h6\">\r\n              Shipping Details{\" \"}\r\n              <Link onClick={() => autoPopulateShipping()}>auto-populate</Link>\r\n            </Typography>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              margin=\"dense\"\r\n              required\r\n              fullWidth\r\n              label=\"name\"\r\n              value={shippingName}\r\n              onChange={(event) => {\r\n                setShippingName(event.target.value);\r\n              }}\r\n              autoComplete=\"name\"\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              margin=\"dense\"\r\n              required\r\n              fullWidth\r\n              label=\"phone\"\r\n              value={shippingPhone}\r\n              onChange={(event) => {\r\n                setShippingPhone(event.target.value);\r\n              }}\r\n              autoComplete=\"phone\"\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              margin=\"dense\"\r\n              required\r\n              fullWidth\r\n              label=\"address line 1\"\r\n              value={shippingAddressLine1}\r\n              onChange={(event) => {\r\n                setShippingAddressLine1(event.target.value);\r\n              }}\r\n              autoComplete=\"address-line1\"\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              label=\"address line 2\"\r\n              value={shippingAddressLine2}\r\n              onChange={(event) => {\r\n                setShippingAddressLine2(event.target.value);\r\n              }}\r\n              autoComplete=\"address-line2\"\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              margin=\"dense\"\r\n              required\r\n              fullWidth\r\n              label=\"city\"\r\n              value={shippingCity}\r\n              onChange={(event) => {\r\n                setShippingCity(event.target.value);\r\n              }}\r\n              autoComplete=\"address-level2\"\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              margin=\"dense\"\r\n              required\r\n              fullWidth\r\n              label=\"state\"\r\n              value={shippingState}\r\n              onChange={(event) => {\r\n                setShippingState(event.target.value);\r\n              }}\r\n              autoComplete=\"address-level1\"\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              margin=\"dense\"\r\n              required\r\n              fullWidth\r\n              label=\"postal code\"\r\n              value={shippingPostalCode}\r\n              onChange={(event) => {\r\n                setShippingPostalCode(event.target.value);\r\n              }}\r\n              autoComplete=\"postal-code\"\r\n            />\r\n            <FormControl fullWidth>\r\n              <InputLabel>Country</InputLabel>\r\n              <Select\r\n                value={shippingCountry}\r\n                onChange={(event) => setShippingCountry(event.target.value)}\r\n              >\r\n                <MenuItem value=\"AU\">Australia</MenuItem>\r\n                <MenuItem value=\"AT\">Austria</MenuItem>\r\n                <MenuItem value=\"BE\">Belgium</MenuItem>\r\n                <MenuItem value=\"BR\">Brazil</MenuItem>\r\n                <MenuItem value=\"CA\">Canada</MenuItem>\r\n                <MenuItem value=\"CN\">China</MenuItem>\r\n                <MenuItem value=\"DK\">Denmark</MenuItem>\r\n                <MenuItem value=\"FI\">Finland</MenuItem>\r\n                <MenuItem value=\"FR\">France</MenuItem>\r\n                <MenuItem value=\"DE\">Germany</MenuItem>\r\n                <MenuItem value=\"HK\">Hong Kong</MenuItem>\r\n                <MenuItem value=\"IE\">Ireland</MenuItem>\r\n                <MenuItem value=\"IT\">Italy</MenuItem>\r\n                <MenuItem value=\"JP\">Japan</MenuItem>\r\n                <MenuItem value=\"LU\">Luxembourg</MenuItem>\r\n                <MenuItem value=\"MY\">Malaysia</MenuItem>\r\n                <MenuItem value=\"MX\">Mexico</MenuItem>\r\n                <MenuItem value=\"NL\">Netherlands</MenuItem>\r\n                <MenuItem value=\"NZ\">New Zealand</MenuItem>\r\n                <MenuItem value=\"NO\">Norway</MenuItem>\r\n                <MenuItem value=\"PL\">Poland</MenuItem>\r\n                <MenuItem value=\"PT\">Portugal</MenuItem>\r\n                <MenuItem value=\"SG\">Singapore</MenuItem>\r\n                <MenuItem value=\"ES\">Spain</MenuItem>\r\n                <MenuItem value=\"SE\">Sweden</MenuItem>\r\n                <MenuItem value=\"CH\">Switzerland</MenuItem>\r\n                <MenuItem value=\"GB\">United Kingdom</MenuItem>\r\n                <MenuItem value=\"US\">United States</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Card>\r\n        )}\r\n      </div>\r\n      <Card className={classes.addressCard}>\r\n        <CardSection />\r\n        {paymentErrorMessage ? (\r\n          <Typography color=\"error\">{paymentErrorMessage}</Typography>\r\n        ) : null}\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          disabled={!stripe && !submitting}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n        >\r\n          Confirm Order\r\n        </Button>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;\r\n","import React from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst CheckoutItem = ({ checkoutItem }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.checkoutItem} key={checkoutItem.product.id}>\r\n      <Typography variant=\"subtitle1\" className={classes.checkoutItemName}>\r\n        {checkoutItem.product.name}\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" className={classes.checkoutItemPrice}>\r\n        ${checkoutItem.product.price.toFixed(2)}\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" className={classes.checkoutItemPrice}>\r\n        x{checkoutItem.quantity}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Card } from \"@material-ui/core\";\r\nimport useStyles from \"../../styles\";\r\nimport { useCart } from \"../../context/CartContext\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport { Elements, ElementsConsumer } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport CheckoutForm from \"./CheckoutForm\";\r\nimport CheckoutItem from \"./CheckoutItem\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Make sure to call `loadStripe` outside of a component’s render to avoid\r\n// recreating the `Stripe` object on every render.\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\r\n\r\nconst Checkout = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { cart } = useCart();\r\n  const [cartInfo, setCartInfo] = useState({ items: [], total: 0 });\r\n  const { currentUser } = useAuth();\r\n  const [token, setToken] = useState(null);\r\n  const [clientSecret, setClientSecret] = useState(\"\");\r\n\r\n  const startCheckoutAndCreatePaymentIntent = async () => {\r\n    try {\r\n      const cartInfoRequest = { items: cart };\r\n      const response = await SnackOverflow.post(\r\n        \"/stripe/createPaymentIntent\",\r\n        cartInfoRequest,\r\n        {\r\n          headers: { Authorization: token },\r\n        }\r\n      );\r\n      if (201 === response.status) {\r\n        setClientSecret(response.data.client_secret);\r\n        setCartInfo(response.data.cart);\r\n      } else {\r\n        history.push(\"/\");\r\n      }\r\n    } catch (error) {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  // Load/Update User Token\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    if (token !== null && cart !== null && cart.length > 0)\r\n      startCheckoutAndCreatePaymentIntent();\r\n  }, [token, cart]);\r\n\r\n  const InjectedCheckoutForm = () => (\r\n    <ElementsConsumer>\r\n      {({ stripe, elements }) => (\r\n        <CheckoutForm\r\n          stripe={stripe}\r\n          elements={elements}\r\n          clientSecret={clientSecret}\r\n          token={token}\r\n        />\r\n      )}\r\n    </ElementsConsumer>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} key=\"title\" className={classes.checkoutHeader}>\r\n          <h2 className={classes.checkoutHeaderTitle}>Checkout</h2>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          spacing={1}\r\n          justifyContent=\"center\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Grid item xs={12} sm={12} md={6} key=\"order-info\">\r\n            <Card className={classes.checkoutOrderInfo}>\r\n              <Typography variant=\"h6\">Order Info</Typography>\r\n              {cartInfo.items.map((checkoutItem) => (\r\n                <CheckoutItem\r\n                  checkoutItem={checkoutItem}\r\n                  key={checkoutItem.product.id}\r\n                />\r\n              ))}\r\n              <Typography variant=\"subtitle1\" className={classes.checkoutTotal}>\r\n                Total ${cartInfo.total.toFixed(2)}\r\n              </Typography>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={6} key=\"checkout\">\r\n            <Elements stripe={stripePromise}>\r\n              <InjectedCheckoutForm />\r\n            </Elements>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import React from \"react\";\r\nimport { Grid, Typography, Button, Link } from \"@material-ui/core\";\r\nimport useStyles from \"../../styles\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Make sure to call `loadStripe` outside of a component’s render to avoid\r\n// recreating the `Stripe` object on every render.\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\r\n\r\nconst CheckoutSuccess = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} key=\"title\" className={classes.cartHeader}>\r\n          <h2 className={classes.cartHeaderTitle}>Checkout Success!</h2>\r\n        </Grid>\r\n        <Grid item xs={12} key=\"body\" className={classes.cartHeader}>\r\n          <Typography>\r\n            It may take a few minutes for your order to show up on your{\" \"}\r\n            <Link onClick={() => history.push(\"/account\")}>account</Link>\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutSuccess;\r\n","import React from \"react\";\r\nimport { useCart } from \"../../context/CartContext\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction CheckoutRoute({ children, ...rest }) {\r\n  let { cart } = useCart();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        cart.length > 0 ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default CheckoutRoute;\r\n","import React from \"react\";\r\nimport { Grid, Typography, Link } from \"@material-ui/core\";\r\nimport useStyles from \"../../styles\";\r\n\r\nconst Contact = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.content}>\r\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} key=\"title\" className={classes.cartHeader}>\r\n          <h2 className={classes.cartHeaderTitle}>Contact Us</h2>\r\n        </Grid>\r\n        <Grid item xs={12} key=\"title2\" className={classes.cartHeader}>\r\n          <Typography>\r\n            Thank you for visiting my demo site. Feel free to contact me through{\" \"}\r\n            <Link\r\n              color=\"primary\"\r\n              href={\"https://www.linkedin.com/in/bernard-guiang\"}\r\n              target=\"_blank\"\r\n            >\r\n              LinkedIn\r\n            </Link>{\" \"}\r\n            - Bernard\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport { Grid, Typography, Card, CardMedia } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst OrderItem = ({ orderItem, orderItemClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      onClick={() => orderItemClick(orderItem.product.id)}\r\n      className={classes.orderItem}\r\n      key={orderItem.id}\r\n    >\r\n      <Card className={classes.orderItemImageContainer}>\r\n        <CardMedia\r\n          className={classes.orderItemImage}\r\n          image={\r\n            orderItem.product.images[0] ? orderItem.product.images[0] : null\r\n          }\r\n          title={orderItem.product.name}\r\n        />\r\n      </Card>\r\n      <Typography variant=\"subtitle1\" className={classes.orderItemName}>\r\n        {orderItem.product.name}\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" className={classes.orderItemPrice}>\r\n        Price: ${orderItem.price.toFixed(2)}\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" className={classes.orderItemQuantity}>\r\n        Quantity: {orderItem.quantity}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport useStyles from \"../../styles\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport OrderItem from \"./OrderItem\";\r\n\r\nconst Order = () => {\r\n  const { currentUser, logout } = useAuth();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [token, setToken] = useState(null);\r\n\r\n  const [order, setOrder] = useState(null);\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    const getOrder = async () => {\r\n      try {\r\n        const response = await SnackOverflow.get(`/orders/${id}`, {\r\n          headers: { Authorization: token },\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          setOrder(response.data);\r\n        } else {\r\n          history.push(\"/account\");\r\n        }\r\n      } catch (error) {\r\n        history.push(\"/account\");\r\n      }\r\n    };\r\n\r\n    if (token !== null && id !== null) {\r\n      getOrder();\r\n    }\r\n  }, [id, token]);\r\n\r\n  const orderItemClick = (id) => {\r\n    history.push(`/snacks/${id}`);\r\n  };\r\n\r\n  if (order === null) return <></>;\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} key=\"title\">\r\n          <Typography variant=\"h6\">Order #{order.id}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} key=\"orderInfo\">\r\n          <Card className={classes.orderDetailsCard}>\r\n            <CardActionArea>\r\n              {order.items.map((item) => (\r\n                <OrderItem\r\n                  orderItem={item}\r\n                  orderItemClick={orderItemClick}\r\n                  key={item.id}\r\n                />\r\n              ))}\r\n            </CardActionArea>\r\n            <CardContent>\r\n              <Typography variant=\"subtitle1\" align=\"right\">\r\n                Created:{\" \"}\r\n                {new Date(order.createdDate).toLocaleDateString(\"en-US\")}{\" \"}\r\n                {new Date(order.createdDate).toLocaleTimeString(\"en-US\")}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" align=\"right\">\r\n                Status: {order.status}\r\n              </Typography>\r\n              <div>\r\n                <Typography variant=\"subtitle1\" align=\"right\">\r\n                  Total ${order.total.toFixed(2)}\r\n                </Typography>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} key=\"billing\">\r\n          <Card className={classes.orderBillingAndShippingCard}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Billing</Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                {order.billingDetails.name}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                {order.billingDetails.email}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                {order.billingDetails.phone}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                {order.billingDetails.address.addressLineOne}\r\n              </Typography>\r\n              {order.billingDetails.address.addressLineTwo ? (\r\n                <Typography variant=\"subtitle1\">\r\n                  {order.billingDetails.address.addressLineTwo}\r\n                </Typography>\r\n              ) : null}\r\n              <Typography variant=\"subtitle1\">\r\n                {order.billingDetails.address.city}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                {order.billingDetails.address.postalCode}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                {order.billingDetails.address.country}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} key=\"shipping\">\r\n          <Card className={classes.orderBillingAndShippingCard}>\r\n            {order.isShippingSameAsBilling ? (\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Shipping</Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  Shipped to the billing address\r\n                </Typography>\r\n              </CardContent>\r\n            ) : (\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Shipping</Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  {order.shippingDetails.name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  {order.shippingDetails.phone}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  {order.shippingDetails.address.addressLineOne}\r\n                </Typography>\r\n                {order.shippingDetails.address.addressLineTwo ? (\r\n                  <Typography variant=\"subtitle1\">\r\n                    {order.shippingDetails.address.addressLineTwo}\r\n                  </Typography>\r\n                ) : null}\r\n                <Typography variant=\"subtitle1\">\r\n                  {order.shippingDetails.address.city}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  {order.shippingDetails.address.postalCode}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  {order.shippingDetails.address.country}\r\n                </Typography>\r\n              </CardContent>\r\n            )}\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React from \"react\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n// https://reactrouter.com/web/example/auth-workflow\r\n\r\n// A wrapper for <Route> that redirects to the login\r\n// screen if you're not yet authenticated.\r\nfunction AdminRoute({ children, ...rest }) {\r\n  let { currentUser } = useAuth();\r\n\r\n  const isAdmin = () => {\r\n    if (currentUser === null) return false;\r\n\r\n    var decoded = jwt_decode(currentUser.authenticationToken);\r\n    let auth = [];\r\n    decoded.authorities.map((authority) => {\r\n      auth.push(authority.authority);\r\n    });\r\n    if (auth.includes(\"ROLE_ADMIN\")) return true;\r\n    else return false;\r\n  };\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        currentUser && isAdmin() ? ( // check if authenticated and user is an admin\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default AdminRoute;\r\n","import React, { useState } from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nconst TopProductCard = ({ product }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const productClick = (product) => {\r\n    history.push(`/admin/products/${product.id}`);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} key={product.id}>\r\n      <div\r\n        className={classes.verticalCard}\r\n        onClick={() => productClick(product)}\r\n      >\r\n        <div>\r\n          <CardMedia\r\n            className={classes.productCardVerticalImage}\r\n            image={product.images[0] ? product.images[0] : null}\r\n            title={product.name}\r\n          />\r\n          <CardContent className={classes.snackCardContent}>\r\n            <Typography gutterBottom variant=\"subtitle1\">\r\n              ID: #{product.id}\r\n            </Typography>\r\n            <Typography gutterBottom variant=\"subtitle1\">\r\n              Name: {product.name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              Price: ${product.price.toFixed(2)}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              Units Sold This Month: {product.unitsSold}\r\n            </Typography>\r\n          </CardContent>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={classes.productCardHorizontal}\r\n        onClick={() => productClick(product)}\r\n      >\r\n        <div className={classes.cartItemCardActionArea}>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            className={classes.productCardHorizontalID}\r\n          >\r\n            #{product.id}\r\n          </Typography>\r\n          <div className={classes.productCardHorizontalMain}>\r\n            <CardMedia\r\n              className={classes.productCardHorizontalImage}\r\n              image={product.images[0] ? product.images[0] : null}\r\n              title={product.name}\r\n            />\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              className={classes.productCardHorizontalName}\r\n            >\r\n              {product.name}\r\n            </Typography>\r\n          </div>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            className={classes.productCardHorizontalPrice}\r\n          >\r\n            ${product.price.toFixed(2)}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            className={classes.productCardHorizontalUnitsSold}\r\n          >\r\n            {product.unitsSold}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopProductCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { useHistory } from \"react-router\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport TopProductCard from \"./TopProductCard\";\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n  const handleClick = () => {};\r\n\r\n  const { currentUser } = useAuth();\r\n  const [token, setToken] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const [orderStats, setOrderStats] = useState({});\r\n  const [newUsers, setNewUsers] = useState(0);\r\n  const [topProducts, setTopProducts] = useState([]);\r\n  const [range, setRange] = useState(\"month\");\r\n\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  const getOrderStats = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(\"/admin/orders/stats\", {\r\n        params: {\r\n          range,\r\n        },\r\n        headers: { Authorization: token },\r\n      });\r\n      setOrderStats(response.data);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const getUserStats = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(\"/admin/users/stats\", {\r\n        params: {\r\n          range,\r\n        },\r\n        headers: { Authorization: token },\r\n      });\r\n      setNewUsers(response.data.newUsers);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const getTopSellingProducts = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(\"/admin/products\", {\r\n        params: {\r\n          search: \"\",\r\n          pageSize: 5,\r\n          pageNumber: 0,\r\n          itemsSold: range,\r\n          sortBy: \"unitsSold\",\r\n          sortDirection: \"DESC\",\r\n        },\r\n        headers: { Authorization: token },\r\n      });\r\n      setTopProducts(response.data.content);\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token !== null && range) {\r\n      getOrderStats();\r\n      getUserStats();\r\n      getTopSellingProducts();\r\n    }\r\n  }, [token, range]);\r\n\r\n  const orderStatsClick = () => {\r\n    let sortBy = \"createdDate\";\r\n    let direction = \"DESC\";\r\n    let pageNumberUI = 1;\r\n    history.push({\r\n      pathname: `/admin/orders`,\r\n      search: `?sortBy=${sortBy}&direction=${direction}&page=${pageNumberUI}`,\r\n    });\r\n  };\r\n\r\n  const userStatsClick = () => {\r\n    let sortBy = \"joinDate\";\r\n    let direction = \"DESC\";\r\n    let pageNumberUI = 1;\r\n    history.push({\r\n      pathname: `/admin/members`,\r\n      search: `?sortBy=${sortBy}&direction=${direction}&page=${pageNumberUI}`,\r\n    });\r\n  };\r\n\r\n  const topProductsClick = () => {\r\n    let sortBy = \"unitsSold\";\r\n    let direction = \"DESC\";\r\n    let pageNumberUI = 1;\r\n    history.push({\r\n      pathname: `/admin/products`,\r\n      search: `?&sortBy=${sortBy}&direction=${direction}&includeOrders=${range}&page=${pageNumberUI}`,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n      <Grid item xs={12} key=\"pageTitle\" className={classes.cartHeader}>\r\n        <h2 className={classes.cartHeaderTitle}>Dashboard</h2>\r\n        <FormControl className={classes.adminSelector}>\r\n          <InputLabel id=\"range\">Range</InputLabel>\r\n          <Select\r\n            labelId=\"range\"\r\n            id=\"rangeSelect\"\r\n            value={range}\r\n            onChange={(event) => setRange(event.target.value)}\r\n          >\r\n            <MenuItem value={\"all\"}>All</MenuItem>\r\n            <MenuItem value={\"month\"}>Month</MenuItem>\r\n            <MenuItem value={\"year\"}>Year</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12} md={5} key=\"ordersThisMonth\">\r\n        <Card className={classes.root}>\r\n          <CardContent>\r\n            <div className={classes.dashboardTile}>\r\n              <div className={classes.dashboardTileItem}>\r\n                <Typography\r\n                  className={classes.title}\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  Successfull Orders\r\n                </Typography>\r\n                <Typography variant=\"h5\" className={classes.success}>\r\n                  {orderStats.successfulOrders}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.dashboardTileItem}>\r\n                <Typography\r\n                  className={classes.title}\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  Unsuccessful Orders\r\n                </Typography>\r\n                <Typography variant=\"h5\" className={classes.error}>\r\n                  {orderStats.unsuccessfulOrders}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button size=\"small\" onClick={orderStatsClick}>\r\n              See Details\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={5} key=\"totalIncomeThisMonth\">\r\n        <Card className={classes.root}>\r\n          <CardContent>\r\n            <div className={classes.dashboardTile}>\r\n              <div className={classes.dashboardTileItem}>\r\n                <Typography\r\n                  className={classes.title}\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  Total Income This Month\r\n                </Typography>\r\n                {orderStats.totalIncome !== null &&\r\n                typeof orderStats.totalIncome !== \"undefined\" ? (\r\n                  <Typography variant=\"h5\" className={classes.success}>\r\n                    ${orderStats.totalIncome.toFixed(2)}\r\n                  </Typography>\r\n                ) : null}\r\n              </div>\r\n              <div className={classes.dashboardTileItem}>\r\n                <Typography\r\n                  className={classes.title}\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  Unsuccessful Payments\r\n                </Typography>\r\n                {orderStats.unsuccessfulPayments !== null &&\r\n                typeof orderStats.unsuccessfulPayments !== \"undefined\" ? (\r\n                  <Typography variant=\"h5\" className={classes.error}>\r\n                    ${orderStats.unsuccessfulPayments.toFixed(2)}\r\n                  </Typography>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button size=\"small\" onClick={orderStatsClick}>\r\n              See Details\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={2} key=\"newUsersThisMonth\">\r\n        <Card className={classes.root}>\r\n          <CardContent>\r\n            <div className={classes.dashboardTile}>\r\n              <div className={classes.dashboardTileItem}>\r\n                <Typography\r\n                  className={classes.title}\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  New Users\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  {newUsers}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button size=\"small\" onClick={userStatsClick}>\r\n              See Details\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} key=\"topSellingProducts\">\r\n        <Card className={classes.root}>\r\n          <CardContent>\r\n            <Typography\r\n              className={classes.title}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n            >\r\n              Top Selling Products\r\n            </Typography>\r\n            <div className={classes.productCardHorizontalTitle}>\r\n              <div className={classes.cartItemCardActionArea}>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  className={classes.productCardHorizontalID}\r\n                >\r\n                  ID\r\n                </Typography>\r\n                <div className={classes.productCardHorizontalMain}>\r\n                  <Typography\r\n                    variant=\"subtitle1\"\r\n                    className={classes.productCardHorizontalName}\r\n                  >\r\n                    Product\r\n                  </Typography>\r\n                </div>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  className={classes.productCardHorizontalPrice}\r\n                >\r\n                  Price\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  className={classes.productCardHorizontalUnitsSold}\r\n                >\r\n                  Units Sold\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            {topProducts.map((product) => (\r\n              <TopProductCard product={product} key={product.id} />\r\n            ))}\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button size=\"small\" onClick={topProductsClick}>\r\n              See Details\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  useMediaQuery,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\n\r\nconst OrderCardAdmin = ({ order }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const { currentUser } = useAuth();\r\n  const [token, setToken] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  const itemClick = (id) => {\r\n    history.push(`/admin/orders/${id}`);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} key={order.id}>\r\n      <Card className={classes.orderCardMobile}>\r\n        <CardActionArea\r\n          onClick={() => itemClick(order.id)}\r\n          className={classes.orderCardActionAreaMobile}\r\n        >\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            Order: #{order.id}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            User: {order.user.username}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem2}\r\n          >\r\n            Created: {new Date(order.createdDate).toLocaleDateString(\"en-US\")}\r\n          </Typography>\r\n          {order.status === \"CANCELLED\" ||\r\n          order.status === \"FAILED\" ||\r\n          order.status === \"REFUNDED\" ? (\r\n            <div>\r\n              <div className={classes.orderCardActionAreaItem2}>\r\n                <Typography variant=\"subtitle1\" className={classes.error}>\r\n                  Status: {order.status}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.orderCardActionAreaItem}>\r\n                <Typography variant=\"subtitle1\" className={classes.error}>\r\n                  Total: ${order.total.toFixed(2)}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <div className={classes.orderCardActionAreaItem2}>\r\n                <Typography variant=\"subtitle1\" className={classes.success}>\r\n                  Status: {order.status}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.orderCardActionAreaItem}>\r\n                <Typography variant=\"subtitle1\" className={classes.success}>\r\n                  Total: ${order.total.toFixed(2)}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </CardActionArea>\r\n        <CardActions className={classes.snackCardActions}>\r\n          <UpdateOrder order={order} buttonSize=\"large\" token={token} />\r\n        </CardActions>\r\n      </Card>\r\n      <Card className={classes.orderCard}>\r\n        <CardActionArea onClick={() => itemClick(order.id)}>\r\n          <div className={classes.orderCardActionArea}>\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              className={classes.orderCardActionAreaItem}\r\n            >\r\n              #{order.id}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              className={classes.orderCardActionAreaItem2}\r\n            >\r\n              {order.user.username}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              className={classes.orderCardActionAreaItem2}\r\n            >\r\n              {new Date(order.createdDate).toLocaleDateString(\"en-US\")}\r\n            </Typography>\r\n            {order.status === \"CANCELLED\" ||\r\n            order.status === \"FAILED\" ||\r\n            order.status === \"REFUNDED\" ? (\r\n              <div className={classes.orderCardActionAreaItem2}>\r\n                <Typography variant=\"subtitle1\" className={classes.error}>\r\n                  {order.status}\r\n                </Typography>\r\n              </div>\r\n            ) : (\r\n              <div className={classes.orderCardActionAreaItem2}>\r\n                <Typography variant=\"subtitle1\" className={classes.success}>\r\n                  {order.status}\r\n                </Typography>\r\n              </div>\r\n            )}\r\n            {order.status === \"CANCELLED\" ||\r\n            order.status === \"FAILED\" ||\r\n            order.status === \"REFUNDED\" ? (\r\n              <div className={classes.orderCardActionAreaItem}>\r\n                <Typography variant=\"subtitle1\" className={classes.error}>\r\n                  ${order.total.toFixed(2)}\r\n                </Typography>\r\n              </div>\r\n            ) : (\r\n              <div className={classes.orderCardActionAreaItem}>\r\n                <Typography variant=\"subtitle1\" className={classes.success}>\r\n                  ${order.total.toFixed(2)}\r\n                </Typography>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </CardActionArea>\r\n        <CardActions className={classes.snackCardActions}>\r\n          <UpdateOrder order={order} buttonSize=\"small\" token={token} />\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst UpdateOrder = ({ order, buttonSize, token }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [status, setStatus] = useState(order.status);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n\r\n  const submitOrderUpdate = async () => {\r\n    try {\r\n      const updateOrderRequest = {\r\n        id: order.id,\r\n        status,\r\n      };\r\n      const response = await SnackOverflow.put(\r\n        \"/admin/orders\",\r\n        updateOrderRequest,\r\n        {\r\n          headers: { Authorization: token },\r\n        }\r\n      );\r\n\r\n      if (200 === response.status) {\r\n        history.push(`/admin/orders/${response.data.id}`);\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleStatusChange = (event) => {\r\n    setStatus(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        size={buttonSize}\r\n        color=\"primary\"\r\n        onClick={() => handleClickOpen()}\r\n        startIcon={<EditIcon />}\r\n      >\r\n        Edit\r\n      </Button>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">\r\n          {`Update Status for Order #${order.id}`}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <FormControl className={classes.selector}>\r\n            <InputLabel id=\"status\">Status</InputLabel>\r\n            <Select\r\n              labelId=\"status\"\r\n              id=\"statusSelect\"\r\n              value={status}\r\n              onChange={handleStatusChange}\r\n            >\r\n              <MenuItem value={\"PAYMENT_PENDING\"}>Payment Processing</MenuItem>\r\n              <MenuItem value={\"PROCESSING\"}>Processing</MenuItem>\r\n              <MenuItem value={\"COMPLETED\"}>Completed</MenuItem>\r\n              <MenuItem value={\"FAILED\"}>Failed</MenuItem>\r\n              <MenuItem value={\"CANCELLED\"}>Cancelled</MenuItem>\r\n              <MenuItem value={\"REFUNDED\"}>Refunded</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={submitOrderUpdate} color=\"primary\" autoFocus>\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderCardAdmin;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  InputBase,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../../styles\";\r\nimport OrderCardAdmin from \"./OrderCardAdmin\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst Orders = () => {\r\n  const classes = useStyles();\r\n\r\n  const [token, setToken] = useState(null);\r\n  const { currentUser } = useAuth();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const [pageNumberUI, setPageNumberUI] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [sortBy, setSortBy] = useState(\"createdDate\");\r\n  const [direction, setDirection] = useState(\"DESC\");\r\n\r\n  useEffect(() => {\r\n    let urlParams = new URLSearchParams(location.search);\r\n\r\n    if (urlParams.get(\"search\") !== null) {\r\n      setSearch(urlParams.get(\"search\"));\r\n    }\r\n\r\n    if (urlParams.get(\"page\")) {\r\n      let currentPage = parseInt(urlParams.get(\"page\"));\r\n      setPageNumber(currentPage - 1);\r\n      setPageNumberUI(currentPage);\r\n    }\r\n    if (urlParams.get(\"sortBy\")) {\r\n      setSortBy(urlParams.get(\"sortBy\"));\r\n    }\r\n    if (urlParams.get(\"direction\")) {\r\n      setDirection(urlParams.get(\"direction\"));\r\n    }\r\n  }, [location]);\r\n\r\n  const handleSearchSubmit = () => {\r\n    history.push({\r\n      pathname: `/admin/orders`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${direction}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    history.push({\r\n      pathname: `/admin/orders`,\r\n      search: `?search=${\r\n        event.target.value\r\n      }&sortBy=${sortBy}&direction=${direction}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleSortByChange = (event) => {\r\n    history.push({\r\n      pathname: `/admin/orders`,\r\n      search: `?search=${search}&sortBy=${\r\n        event.target.value\r\n      }&direction=${direction}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleDirectionChange = (event) => {\r\n    history.push({\r\n      pathname: `/admin/orders`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${\r\n        event.target.value\r\n      }&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handlePageChange = (value) => {\r\n    history.push({\r\n      pathname: `/admin/orders`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${direction}&page=${value}`,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  const getOrders = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(\"/admin/orders\", {\r\n        params: {\r\n          search: search,\r\n          pageSize: 9,\r\n          pageNumber: pageNumber,\r\n          sortBy: sortBy,\r\n          sortDirection: direction,\r\n        },\r\n        headers: { Authorization: token },\r\n      });\r\n      setOrders(response.data.content);\r\n      setTotalPages(response.data.totalPages);\r\n    } catch (error) {}\r\n  };\r\n  useEffect(() => {\r\n    if (token !== null) {\r\n      getOrders();\r\n    }\r\n  }, [search, pageNumber, token, sortBy, direction]);\r\n\r\n  return (\r\n    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n      <Grid item xs={12} key=\"pageTitle\" className={classes.cartHeader}>\r\n        <h2 className={classes.cartHeaderTitle}>Orders</h2>\r\n        <div className={classes.adminSelector}>\r\n          <InputLabel id=\"sortBy\">Sort By</InputLabel>\r\n          <Select\r\n            labelId=\"sortBy\"\r\n            id=\"sortBySelect\"\r\n            value={sortBy}\r\n            onChange={handleSortByChange}\r\n          >\r\n            <MenuItem value={\"createdDate\"}>Created Date</MenuItem>\r\n            <MenuItem value={\"id\"}>ID</MenuItem>\r\n            <MenuItem value={\"user.username\"}>Username</MenuItem>\r\n            <MenuItem value={\"status\"}>Status</MenuItem>\r\n            <MenuItem value={\"total\"}>Total</MenuItem>\r\n          </Select>\r\n        </div>\r\n        <div className={classes.adminSelector}>\r\n          <InputLabel id=\"direction\">Direction</InputLabel>\r\n          <Select\r\n            labelId=\"direction\"\r\n            id=\"direcitonSelect\"\r\n            value={direction}\r\n            onChange={handleDirectionChange}\r\n          >\r\n            <MenuItem value={\"ASC\"}>Ascending</MenuItem>\r\n            <MenuItem value={\"DESC\"}>Descending</MenuItem>\r\n          </Select>\r\n        </div>\r\n      </Grid>\r\n      <Grid container spacing={1} key=\"orderInfo\">\r\n        <Grid item xs={12} key={\"listTitle\"} className={classes.orderListTitle}>\r\n          <Paper className={classes.adminSearchBar}>\r\n            <InputBase\r\n              className={classes.search}\r\n              autoComplete=\"off\"\r\n              placeholder=\"Search Orders By Username\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onChange={handleSearchChange}\r\n            />\r\n            <IconButton\r\n              type=\"submit\"\r\n              className={classes.iconButton}\r\n              aria-label=\"search\"\r\n              onClick={() => handleSearchSubmit()}\r\n            >\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </Paper>\r\n          <div className={classes.adminSelectorMobileContainer}>\r\n            <FormControl className={classes.adminSelectorMobile}>\r\n              <InputLabel id=\"sortBy\">Sort By</InputLabel>\r\n              <Select\r\n                labelId=\"sortBy\"\r\n                id=\"sortBySelect\"\r\n                value={sortBy}\r\n                onChange={handleSortByChange}\r\n              >\r\n                <MenuItem value={\"createdDate\"}>Created Date</MenuItem>\r\n                <MenuItem value={\"id\"}>ID</MenuItem>\r\n                <MenuItem value={\"user.username\"}>Username</MenuItem>\r\n                <MenuItem value={\"status\"}>Status</MenuItem>\r\n                <MenuItem value={\"total\"}>Total</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.adminSelectorMobile}>\r\n              <InputLabel id=\"direction\">Direction</InputLabel>\r\n              <Select\r\n                labelId=\"direction\"\r\n                id=\"direcitonSelect\"\r\n                value={direction}\r\n                onChange={handleDirectionChange}\r\n              >\r\n                <MenuItem value={\"ASC\"}>Ascending</MenuItem>\r\n                <MenuItem value={\"DESC\"}>Descending</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div className={classes.orderCard}>\r\n            <div className={classes.orderCardActionArea}>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.orderCardActionAreaItem}\r\n              >\r\n                Order\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.orderCardActionAreaItem2}\r\n              >\r\n                Username\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.orderCardActionAreaItem2}\r\n              >\r\n                Created\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.orderCardActionAreaItem2}\r\n              >\r\n                Status\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.orderCardActionAreaItem}\r\n              >\r\n                Total\r\n              </Typography>\r\n              <div className={classes.orderTitleFiller}></div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        {orders.map((order) => (\r\n          <OrderCardAdmin order={order} key={order.id} />\r\n        ))}\r\n      </Grid>\r\n      <Grid item xs={12} key=\"pagination\" className={classes.pagination}>\r\n        <div className={classes.snacksPaginationContainer}>\r\n          <Pagination\r\n            count={totalPages}\r\n            color=\"primary\"\r\n            page={pageNumberUI}\r\n            onChange={(event, value) => {\r\n              handlePageChange(value);\r\n            }}\r\n          />\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import React from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nconst ProductCard = ({ product }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const productClick = (product) => {\r\n    history.push(`/admin/products/${product.id}`);\r\n  };\r\n\r\n  const editProductClick = (product) => {\r\n    history.push(`/admin/products/edit/${product.id}`);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} key={product.id}>\r\n      <Card className={classes.verticalCard}>\r\n        <CardActionArea onClick={() => productClick(product)}>\r\n          <CardMedia\r\n            className={classes.productCardVerticalImage}\r\n            image={product.images[0] ? product.images[0] : null}\r\n            title={product.name}\r\n          />\r\n          <CardContent className={classes.snackCardContent}>\r\n            <Typography gutterBottom variant=\"subtitle1\">\r\n              ID: #{product.id}\r\n            </Typography>\r\n            <Typography gutterBottom variant=\"subtitle1\">\r\n              Name: {product.name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              Created Date:{\" \"}\r\n              {new Date(product.createdDate).toLocaleDateString(\"en-US\")}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              Price: ${product.price.toFixed(2)}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              Units Sold This Month: {product.unitsSold}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions className={classes.snackCardActions}>\r\n          <Button\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            onClick={() => editProductClick(product)}\r\n            startIcon={<EditIcon />}\r\n          >\r\n            Edit\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n\r\n      <Card className={classes.productCardHorizontal}>\r\n        <CardActionArea onClick={() => productClick(product)}>\r\n          <div className={classes.cartItemCardActionArea}>\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              className={classes.productCardHorizontalID}\r\n            >\r\n              #{product.id}\r\n            </Typography>\r\n            <div className={classes.productCardHorizontalMain}>\r\n              <CardMedia\r\n                className={classes.productCardHorizontalImage}\r\n                image={product.images[0] ? product.images[0] : null}\r\n                title={product.name}\r\n              />\r\n              <Typography\r\n                variant=\"subtitle2\"\r\n                className={classes.productCardHorizontalName}\r\n              >\r\n                {product.name}\r\n              </Typography>\r\n            </div>\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              className={classes.productCardHorizontalDate}\r\n            >\r\n              {new Date(product.createdDate).toLocaleDateString(\"en-US\")}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              className={classes.productCardHorizontalPrice}\r\n            >\r\n              ${product.price.toFixed(2)}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              className={classes.productCardHorizontalUnitsSold}\r\n            >\r\n              {product.unitsSold}\r\n            </Typography>\r\n          </div>\r\n        </CardActionArea>\r\n        <CardActions className={classes.cartItemCardActions}>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={() => editProductClick(product)}\r\n            startIcon={<EditIcon />}\r\n          >\r\n            Edit\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  Typography,\r\n  Button,\r\n  InputBase,\r\n  IconButton,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport useStyles from \"../../styles\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useHistory } from \"react-router\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst ProductsAdmin = () => {\r\n  const classes = useStyles();\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const [token, setToken] = useState(null);\r\n  const { currentUser } = useAuth();\r\n\r\n  const [products, setProducts] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const [pageNumberUI, setPageNumberUI] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [includeOrders, setIncludeOrders] = useState(\"all\");\r\n  const [sortBy, setSortBy] = useState(\"unitsSold\");\r\n  const [direction, setDirection] = useState(\"DESC\");\r\n\r\n  useEffect(() => {\r\n    let urlParams = new URLSearchParams(location.search);\r\n\r\n    if (urlParams.get(\"search\") !== null) {\r\n      setSearch(urlParams.get(\"search\"));\r\n    }\r\n\r\n    if (urlParams.get(\"page\")) {\r\n      let currentPage = parseInt(urlParams.get(\"page\"));\r\n      setPageNumber(currentPage - 1);\r\n      setPageNumberUI(currentPage);\r\n    }\r\n    if (urlParams.get(\"sortBy\")) {\r\n      setSortBy(urlParams.get(\"sortBy\"));\r\n    }\r\n    if (urlParams.get(\"direction\")) {\r\n      setDirection(urlParams.get(\"direction\"));\r\n    }\r\n    if (urlParams.get(\"includeOrders\")) {\r\n      setIncludeOrders(urlParams.get(\"includeOrders\"));\r\n    }\r\n  }, [location]);\r\n\r\n  const handleSearchSubmit = () => {\r\n    history.push({\r\n      pathname: `/admin/products`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${direction}&includeOrders=${includeOrders}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    history.push({\r\n      pathname: `/admin/products`,\r\n      search: `?search=${\r\n        event.target.value\r\n      }&sortBy=${sortBy}&direction=${direction}&includeOrders=${includeOrders}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleIncludeOrdersChange = (event) => {\r\n    history.push({\r\n      pathname: `/admin/products`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${direction}&includeOrders=${\r\n        event.target.value\r\n      }&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleSortByChange = (event) => {\r\n    history.push({\r\n      pathname: `/admin/products`,\r\n      search: `?search=${search}&sortBy=${\r\n        event.target.value\r\n      }&direction=${direction}&includeOrders=${includeOrders}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleDirectionChange = (event) => {\r\n    history.push({\r\n      pathname: `/admin/products`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${\r\n        event.target.value\r\n      }&includeOrders=${includeOrders}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handlePageChange = (value) => {\r\n    history.push({\r\n      pathname: `/admin/products`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${direction}&includeOrders=${includeOrders}&page=${value}`,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  const getProducts = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(\"/admin/products\", {\r\n        params: {\r\n          search: search,\r\n          pageSize: 9,\r\n          pageNumber: pageNumber,\r\n          itemsSold: includeOrders,\r\n          sortBy: sortBy,\r\n          sortDirection: direction,\r\n        },\r\n        headers: { Authorization: token },\r\n      });\r\n      setProducts(response.data.content);\r\n      setTotalPages(response.data.totalPages);\r\n    } catch (error) {}\r\n  };\r\n  // Call Get Snacks Once\r\n  useEffect(() => {\r\n    if (token !== null) getProducts();\r\n  }, [search, pageNumber, token, sortBy, includeOrders, direction]);\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item xs={12} key=\"pageTitle\" className={classes.cartHeader}>\r\n          <h2 className={classes.cartHeaderTitle}>Products</h2>\r\n          <div className={classes.adminSelector}>\r\n            <InputLabel id=\"includeOrders\">Include Orders</InputLabel>\r\n            <Select\r\n              labelId=\"includeOrders\"\r\n              id=\"includeOrdersSelect\"\r\n              value={includeOrders}\r\n              onChange={handleIncludeOrdersChange}\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"month\"}>Month</MenuItem>\r\n              <MenuItem value={\"year\"}>Year</MenuItem>\r\n            </Select>\r\n          </div>\r\n          <div className={classes.adminSelector}>\r\n            <InputLabel id=\"sortBy\">Sort By</InputLabel>\r\n            <Select\r\n              labelId=\"sortBy\"\r\n              id=\"sortBySelect\"\r\n              value={sortBy}\r\n              onChange={handleSortByChange}\r\n            >\r\n              <MenuItem value={\"createdDate\"}>Created Date</MenuItem>\r\n              <MenuItem value={\"id\"}>ID</MenuItem>\r\n              <MenuItem value={\"name\"}>Name</MenuItem>\r\n              <MenuItem value={\"price\"}>Price</MenuItem>\r\n              <MenuItem value={\"unitsSold\"}>Units Sold</MenuItem>\r\n            </Select>\r\n          </div>\r\n          <div className={classes.adminSelector}>\r\n            <InputLabel id=\"direction\">Direction</InputLabel>\r\n            <Select\r\n              labelId=\"direction\"\r\n              id=\"directoonSelect\"\r\n              value={direction}\r\n              onChange={handleDirectionChange}\r\n            >\r\n              <MenuItem value={\"ASC\"}>Ascending</MenuItem>\r\n              <MenuItem value={\"DESC\"}>Descending</MenuItem>\r\n            </Select>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          key=\"search\"\r\n          className={classes.adminSearchContainer}\r\n        >\r\n          <Paper className={classes.adminSearchBar}>\r\n            <InputBase\r\n              className={classes.search}\r\n              autoComplete=\"off\"\r\n              placeholder=\"Search Products by Name\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onChange={handleSearchChange}\r\n            />\r\n            <IconButton\r\n              type=\"submit\"\r\n              className={classes.iconButton}\r\n              aria-label=\"search\"\r\n              onClick={() => handleSearchSubmit()}\r\n            >\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </Paper>\r\n          <div className={classes.adminSelectorMobileContainer}>\r\n            <FormControl className={classes.adminSelectorMobile}>\r\n              <InputLabel id=\"includeOrders\">Include Orders</InputLabel>\r\n              <Select\r\n                labelId=\"includeOrders\"\r\n                id=\"includeOrdersSelect\"\r\n                value={includeOrders}\r\n                onChange={handleIncludeOrdersChange}\r\n              >\r\n                <MenuItem value={\"all\"}>All</MenuItem>\r\n                <MenuItem value={\"month\"}>Month</MenuItem>\r\n                <MenuItem value={\"year\"}>Year</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.adminSelectorMobile}>\r\n              <InputLabel id=\"sortBy\">Sort By</InputLabel>\r\n              <Select\r\n                labelId=\"sortBy\"\r\n                id=\"sortBySelect\"\r\n                value={sortBy}\r\n                onChange={handleSortByChange}\r\n              >\r\n                <MenuItem value={\"id\"}>ID</MenuItem>\r\n                <MenuItem value={\"name\"}>Name</MenuItem>\r\n                <MenuItem value={\"price\"}>Price</MenuItem>\r\n                <MenuItem value={\"unitsSold\"}>Units Sold</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.adminSelectorMobile}>\r\n              <InputLabel id=\"direction\">Direction</InputLabel>\r\n              <Select\r\n                labelId=\"direction\"\r\n                id=\"direcitonSelect\"\r\n                value={direction}\r\n                onChange={handleDirectionChange}\r\n              >\r\n                <MenuItem value={\"ASC\"}>Ascending</MenuItem>\r\n                <MenuItem value={\"DESC\"}>Descending</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n        </Grid>\r\n        <div className={classes.productCardNewProductButton}>\r\n          <Button\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            fullWidth={true}\r\n            onClick={() => history.push(\"/admin/products/new\")}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            New\r\n          </Button>\r\n        </div>\r\n        <div className={classes.productCardHorizontalTitle}>\r\n          <div className={classes.cartItemCardActionArea}>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              className={classes.productCardHorizontalID}\r\n            >\r\n              ID\r\n            </Typography>\r\n            <div className={classes.productCardHorizontalMain}>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.productCardHorizontalName}\r\n              >\r\n                Product\r\n              </Typography>\r\n            </div>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              className={classes.productCardHorizontalDate}\r\n            >\r\n              Created\r\n            </Typography>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              className={classes.productCardHorizontalPrice}\r\n            >\r\n              Price\r\n            </Typography>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              className={classes.productCardHorizontalUnitsSold}\r\n            >\r\n              Units Sold\r\n            </Typography>\r\n            <div className={classes.productCardHorizontalFiller}>\r\n              <Button\r\n                size=\"large\"\r\n                color=\"primary\"\r\n                onClick={() => history.push(\"/admin/products/new\")}\r\n                startIcon={<AddIcon />}\r\n              >\r\n                New\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {products.map((product) => (\r\n          <ProductCard product={product} key={product.id} />\r\n        ))}\r\n      </Grid>\r\n      <Grid item xs={12} key=\"pagination\" className={classes.pagination}>\r\n        <div className={classes.snacksPaginationContainer}>\r\n          <Pagination\r\n            count={totalPages}\r\n            color=\"primary\"\r\n            page={pageNumberUI}\r\n            onChange={(event, value) => {\r\n              handlePageChange(value);\r\n            }}\r\n          />\r\n        </div>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductsAdmin;\r\n","import React from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport { Grid, Typography, Card, CardActionArea } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst MemberCard = ({ member }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const itemClick = (id) => {\r\n    //history.push(`/admin/members/${id}`);\r\n  };\r\n  return (\r\n    <Grid item xs={12} key={member.id}>\r\n      <Card className={classes.memberCardMobile}>\r\n        <CardActionArea\r\n          onClick={() => itemClick(member.id)}\r\n          className={classes.orderCardActionAreaMobile}\r\n        >\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            ID: #{member.id}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            Username: {member.username}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            Email: {member.email}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem2}\r\n          >\r\n            Full Name: {member.fullName}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            Role: {member.role}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem1}\r\n          >\r\n            Join Date: {new Date(member.joinDate).toLocaleDateString(\"en-US\")}\r\n          </Typography>\r\n        </CardActionArea>\r\n      </Card>\r\n      <Card className={classes.memberCard}>\r\n        <CardActionArea onClick={() => itemClick(member.id)}>\r\n          <div className={classes.orderCardActionArea}>\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              className={classes.orderCardActionAreaItem}\r\n            >\r\n              #{member.id}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              className={classes.orderCardActionAreaItem2}\r\n            >\r\n              {member.username}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              className={classes.orderCardActionAreaItem2}\r\n            >\r\n              {member.email}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              className={classes.orderCardActionAreaItem2}\r\n            >\r\n              {member.fullName}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              className={classes.orderCardActionAreaItem2}\r\n            >\r\n              {member.role}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              className={classes.orderCardActionAreaItem1}\r\n            >\r\n              {new Date(member.joinDate).toLocaleDateString(\"en-US\")}\r\n            </Typography>\r\n          </div>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MemberCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  Typography,\r\n  InputBase,\r\n  IconButton,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../../styles\";\r\nimport MemberCard from \"./MemberCard\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst Members = () => {\r\n  const classes = useStyles();\r\n  const [token, setToken] = useState(null);\r\n  const { currentUser } = useAuth();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const [pageNumberUI, setPageNumberUI] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  const [members, setMembers] = useState([]);\r\n  const [sortBy, setSortBy] = useState(\"joinDate\");\r\n  const [direction, setDirection] = useState(\"DESC\");\r\n\r\n  useEffect(() => {\r\n    let urlParams = new URLSearchParams(location.search);\r\n\r\n    if (urlParams.get(\"search\") !== null) {\r\n      setSearch(urlParams.get(\"search\"));\r\n    }\r\n\r\n    if (urlParams.get(\"page\")) {\r\n      let currentPage = parseInt(urlParams.get(\"page\"));\r\n      setPageNumber(currentPage - 1);\r\n      setPageNumberUI(currentPage);\r\n    }\r\n    if (urlParams.get(\"sortBy\")) {\r\n      setSortBy(urlParams.get(\"sortBy\"));\r\n    }\r\n    if (urlParams.get(\"direction\")) {\r\n      setDirection(urlParams.get(\"direction\"));\r\n    }\r\n  }, [location]);\r\n\r\n  const handleSearchSubmit = () => {\r\n    history.push({\r\n      pathname: `/admin/members`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${direction}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    history.push({\r\n      pathname: `/admin/members`,\r\n      search: `?search=${\r\n        event.target.value\r\n      }&sortBy=${sortBy}&direction=${direction}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleSortByChange = (event) => {\r\n    history.push({\r\n      pathname: `/admin/members`,\r\n      search: `?search=${search}&sortBy=${\r\n        event.target.value\r\n      }&direction=${direction}&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handleDirectionChange = (event) => {\r\n    history.push({\r\n      pathname: `/admin/members`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${\r\n        event.target.value\r\n      }&page=${1}`,\r\n    });\r\n  };\r\n\r\n  const handlePageChange = (value) => {\r\n    history.push({\r\n      pathname: `/admin/members`,\r\n      search: `?search=${search}&sortBy=${sortBy}&direction=${direction}&page=${value}`,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  const getMembers = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(\"/admin/users\", {\r\n        params: {\r\n          search: search,\r\n          pageSize: 9,\r\n          pageNumber: pageNumber,\r\n          sortBy: sortBy,\r\n          sortDirection: direction,\r\n        },\r\n        headers: { Authorization: token },\r\n      });\r\n      setMembers(response.data.content);\r\n      setTotalPages(response.data.totalPages);\r\n    } catch (error) {}\r\n  };\r\n  useEffect(() => {\r\n    if (token !== null) {\r\n      getMembers();\r\n    }\r\n  }, [search, pageNumber, token, sortBy, direction]);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"flex-start\"\r\n      alignItems=\"flex-start\"\r\n    >\r\n      <Grid item xs={12} key=\"pageTitle\" className={classes.cartHeader}>\r\n        <h2 className={classes.cartHeaderTitle}>Members</h2>\r\n        <div className={classes.adminSelector}>\r\n          <InputLabel id=\"sortBy\">Sort By</InputLabel>\r\n          <Select\r\n            labelId=\"sortBy\"\r\n            id=\"sortBySelect\"\r\n            value={sortBy}\r\n            onChange={handleSortByChange}\r\n          >\r\n            <MenuItem value={\"email\"}>Email</MenuItem>\r\n            <MenuItem value={\"joinDate\"}>Join Date</MenuItem>\r\n            <MenuItem value={\"id\"}>ID</MenuItem>\r\n            <MenuItem value={\"role\"}>Role</MenuItem>\r\n            <MenuItem value={\"username\"}>Username</MenuItem>\r\n          </Select>\r\n        </div>\r\n        <div className={classes.adminSelector}>\r\n          <InputLabel id=\"direction\">Direction</InputLabel>\r\n          <Select\r\n            labelId=\"direction\"\r\n            id=\"direcitonSelect\"\r\n            value={direction}\r\n            onChange={handleDirectionChange}\r\n          >\r\n            <MenuItem value={\"ASC\"}>Ascending</MenuItem>\r\n            <MenuItem value={\"DESC\"}>Descending</MenuItem>\r\n          </Select>\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={12} key=\"search\" className={classes.adminSearchContainer}>\r\n        <Paper className={classes.adminSearchBar}>\r\n          <InputBase\r\n            className={classes.search}\r\n            autoComplete=\"off\"\r\n            placeholder=\"Search Members by Username\"\r\n            inputProps={{ \"aria-label\": \"search\" }}\r\n            onChange={handleSearchChange}\r\n            value={search}\r\n          />\r\n          <IconButton\r\n            type=\"submit\"\r\n            className={classes.iconButton}\r\n            aria-label=\"search\"\r\n            onClick={() => handleSearchSubmit()}\r\n          >\r\n            <SearchIcon />\r\n          </IconButton>\r\n        </Paper>\r\n        <div className={classes.adminSelectorMobileContainer}>\r\n          <FormControl className={classes.adminSelectorMobile}>\r\n            <InputLabel id=\"sortBy\">Sort By</InputLabel>\r\n            <Select\r\n              labelId=\"sortBy\"\r\n              id=\"sortBySelect\"\r\n              value={sortBy}\r\n              onChange={handleSortByChange}\r\n            >\r\n              <MenuItem value={\"email\"}>Email</MenuItem>\r\n              <MenuItem value={\"joinDate\"}>Join Date</MenuItem>\r\n              <MenuItem value={\"id\"}>ID</MenuItem>\r\n              <MenuItem value={\"username\"}>Username</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl className={classes.adminSelectorMobile}>\r\n            <InputLabel id=\"direction\">Direction</InputLabel>\r\n            <Select\r\n              labelId=\"direction\"\r\n              id=\"direcitonSelect\"\r\n              value={direction}\r\n              onChange={handleDirectionChange}\r\n            >\r\n              <MenuItem value={\"ASC\"}>Ascending</MenuItem>\r\n              <MenuItem value={\"DESC\"}>Descending</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n      </Grid>\r\n      <Grid container spacing={1} key=\"memberInfo\">\r\n        <Grid item xs={12} key={\"listTitle\"}>\r\n          <div className={classes.memberCard}>\r\n            <div className={classes.orderCardActionArea}>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.orderCardActionAreaItem}\r\n              >\r\n                ID\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.orderCardActionAreaItem2}\r\n              >\r\n                Username\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.orderCardActionAreaItem2}\r\n              >\r\n                Email\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.orderCardActionAreaItem2}\r\n              >\r\n                Full Name\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.orderCardActionAreaItem2}\r\n              >\r\n                Role\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.orderCardActionAreaItem1}\r\n              >\r\n                Join Date\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        {members.map((member) => (\r\n          <MemberCard member={member} key={member.id} />\r\n        ))}\r\n      </Grid>\r\n      <Grid item xs={12} key=\"pagination\" className={classes.pagination}>\r\n        <div className={classes.snacksPaginationContainer}>\r\n          <Pagination\r\n            count={totalPages}\r\n            color=\"primary\"\r\n            page={pageNumberUI}\r\n            onChange={(event, value) => {\r\n              handlePageChange(value);\r\n            }}\r\n          />\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Members;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Grid, Link } from \"@material-ui/core\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport useStyles from \"../../styles\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport OrderItem from \"../Account/OrderItem\";\r\n\r\nconst OrderAdmin = () => {\r\n  const { currentUser, logout } = useAuth();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [token, setToken] = useState(null);\r\n\r\n  const [order, setOrder] = useState(null);\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    const getOrder = async () => {\r\n      try {\r\n        const response = await SnackOverflow.get(`/admin/orders/${id}`, {\r\n          headers: { Authorization: token },\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          setOrder(response.data);\r\n        } else {\r\n          history.push(\"/admin/orders\");\r\n        }\r\n      } catch (error) {\r\n        history.push(\"/admin/orders\");\r\n      }\r\n    };\r\n\r\n    if (token !== null && id !== null) {\r\n      getOrder();\r\n    }\r\n  }, [id, token]);\r\n\r\n  const orderItemClick = (id) => {\r\n    history.push(`/admin/products/${id}`);\r\n  };\r\n\r\n  if (order === null) return <></>;\r\n\r\n  return (\r\n    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n      <Grid item xs={12} key=\"orderInfo\">\r\n        <Typography variant=\"h6\">Order #{order.id}</Typography>\r\n        <Typography variant=\"h6\">\r\n          User:{\" \"}\r\n          <Link href={`/admin/members?search=${order.user.username}`}>\r\n            {order.user.username}\r\n          </Link>\r\n        </Typography>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          key={\"orderListTitle\"}\r\n          className={classes.orderListTitle}\r\n        >\r\n          <Card className={classes.orderDetailsCard}>\r\n            <CardActionArea>\r\n              {order.items.map((item) => (\r\n                <OrderItem orderItem={item} orderItemClick={orderItemClick} />\r\n              ))}\r\n            </CardActionArea>\r\n            <CardContent>\r\n              <Typography variant=\"subtitle1\" align=\"right\">\r\n                Created:{\" \"}\r\n                {new Date(order.createdDate).toLocaleDateString(\"en-US\")}{\" \"}\r\n                {new Date(order.createdDate).toLocaleTimeString(\"en-US\")}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" align=\"right\">\r\n                Status: {order.status}\r\n              </Typography>\r\n              <div>\r\n                <Typography variant=\"subtitle1\" align=\"right\">\r\n                  Total ${order.total.toFixed(2)}\r\n                </Typography>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n      <div\r\n        item\r\n        key=\"billingAndShipping\"\r\n        className={classes.orderDetailsBillingAndShipping}\r\n      >\r\n        <Card className={classes.orderBillingAndShippingCard}>\r\n          <CardContent>\r\n            <Typography variant=\"h6\">Billing</Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              {order.billingDetails.name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              {order.billingDetails.email}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              {order.billingDetails.phone}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              {order.billingDetails.address.addressLineOne}\r\n            </Typography>\r\n            {order.billingDetails.address.addressLineTwo ? (\r\n              <Typography variant=\"subtitle1\">\r\n                {order.billingDetails.address.addressLineTwo}\r\n              </Typography>\r\n            ) : null}\r\n            <Typography variant=\"subtitle1\">\r\n              {order.billingDetails.address.city}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              {order.billingDetails.address.postalCode}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              {order.billingDetails.address.country}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n        <Card className={classes.orderBillingAndShippingCard}>\r\n          {order.isShippingSameAsBilling ? (\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Shipping</Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                Shipped to the billing address\r\n              </Typography>\r\n            </CardContent>\r\n          ) : (\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Shipping</Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                {order.shippingDetails.name}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                {order.shippingDetails.phone}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                {order.shippingDetails.address.addressLineOne}\r\n              </Typography>\r\n              {order.shippingDetails.address.addressLineTwo ? (\r\n                <Typography variant=\"subtitle1\">\r\n                  {order.shippingDetails.address.addressLineTwo}\r\n                </Typography>\r\n              ) : null}\r\n              <Typography variant=\"subtitle1\">\r\n                {order.shippingDetails.address.city}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                {order.shippingDetails.address.postalCode}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                {order.shippingDetails.address.country}\r\n              </Typography>\r\n            </CardContent>\r\n          )}\r\n        </Card>\r\n      </div>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default OrderAdmin;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useSnack from \"../../hooks/useSnack\";\r\nimport useStyles from \"../../styles\";\r\nimport {\r\n  TextField,\r\n  CardMedia,\r\n  Button,\r\n  IconButton,\r\n  InputAdornment,\r\n  Card,\r\n  Typography,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst EditProduct = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  let { id } = useParams();\r\n  const [snack] = useSnack(id);\r\n  const { currentUser } = useAuth();\r\n  const [token, setToken] = useState(null);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setSuccessMessage(\"\");\r\n    try {\r\n      const updateProductRequest = {\r\n        ...snack,\r\n        name,\r\n        images,\r\n        description,\r\n        price,\r\n      };\r\n      const response = await SnackOverflow.put(\r\n        \"/admin/products\",\r\n        updateProductRequest,\r\n        {\r\n          headers: { Authorization: token },\r\n        }\r\n      );\r\n\r\n      if (200 === response.status) {\r\n        setSuccessMessage(\"Update Success!\");\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        setErrorMessage(error.response.data.errors[0].defaultMessage);\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n        // http.ClientRequest in node.js\r\n        setErrorMessage(\"Something went wrong. Try again later\");\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        setErrorMessage(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (snack !== null && snack.images) {\r\n      setName(snack.name);\r\n      setImages(snack.images);\r\n      setDescription(snack.description);\r\n      setPrice(snack.price);\r\n    }\r\n  }, [snack]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setConfirmId(\"\");\r\n  };\r\n\r\n  const [confirmId, setConfirmId] = useState(\"\");\r\n  const [confirmIdError, setConfirmIdError] = useState(\"\");\r\n\r\n  const deleteProduct = async () => {\r\n    try {\r\n      const response = await SnackOverflow.delete(`/admin/products/${id}`, {\r\n        headers: { Authorization: token },\r\n      });\r\n\r\n      if (200 === response.status) {\r\n        history.push(\"/admin/products\");\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        setConfirmIdError(error.response.data.errors[0].defaultMessage);\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n        // http.ClientRequest in node.js\r\n        setConfirmIdError(\"Something went wrong. Try again later\");\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        setConfirmIdError(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleConfirmDelete = (event) => {\r\n    event.preventDefault();\r\n    setConfirmIdError(\"\");\r\n    if (confirmId == snack.id) {\r\n      deleteProduct();\r\n    } else {\r\n      setConfirmIdError(\"ID does not match match\");\r\n    }\r\n  };\r\n\r\n  if (snack.deleted) {\r\n    return (\r\n      <div>\r\n        <div className={classes.cartHeader}>\r\n          <h2 className={classes.error}>Product #{id} no longer exists</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={classes.cartHeader}>\r\n        <h2 className={classes.cartHeaderTitle}>Product #{id}</h2>\r\n        <Button\r\n          className={classes.error}\r\n          size=\"small\"\r\n          onClick={handleClickOpen}\r\n          startIcon={<DeleteForeverIcon />}\r\n        >\r\n          Delete\r\n        </Button>\r\n        <Dialog\r\n          fullScreen={fullScreen}\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"responsive-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"responsive-dialog-title\">\r\n            {`Confirm delete by entering the Product ID`}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"confirmId\"\r\n              label={`Enter '${id}' to confirm`}\r\n              name=\"confirmId\"\r\n              autoComplete=\"false\"\r\n              onChange={(event) => {\r\n                setConfirmId(event.target.value);\r\n              }}\r\n              helperText={confirmIdError}\r\n              error={confirmIdError ? true : false}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button autoFocus onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleConfirmDelete} color=\"primary\" autoFocus>\r\n              Confirm\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n\r\n      <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"name\"\r\n          label=\"Name\"\r\n          name=\"name\"\r\n          autoComplete=\"false\"\r\n          value={name}\r\n          onChange={(event) => {\r\n            setName(event.target.value);\r\n          }}\r\n        />\r\n        <Images images={images} setImages={setImages} />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          multiline\r\n          rows={4}\r\n          id=\"description\"\r\n          label=\"Description\"\r\n          name=\"description\"\r\n          autoComplete=\"false\"\r\n          value={description}\r\n          onChange={(event) => {\r\n            setDescription(event.target.value);\r\n          }}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          type=\"number\"\r\n          required\r\n          fullWidth\r\n          id=\"price\"\r\n          label=\"Price\"\r\n          name=\"price\"\r\n          autoComplete=\"false\"\r\n          value={price}\r\n          InputProps={{\r\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n          }}\r\n          onChange={(event) => {\r\n            setPrice(event.target.value);\r\n          }}\r\n        />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Typography variant=\"h6\" className={classes.success}>\r\n          {successMessage}\r\n        </Typography>\r\n        <Typography variant=\"h6\" className={classes.error}>\r\n          {errorMessage}\r\n        </Typography>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Images = ({ images, setImages }) => {\r\n  const classes = useStyles();\r\n\r\n  const addMoreClick = () => {\r\n    setImages((images) => [...images, \"\"]);\r\n  };\r\n\r\n  const deleteClick = (index) => {\r\n    let arrayUpdate = [...images];\r\n    arrayUpdate.splice(index, 1);\r\n    setImages(arrayUpdate);\r\n  };\r\n\r\n  const updateImage = (index, value) => {\r\n    let arrayUpdate = [...images];\r\n    arrayUpdate[index] = value;\r\n    setImages(arrayUpdate);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.imageSection}>\r\n      {images.map((image, index) => (\r\n        <Card title={index} className={classes.editImageContainer} key={index}>\r\n          <div className={classes.editImageContainerImageContainer}>\r\n            <CardMedia\r\n              image={images[index]}\r\n              className={classes.editImageInputImage}\r\n              title={\"Image Preview\"}\r\n            />\r\n          </div>\r\n          <div className={classes.editImageInputTextInput}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"imageUrl\"\r\n              label=\"Image Url\"\r\n              name=\"imageUrl\"\r\n              autoComplete=\"false\"\r\n              value={images[index]}\r\n              onChange={(event) => {\r\n                updateImage(index, event.target.value);\r\n              }}\r\n            />\r\n            <IconButton onClick={() => deleteClick(index)}>\r\n              <DeleteIcon color=\"error\" />\r\n            </IconButton>\r\n          </div>\r\n        </Card>\r\n      ))}\r\n      <div className={classes.deleteImageContainer}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          onClick={() => addMoreClick()}\r\n        >\r\n          Add Image\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProduct;\r\n","import React from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport { Grid, Typography, Card, CardActionArea } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ProductPurchasedCard = ({ orderedItem }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const itemClick = (id) => {\r\n    history.push(`/admin/orders/${id}`);\r\n  };\r\n  return (\r\n    <Grid item xs={12} key={orderedItem.id}>\r\n      <Card className={classes.orderCardMobile}>\r\n        <CardActionArea\r\n          onClick={() => itemClick(orderedItem.orderId)}\r\n          className={classes.orderCardActionAreaMobile}\r\n        >\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            Order ID: {orderedItem.orderId}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem2}\r\n          >\r\n            Date:{\" \"}\r\n            {new Date(orderedItem.orderCreatedDate).toLocaleDateString(\"en-US\")}{\" \"}\r\n            {new Date(orderedItem.orderCreatedDate).toLocaleTimeString(\"en-US\")}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            Order Status: {orderedItem.orderStatus}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            Price: ${orderedItem.price.toFixed(2)}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            Quantity: {orderedItem.quantity}\r\n          </Typography>\r\n        </CardActionArea>\r\n      </Card>\r\n      <Card className={classes.orderCard}>\r\n        <CardActionArea\r\n          onClick={() => itemClick(orderedItem.orderId)}\r\n          className={classes.orderCardActionArea}\r\n        >\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            {orderedItem.orderId}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.orderCardActionAreaItem}\r\n          >\r\n            {new Date(orderedItem.orderCreatedDate).toLocaleDateString(\"en-US\")}\r\n          </Typography>\r\n          {orderedItem.orderStatus === \"CANCELLED\" ||\r\n          orderedItem.orderStatus === \"FAILED\" ||\r\n          orderedItem.orderStatus === \"REFUNDED\" ? (\r\n            <div className={classes.orderCardActionAreaItem}>\r\n              <Typography variant=\"subtitle1\" className={classes.error}>\r\n                {orderedItem.orderStatus}\r\n              </Typography>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.orderCardActionAreaItem}>\r\n              <Typography variant=\"subtitle1\" className={classes.success}>\r\n                {orderedItem.orderStatus}\r\n              </Typography>\r\n            </div>\r\n          )}\r\n\r\n          {orderedItem.orderStatus === \"CANCELLED\" ||\r\n          orderedItem.orderStatus === \"FAILED\" ||\r\n          orderedItem.orderStatus === \"REFUNDED\" ? (\r\n            <div className={classes.orderCardActionAreaItem}>\r\n              <Typography variant=\"subtitle1\" className={classes.error}>\r\n                ${orderedItem.price.toFixed(2)}\r\n              </Typography>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.orderCardActionAreaItem}>\r\n              <Typography variant=\"subtitle1\" className={classes.success}>\r\n                ${orderedItem.price.toFixed(2)}\r\n              </Typography>\r\n            </div>\r\n          )}\r\n\r\n          {orderedItem.orderStatus === \"CANCELLED\" ||\r\n          orderedItem.orderStatus === \"FAILED\" ||\r\n          orderedItem.orderStatus === \"REFUNDED\" ? (\r\n            <div className={classes.orderCardActionAreaItem}>\r\n              <Typography variant=\"subtitle1\" className={classes.error}>\r\n                {orderedItem.quantity}\r\n              </Typography>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.orderCardActionAreaItem}>\r\n              <Typography variant=\"subtitle1\" className={classes.success}>\r\n                {orderedItem.quantity}\r\n              </Typography>\r\n            </div>\r\n          )}\r\n        </CardActionArea>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductPurchasedCard;\r\n","import React from \"react\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport useProduct from \"../../hooks/useProduct\";\r\nimport useStyles from \"../../styles\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\nimport ProductPurchasedCard from \"./ProductPurchasedCard\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport CarouselItem from \"../CarouselItem\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nconst ProductInfo = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  let { id } = useParams();\r\n  const [product] = useProduct(id);\r\n  const [orderedItems, setOrderedItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (product !== null) {\r\n      setOrderedItems(product.orderedItems);\r\n    }\r\n  }, [product]);\r\n\r\n  const editProductClick = (product) => {\r\n    history.push(`/admin/products/edit/${product.id}`);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n        {product.deleted ? (\r\n          <h2 className={classes.error}>This product is no longer available</h2>\r\n        ) : null}\r\n        <Grid item xs={12} key=\"title\" className={classes.cartHeader}>\r\n          <h2 className={classes.cartHeaderTitle}>Product Information</h2>\r\n          {product.deleted ? null : (\r\n            <Button\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              onClick={() => editProductClick(product)}\r\n              startIcon={<EditIcon />}\r\n            >\r\n              Edit\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} title=\"image\">\r\n          {product.images ? (\r\n            <Carousel\r\n              navButtonsAlwaysVisible={true}\r\n              next={() => {\r\n                /* Do stuff */\r\n              }}\r\n              prev={() => {\r\n                /* Do other stuff */\r\n              }}\r\n            >\r\n              {product.images.map((image, i) => (\r\n                <CarouselItem key={i} name={product.name} image={image} />\r\n              ))}\r\n            </Carousel>\r\n          ) : null}\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} title=\"description\">\r\n          <Typography gutterBottom variant=\"h5\" component=\"h5\">\r\n            {product.name}\r\n          </Typography>\r\n          <Typography variant=\"h6\" component=\"h6\">\r\n            ${product.price ? product.price.toFixed(2) : \"0.00\"}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {product.description}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} title=\"orderedItems\">\r\n          <Typography gutterBottom variant=\"h5\" component=\"h5\">\r\n            Sales\r\n          </Typography>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            key={\"orderListTitle\"}\r\n            className={classes.orderListTitle}\r\n          >\r\n            <div className={classes.orderCard}>\r\n              <div className={classes.orderCardActionArea}>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  className={classes.orderCardActionAreaItem}\r\n                >\r\n                  Order ID\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  className={classes.orderCardActionAreaItem}\r\n                >\r\n                  Date\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  className={classes.orderCardActionAreaItem}\r\n                >\r\n                  Status\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  className={classes.orderCardActionAreaItem}\r\n                >\r\n                  Price\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  className={classes.orderCardActionAreaItem}\r\n                >\r\n                  Quantity\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n          {orderedItems\r\n            ? orderedItems.map((orderedItem) => (\r\n                <ProductPurchasedCard orderedItem={orderedItem} />\r\n              ))\r\n            : null}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductInfo;\r\n","import { useState, useEffect } from \"react\";\r\nimport SnackOverflow from \"../api/SnackOverflow\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\n\r\nexport default (id) => {\r\n  const [product, setProduct] = useState({});\r\n  const [token, setToken] = useState(null);\r\n  const { currentUser } = useAuth();\r\n\r\n  const getProduct = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(`/admin/products/${id}`, {\r\n        headers: { Authorization: token },\r\n      });\r\n      setProduct(response.data);\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    if (token !== null) {\r\n      getProduct();\r\n    }\r\n  }, [token]);\r\n\r\n  return [product];\r\n};\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport {\r\n  TextField,\r\n  CardMedia,\r\n  Button,\r\n  IconButton,\r\n  InputAdornment,\r\n  Card,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst CreateProduct = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { currentUser } = useAuth();\r\n  const [token, setToken] = useState(null);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [categories, setCategories] = useState([]);\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (currentUser) setToken(\"Bearer \" + currentUser.authenticationToken);\r\n  }, [currentUser]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setSuccessMessage(\"\");\r\n    setErrorMessage(\"\");\r\n    try {\r\n      const updateProductRequest = {\r\n        name,\r\n        images,\r\n        description,\r\n        price,\r\n        categories,\r\n      };\r\n      const response = await SnackOverflow.post(\r\n        \"/admin/products\",\r\n        updateProductRequest,\r\n        {\r\n          headers: { Authorization: token },\r\n        }\r\n      );\r\n\r\n      if (201 === response.status) {\r\n        setSuccessMessage(\"Update Success!\");\r\n        history.push(`/admin/products/${response.data.id}`);\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        setErrorMessage(error.response.data.errors[0].defaultMessage);\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n        // http.ClientRequest in node.js\r\n        setErrorMessage(\"Something went wrong. Try again later\");\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        setErrorMessage(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className={classes.cartHeaderTitle}>Create New Product</h2>\r\n      <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"name\"\r\n          label=\"Name\"\r\n          name=\"name\"\r\n          autoComplete=\"false\"\r\n          value={name}\r\n          onChange={(event) => {\r\n            setName(event.target.value);\r\n          }}\r\n        />\r\n        <Images images={images} setImages={setImages} />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          multiline\r\n          rows={4}\r\n          id=\"description\"\r\n          label=\"Description\"\r\n          name=\"description\"\r\n          autoComplete=\"false\"\r\n          value={description}\r\n          onChange={(event) => {\r\n            setDescription(event.target.value);\r\n          }}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          type=\"number\"\r\n          required\r\n          fullWidth\r\n          id=\"price\"\r\n          label=\"Price\"\r\n          name=\"price\"\r\n          autoComplete=\"false\"\r\n          value={price}\r\n          InputProps={{\r\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n          }}\r\n          onChange={(event) => {\r\n            setPrice(event.target.value);\r\n          }}\r\n        />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Typography variant=\"h6\" className={classes.success}>\r\n          {successMessage}\r\n        </Typography>\r\n        <Typography variant=\"h6\" className={classes.error}>\r\n          {errorMessage}\r\n        </Typography>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Images = ({ images, setImages }) => {\r\n  const classes = useStyles();\r\n\r\n  const addMoreClick = () => {\r\n    setImages((images) => [...images, \"\"]);\r\n  };\r\n\r\n  const deleteClick = (index) => {\r\n    let arrayUpdate = [...images];\r\n    arrayUpdate.splice(index, 1);\r\n    setImages(arrayUpdate);\r\n  };\r\n\r\n  const updateImage = (index, value) => {\r\n    let arrayUpdate = [...images];\r\n    arrayUpdate[index] = value;\r\n    setImages(arrayUpdate);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.imageSection}>\r\n      {images.map((image, index) => (\r\n        <Card title={index} className={classes.editImageContainer} key={index}>\r\n          <div className={classes.editImageContainerImageContainer}>\r\n            <CardMedia\r\n              image={images[index]}\r\n              className={classes.editImageInputImage}\r\n              title={\"Image Preview\"}\r\n            />\r\n          </div>\r\n          <div className={classes.editImageInputTextInput}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"imageUrl\"\r\n              label=\"Image Url\"\r\n              name=\"imageUrl\"\r\n              autoComplete=\"false\"\r\n              value={images[index]}\r\n              onChange={(event) => {\r\n                updateImage(index, event.target.value);\r\n              }}\r\n            />\r\n            <IconButton onClick={() => deleteClick(index)}>\r\n              <DeleteIcon color=\"error\" />\r\n            </IconButton>\r\n          </div>\r\n        </Card>\r\n      ))}\r\n      <div className={classes.deleteImageContainer}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          onClick={() => addMoreClick()}\r\n        >\r\n          Add Image\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateProduct;\r\n","import React from \"react\";\r\nimport useStyles from \"../../styles\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport { Button, Box } from \"@material-ui/core\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport StorefrontIcon from \"@material-ui/icons/Storefront\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Orders from \"./Orders\";\r\nimport ProductsAdmin from \"./ProductsAdmin\";\r\nimport Members from \"./Members\";\r\nimport OrderAdmin from \"./OrderAdmin\";\r\nimport EditProduct from \"./EditProduct\";\r\nimport ProductInfo from \"./ProductInfo\";\r\nimport CreateProduct from \"./CreateProduct\";\r\n\r\nconst Admin = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const handleClick = (url) => {\r\n    history.push(url);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.dashboard}>\r\n      <div className={classes.dashboardMenu}>\r\n        <Button\r\n          onClick={() => handleClick(\"/admin\")}\r\n          size=\"large\"\r\n          className={classes.dashboardMenuItem}\r\n          startIcon={<DashboardIcon />}\r\n        >\r\n          Dashboard\r\n        </Button>\r\n        <Button\r\n          onClick={() => handleClick(\"/admin/orders\")}\r\n          size=\"large\"\r\n          className={classes.dashboardMenuItem}\r\n          startIcon={<ListAltIcon />}\r\n        >\r\n          Orders\r\n        </Button>\r\n        <Button\r\n          onClick={() => handleClick(\"/admin/products\")}\r\n          size=\"large\"\r\n          className={classes.dashboardMenuItem}\r\n          startIcon={<StorefrontIcon />}\r\n        >\r\n          Products\r\n        </Button>\r\n        <Button\r\n          onClick={() => handleClick(\"/admin/members\")}\r\n          size=\"large\"\r\n          className={classes.dashboardMenuItem}\r\n          startIcon={<PeopleIcon />}\r\n        >\r\n          Members\r\n        </Button>\r\n      </div>\r\n      <div className={classes.dashboardMenuMobile}>\r\n        <Button\r\n          onClick={() => handleClick(\"/admin\")}\r\n          size=\"large\"\r\n          className={classes.dashboardMenuItem}\r\n          startIcon={<DashboardIcon />}\r\n        ></Button>\r\n        <Button\r\n          onClick={() => handleClick(\"/admin/orders\")}\r\n          size=\"large\"\r\n          className={classes.dashboardMenuItem}\r\n          startIcon={<ListAltIcon />}\r\n        ></Button>\r\n        <Button\r\n          onClick={() => handleClick(\"/admin/products\")}\r\n          size=\"large\"\r\n          className={classes.dashboardMenuItem}\r\n          startIcon={<StorefrontIcon />}\r\n        ></Button>\r\n        <Button\r\n          onClick={() => handleClick(\"/admin/members\")}\r\n          size=\"large\"\r\n          className={classes.dashboardMenuItem}\r\n          startIcon={<PeopleIcon />}\r\n        ></Button>\r\n      </div>\r\n      <div className={classes.dashboardContent}>\r\n        <Switch>\r\n          <Route path=\"/admin/orders/:id\">\r\n            <OrderAdmin />\r\n          </Route>\r\n          <Route path=\"/admin/orders\">\r\n            <Orders />\r\n          </Route>\r\n          <Route path=\"/admin/products/new\">\r\n            <CreateProduct />\r\n          </Route>\r\n          <Route path=\"/admin/products/edit/:id\">\r\n            <EditProduct />\r\n          </Route>\r\n          <Route path=\"/admin/products/:id\">\r\n            <ProductInfo />\r\n          </Route>\r\n          <Route path=\"/admin/products\">\r\n            <ProductsAdmin />\r\n          </Route>\r\n          <Route path=\"/admin/members\">\r\n            <Members />\r\n          </Route>\r\n          <Route path=\"/admin\">\r\n            <Dashboard />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { Grid, Typography, CardMedia } from \"@material-ui/core\";\r\n\r\nimport SnackCard from \"../SnackSearch/SnackCard\";\r\nimport useStyles from \"../../styles\";\r\nimport SnackOverflow from \"../../api/SnackOverflow\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\n\r\nconst Home = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [popularSnacks, setPopularSnacks] = useState([]);\r\n  const [newestSnacks, setNewestSnacks] = useState([]);\r\n\r\n  const getPopularSnacks = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(\"/products\", {\r\n        params: {\r\n          search: \"\",\r\n          pageSize: 10,\r\n          pageNumber: 0,\r\n          sortBy: \"unitsSold\",\r\n          sortDirection: \"DESC\",\r\n          itemsSold: \"month\",\r\n        },\r\n      });\r\n      setPopularSnacks(response.data.content);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const getNewestSnacks = async () => {\r\n    try {\r\n      let response = await SnackOverflow.get(\"/products\", {\r\n        params: {\r\n          search: \"\",\r\n          pageSize: 9,\r\n          pageNumber: 0,\r\n          sortBy: \"createdDate\",\r\n          sortDirection: \"DESC\",\r\n          itemsSold: \"all\",\r\n        },\r\n      });\r\n      setNewestSnacks(response.data.content);\r\n    } catch (error) {}\r\n  };\r\n\r\n  // Call Get Snacks Once\r\n  useEffect(() => {\r\n    getPopularSnacks();\r\n    getNewestSnacks();\r\n  }, []);\r\n\r\n  const snackClick = (snack) => {\r\n    history.push(`/snacks/${snack.id}`);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Grid\r\n        container\r\n        spacing={5}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item xs={12} key=\"title\" className={classes.cartHeader}>\r\n          <h2 className={classes.cartHeaderTitle}>Most Popular This Month</h2>\r\n        </Grid>\r\n        <Carousel\r\n          className={classes.homeCarousel}\r\n          navButtonsAlwaysVisible={true}\r\n          next={() => {\r\n            /* Do stuff */\r\n          }}\r\n          prev={() => {\r\n            /* Do other stuff */\r\n          }}\r\n        >\r\n          {popularSnacks.map((snack, i) => (\r\n            <div\r\n              className={classes.snackCarouselItem}\r\n              key={\"popular.\" + snack.id}\r\n              onClick={() => snackClick(snack)}\r\n            >\r\n              <div className={classes.snackCarouselItemContent}>\r\n                <CardMedia\r\n                  className={classes.snackItemCarouselImage}\r\n                  image={snack.images[0] ? snack.images[0] : null}\r\n                  title={snack.name}\r\n                />\r\n                <div className={classes.snackItemCarouselDescription}>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h5\">\r\n                    {snack.name}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" component=\"h6\">\r\n                    ${snack.price.toFixed(2)}\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    {snack.description}\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </Carousel>\r\n        <Grid item xs={12} key=\"title2\" className={classes.cartHeader}>\r\n          <h2 className={classes.cartHeaderTitle}>New Snacks</h2>\r\n        </Grid>\r\n        {newestSnacks.map((snack) => (\r\n          <SnackCard snack={snack} key={\"newest.\" + snack.id} />\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import \"./App.css\";\r\nimport \"@fontsource/roboto\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { CssBaseline, Container } from \"@material-ui/core\";\r\nimport {\r\n  ThemeProvider,\r\n  createTheme,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport { AuthProvider } from \"./context/AuthContext\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport { CartProvider } from \"./context/CartContext\";\r\n\r\nimport Navbar from \"./components/Navbar\";\r\nimport Snacks from \"./components/SnackSearch/Snacks\";\r\nimport Snack from \"./components/SnackPage/Snack\";\r\nimport Footer from \"./components/Footer\";\r\nimport LoginSignup from \"./components/Account/LoginSignup\";\r\nimport Account from \"./components/Account/Account\";\r\nimport Cart from \"./components/Cart/Cart\";\r\nimport Checkout from \"./components/Checkout/Checkout\";\r\nimport CheckoutSuccess from \"./components/Checkout/CheckoutSuccess\";\r\nimport CartRoute from \"./components/Checkout/CheckoutRoute\";\r\nimport Contact from \"./components/Contact/Contact\";\r\nimport Order from \"./components/Account/Order\";\r\nimport AdminRoute from \"./components/AdminRoute\";\r\nimport Admin from \"./components/Admin/Admin\";\r\nimport Home from \"./components/Home/Home\";\r\n\r\nfunction App() {\r\n  // Theme colors\r\n  // Blue: #00B1C6 or rgb(0,177,198)\r\n  // Yellow: #F8EB37 or rgb(248,235,55)\r\n  // Orange: #F3AB1C or rgb(243,171,28)\r\n  const theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#00B1C6\",\r\n        contrastText: \"#fff\",\r\n      },\r\n      secondary: {\r\n        main: \"#F8EB37\",\r\n      },\r\n      success: {\r\n        main: \"#4caf50\",\r\n      },\r\n    },\r\n  });\r\n\r\n  // Not using the styles.js because the theme created isn't being applied to the classes in App.js\r\n  // The theme does get applied to useStyles from styles.js when used on child components\r\n  const useStyles = makeStyles((theme) => ({\r\n    app: {\r\n      minHeight: \"100vh\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    main: {\r\n      paddingTop: 186,\r\n      backgroundImage: `url(${process.env.PUBLIC_URL + \"/pattern.png\"})`,\r\n      display: \"flex\",\r\n      flex: 1,\r\n    },\r\n    container: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      // padding: 20,\r\n      padding: 0,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AuthProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <CartProvider>\r\n          <CssBaseline />\r\n          <Router>\r\n            <div className={classes.app}>\r\n              <Navbar />\r\n              <main className={classes.main}>\r\n                <Container className={classes.container} maxWidth=\"lg\">\r\n                  <Switch>\r\n                    <Route path=\"/snacks/:id\">\r\n                      <Snack />\r\n                    </Route>\r\n                    <Route path=\"/snacks\">\r\n                      <Snacks />\r\n                    </Route>\r\n                    <Route path=\"/contact\">\r\n                      <Contact />\r\n                    </Route>\r\n                    <Route path=\"/login\">\r\n                      <LoginSignup />\r\n                    </Route>\r\n                    <Route path=\"/cart\">\r\n                      <Cart />\r\n                    </Route>\r\n                    <AdminRoute path=\"/admin\">\r\n                      <Admin />\r\n                    </AdminRoute>\r\n                    <PrivateRoute path=\"/account/orders/:id\">\r\n                      <Order />\r\n                    </PrivateRoute>\r\n                    <PrivateRoute path=\"/account\">\r\n                      <Account />\r\n                    </PrivateRoute>\r\n                    <PrivateRoute path=\"/checkout/success\">\r\n                      <CheckoutSuccess />\r\n                    </PrivateRoute>\r\n                    <PrivateRoute path=\"/checkout\">\r\n                      <CartRoute path=\"/checkout\">\r\n                        <Checkout />\r\n                      </CartRoute>\r\n                    </PrivateRoute>\r\n                    <Route path=\"/\">\r\n                      <Home />\r\n                    </Route>\r\n                  </Switch>\r\n                </Container>\r\n              </main>\r\n              <Footer />\r\n            </div>\r\n          </Router>\r\n        </CartProvider>\r\n      </ThemeProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}